(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))e(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&e(n)}).observe(document,{childList:!0,subtree:!0});function a(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function e(o){if(o.ep)return;o.ep=!0;const r=a(o);fetch(o.href,r)}})();const ae=52/12,ee=1,Z=["#64ffda","#90caf9","#ffd54f","#ff8a80","#ce93d8","#80cbc4"],X={seasonLengthMonths:5,sargassumVolumeM3:7183.15,workDaysPerWeek:6,workHoursPerDay:5,trailerCapacityM3:2,timePerWorkerLoadM3Minutes:25,atvSpeedKmh:3,beachLengthM:600,loadTransferTimeMinutes:11},re={minutesPerSecond:ee,atvOverrideEnabled:!1,atvOverrideCount:null},ie=[{key:"seasonLengthMonths",label:"Length of season (months)",min:1,max:12,step:.1,section:"season"},{key:"sargassumVolumeM3",label:"Estimated Sargassum volume (m³)",min:0,max:2e4,step:10,section:"season"},{key:"workDaysPerWeek",label:"Working days per week",min:1,max:7,step:1,section:"season"},{key:"workHoursPerDay",label:"Working hours per day",min:1,max:24,step:.5,section:"season"},{key:"trailerCapacityM3",label:"Trailer capacity (m³)",min:.1,max:5,step:.1,section:"labor"},{key:"timePerWorkerLoadM3Minutes",label:"Time to load 1 m³ per worker (minutes)",min:1,max:60,step:1,section:"labor"},{key:"atvSpeedKmh",label:"ATV speed (km/h)",min:0,max:15,step:.1,section:"atv"},{key:"beachLengthM",label:"Beach length (m)",min:60,max:1500,step:10,section:"atv"},{key:"loadTransferTimeMinutes",label:"Load transfer wait (minutes)",min:0,max:60,step:1,section:"atv"}],se=[{key:"avgDailyRemoval",label:"Average daily removal (m³)",format:t=>b(t,{maximumFractionDigits:2})},{key:"avgHourlyRemoval",label:"Average hourly removal (m³)",format:t=>b(t,{maximumFractionDigits:2})},{key:"trailersPerDay",label:"Trailer loads per day",format:t=>b(t,{maximumFractionDigits:2})},{key:"timeWorkerLoadHours",label:"Worker hours to load trailers (per day)",format:t=>b(t,{maximumFractionDigits:2})},{key:"requiredBeachWorkers",label:"Beach workers required (load crew)",format:t=>b(t,{maximumFractionDigits:2})},{key:"timeToLoadTrailerMinutes",label:"Time to load trailer (minutes)",format:t=>b(t,{maximumFractionDigits:2})},{key:"timeToLoadingAreaMinutes",label:"Travel to loading area (minutes)",format:t=>b(t,{maximumFractionDigits:2})},{key:"totalAtvTimePerLoadMinutes",label:"ATV cycle time per load (minutes)",format:t=>b(t,{maximumFractionDigits:2})},{key:"timePerAtvHours",label:"ATV duty time (hours/day)",format:t=>b(t,{maximumFractionDigits:2})},{key:"requiredAtvs",label:"Required # of ATVs",format:t=>b(t,{maximumFractionDigits:2})},{key:"requiredAtvDrivers",label:"Required # of ATV drivers",format:t=>b(t,{maximumFractionDigits:2})},{key:"requiredUnloadWorkers",label:"Required # of unload workers",format:t=>b(t,{maximumFractionDigits:2})},{key:"integerLoads",label:"Loads simulated today",format:t=>b(t,{maximumFractionDigits:0})},{key:"integerAtvs",label:"ATVs in rotation",format:t=>b(t,{maximumFractionDigits:0})},{key:"totalMinutes",label:"Day cycle duration (minutes)",format:t=>b(t,{maximumFractionDigits:1}),note:"Full rotation for busiest ATV within the day"}];function b(t,l={}){return Number.isFinite(t)?new Intl.NumberFormat("en-US",{maximumFractionDigits:2,minimumFractionDigits:0,...l}).format(t):"—"}function le(t){const l=t.seasonLengthMonths*ae,a=l*t.workDaysPerWeek,e=a>0?t.sargassumVolumeM3/a:0,o=t.workHoursPerDay>0?e/t.workHoursPerDay:0,r=t.trailerCapacityM3>0?e/t.trailerCapacityM3:0,i=t.timePerWorkerLoadM3Minutes*e/60,d=t.workHoursPerDay>0?i/t.workHoursPerDay:0,h=d>0?t.trailerCapacityM3*t.timePerWorkerLoadM3Minutes/d:0,P=t.atvSpeedKmh*1e3/60,q=t.beachLengthM/2,C=P>0?q/P:0,S=C,O=C+h+S,g=O*r/60,H=t.workHoursPerDay>0?g/t.workHoursPerDay:0,N=H,W=t.workHoursPerDay>0?r*h/60/t.workHoursPerDay:0,V=Math.max(1,Math.round(r)),R=Math.max(1,Math.ceil(H));return{workingWeeks:l,workingDaysSeason:a,avgDailyRemoval:e,avgHourlyRemoval:o,trailersPerDay:r,timeWorkerLoadHours:i,requiredBeachWorkers:d,timeToLoadTrailerMinutes:h,timeToLoadingAreaMinutes:C,totalAtvTimePerLoadMinutes:O,timePerAtvHours:g,requiredAtvs:H,requiredAtvDrivers:N,requiredUnloadWorkers:W,integerLoads:V,integerAtvs:R}}function de(t,l,a={}){const e=l.integerLoads,o=Number(a.overrideAtvCount),r=Number.isFinite(o)&&o>0?Math.max(1,Math.round(o)):null,n=r??l.integerAtvs,i=[],d=[],h=Array.from({length:n},()=>[]),P=Array.from({length:n},()=>0),q=Math.max(0,t.loadTransferTimeMinutes??0);if(e<=0||n<=0)return{loadMarkers:i,segmentsByAtv:h,totalMinutes:0,numLoads:0,numAtvs:n,loadStates:d};const C=t.beachLengthM/e,S=l.timeToLoadTrailerMinutes,O=t.atvSpeedKmh>0?t.atvSpeedKmh*1e3/60:0;let g=0,H=0;const N=Array.from({length:e},(y,A)=>{const s=A*C,u=(A+1)*C,v=s+C/2;return{loadIndex:A+1,startPosM:s,endPosM:u,centerPosM:v}});i.push(...N.map(y=>y.centerPosM).sort((y,A)=>y-A));const W=[];let V=0,R=e-1,_=!0;for(;V<=R;)_?(W.push({...N[V],crew:"West crew"}),V+=1):(W.push({...N[R],crew:"East crew"}),R-=1),_=!_;return W.length&&e%2===1&&(W[W.length-1].crew="Both crews"),W.forEach(y=>{const A=y.centerPosM,s=y.startPosM,u=y.endPosM,v=Math.min(A,5),p=O>0?A/O:0,w=O>0?Math.max(A-v,0)/O:0,M=O>0?v/O:0;let c=0,I=P[0];for(let F=1;F<n;F+=1)P[F]<I-Number.EPSILON&&(I=P[F],c=F);const L=P[c],m=L+p,x=m+S,T=x+w,k=T+M;let f=0,D=k;D<g&&(f=g-D,D=g);const $=D+q,E=F=>{h[c].push(F),H=Math.max(H,F.endMin)};E({atvId:c,loadId:y.loadIndex,phase:"outbound",startMin:L,endMin:m,startPosM:0,endPosM:A}),E({atvId:c,loadId:y.loadIndex,phase:"loading",startMin:m,endMin:x,startPosM:A,endPosM:A}),w>0?E({atvId:c,loadId:y.loadIndex,phase:"return",startMin:x,endMin:T,startPosM:A,endPosM:v}):E({atvId:c,loadId:y.loadIndex,phase:"return",startMin:x,endMin:x,startPosM:A,endPosM:v}),f>0&&E({atvId:c,loadId:y.loadIndex,phase:"hold",startMin:T,endMin:T+f,startPosM:v,endPosM:v}),E({atvId:c,loadId:y.loadIndex,phase:"approach",startMin:T+f,endMin:D,startPosM:v,endPosM:0}),E({atvId:c,loadId:y.loadIndex,phase:"transfer",startMin:D,endMin:$,startPosM:0,endPosM:0}),P[c]=$,g=$,d.push({startPosM:s,endPosM:u,arrivalMin:m,cleanedAtMinute:x,crew:y.crew,loadId:y.loadIndex})}),{loadMarkers:i,segmentsByAtv:h.map(y=>y.sort((A,s)=>A.startMin-s.startMin)),totalMinutes:H,numLoads:e,numAtvs:n,loadStates:d,overrideAtvCount:r}}function ce(){const t=document.querySelector("#app");return t.innerHTML=`
    <section class="controls">
      <div class="control-header">
        <h1>HMB Beach Cleanup Model</h1>
        <p>Set the season-scale inputs from the spreadsheet; the animation shows how one workday plays out with those assumptions.</p>
      </div>
      <div class="controls-groups">
        <div class="control-group">
          <h2>Season Parameters</h2>
          <div class="input-grid" data-section="season"></div>
        </div>
        <div class="control-group">
          <h2>Trailer &amp; Labor</h2>
          <div class="input-grid" data-section="labor"></div>
        </div>
        <div class="control-group">
          <h2>ATV Operations</h2>
          <div class="input-grid" data-section="atv"></div>
          <div class="field override-field">
            <label for="atvOverrideToggle">Override # of ATVs</label>
            <div class="override-controls">
              <select id="atvOverrideToggle">
                <option value="no">No</option>
                <option value="yes">Yes</option>
              </select>
              <input
                type="number"
                id="atvOverrideInput"
                min="1"
                step="1"
                placeholder="Manual count"
              />
            </div>
            <span class="field-note" id="atvOverrideHint"></span>
          </div>
        </div>
      </div>
      <div class="derived-section" id="derivedSection">
        <div class="derived-header">
          <h2>Derived Metrics</h2>
          <button type="button" class="toggle-derived" id="toggleDerived">Hide metrics</button>
        </div>
        <ul class="metrics-list" id="derivedMetrics"></ul>
      </div>
      <div class="status" id="status"></div>
    </section>
    <section class="simulation">
      <div class="canvas-container">
        <canvas id="beachCanvas" width="960" height="520"></canvas>
        <div class="canvas-overlay canvas-overlay-top">
          <span id="timeLabel" class="sim-time">Sim time 00:00</span>
          <div class="speed-slider">
            <input type="range" id="speedSlider" min="1" max="60" step="1" />
            <span id="speedValue"></span>
          </div>
        </div>
        <div class="canvas-overlay canvas-overlay-bottom">
          <span id="detailsLabel"></span>
        </div>
      </div>
    </section>
  `,{canvas:document.querySelector("#beachCanvas"),derivedList:document.querySelector("#derivedMetrics"),status:document.querySelector("#status"),timeLabel:document.querySelector("#timeLabel"),detailsLabel:document.querySelector("#detailsLabel"),derivedSection:document.querySelector("#derivedSection"),derivedToggle:document.querySelector("#toggleDerived"),speedSlider:document.querySelector("#speedSlider"),speedValue:document.querySelector("#speedValue"),atvOverrideToggle:document.querySelector("#atvOverrideToggle"),atvOverrideInput:document.querySelector("#atvOverrideInput"),atvOverrideHint:document.querySelector("#atvOverrideHint")}}function ue(t,l){ie.forEach(a=>{const e=document.querySelector(`[data-section="${a.section}"]`);if(!e)return;const o=document.createElement("div");o.className="field";const r=document.createElement("label");r.textContent=a.label;let n;if(a.type==="select"&&Array.isArray(a.options))n=document.createElement("select"),a.options.forEach(i=>{const d=document.createElement("option");d.value=String(i.value),d.textContent=i.label,n.append(d)}),n.value=String(t[a.key]),n.addEventListener("change",()=>{const i=n.value,d=Number(i),P=a.options.every(q=>typeof q.value=="number")&&Number.isFinite(d)?d:i;l(a.key,P)});else{n=document.createElement("input");const i=a.type==="text"?"text":"number";if(n.type=i,a.key==="trailerCapacityM3"?n.value=Number(t[a.key]??0).toFixed(1):n.value=String(t[a.key]??""),a.placeholder&&(n.placeholder=a.placeholder),i==="number"){a.min!==void 0&&(n.min=String(a.min)),a.max!==void 0&&(n.max=String(a.max)),a.step!==void 0&&(n.step=String(a.step));const d=()=>{const h=Number(n.value);Number.isFinite(h)&&(l(a.key,h),a.key==="trailerCapacityM3"&&(n.value=h.toFixed(1)))};a.key==="trailerCapacityM3"?(n.addEventListener("change",d),n.addEventListener("blur",d)):n.addEventListener("input",d)}else n.addEventListener("input",()=>{l(a.key,n.value)})}o.append(r,n),e.append(o)})}function me(t,l){const a=document.querySelector("#speedSlider"),e=document.querySelector("#speedValue");if(!a||!e)return;const o=r=>{const n=Math.max(1,Math.round(r));e.textContent=`1 s → ${n} min`,l(r)};a.value=String(t.minutesPerSecond),o(t.minutesPerSecond),a.addEventListener("input",()=>{const r=Number(a.value);!Number.isFinite(r)||r<=0||(t.minutesPerSecond=r,o(r))})}function ve(t,l,a={}){const e=a.toggle??document.querySelector("#atvOverrideToggle"),o=a.input??document.querySelector("#atvOverrideInput");if(!e||!o)return;const r=i=>{o.disabled=!i,i||(t.atvOverrideCount=null,o.value="")};e.value=t.atvOverrideEnabled?"yes":"no",t.atvOverrideCount!=null&&(o.value=String(t.atvOverrideCount)),r(t.atvOverrideEnabled),e.addEventListener("change",()=>{const i=e.value==="yes";if(t.atvOverrideEnabled=i,i&&!o.value){const d=Number(e.dataset.computedAtvs);Number.isFinite(d)&&d>0&&(t.atvOverrideCount=Math.max(1,Math.round(d)),o.value=String(t.atvOverrideCount))}r(i),l()});const n=()=>{if(!t.atvOverrideEnabled)return;const i=Number(o.value);if(!Number.isFinite(i)||i<=0){t.atvOverrideCount=null,o.value="",l();return}t.atvOverrideCount=Math.round(i),o.value=String(t.atvOverrideCount),l()};o.addEventListener("blur",n),o.addEventListener("keydown",i=>{i.key==="Enter"&&n()})}function he(t,l,a){t.innerHTML="",se.forEach(e=>{let o;e.key==="totalMinutes"?o=a.totalMinutes:e.key==="integerAtvs"?o=a.integerAtvs??l.integerAtvs:o=l[e.key];const r=document.createElement("li");r.className="metric-card";const n=document.createElement("span");n.className="label",n.textContent=e.label;const i=document.createElement("span");if(i.className="value",i.textContent=e.format?e.format(o):String(o),r.append(n,i),e.key==="integerAtvs"&&a.overrideAtvs){const d=document.createElement("span");d.className="note";const h=b(a.computedIntegerAtvs,{maximumFractionDigits:0});d.textContent=`Manual override active (computed ${h})`,r.append(d)}else if(e.note){const d=document.createElement("span");d.className="note",d.textContent=e.note,r.append(d)}t.append(r)})}function pe(t,l,a){const e=t.getContext("2d"),o=t.width,r=t.height,n=70;let i={loadMarkers:[],loadStates:[],segmentsByAtv:[],totalMinutes:1,numAtvs:0,beachLength:X.beachLengthM},d={...X},h=null,P=ee,q=[];const C=r*.3,S=r*.7;function O(s,u){i={...s,beachLength:u.beachLengthM},d={...u},h=null,q=new Array(i.numAtvs).fill(1)}function g(s){P=s}function H(s){const u=Math.floor(s/60),v=Math.floor(s%60),p=Math.floor(s%1*60),w=`${String(u).padStart(2,"0")}:${String(v).padStart(2,"0")}:${String(p).padStart(2,"0")}`;l&&(l.textContent=`Sim time ${w}`)}function N(){e.fillStyle="#0f2034",e.fillRect(0,0,o,r);const s=e.createLinearGradient(0,C,0,S);s.addColorStop(0,"rgba(230, 254, 255, 0.08)"),s.addColorStop(.5,"rgba(110, 192, 230, 0.18)"),s.addColorStop(1,"rgba(255, 255, 255, 0.05)"),e.fillStyle=s,e.fillRect(n,C,o-n*2,S-C),e.strokeStyle="rgba(255, 255, 255, 0.25)",e.lineWidth=2,e.beginPath(),e.moveTo(n,S),e.lineTo(o-n,S),e.stroke(),e.save(),e.textAlign="center",e.fillStyle="rgba(255, 255, 255, 0.7)",e.font='16px "Inter", sans-serif';const u=Math.min(r-12,S+28),v=b(d.beachLengthM,{maximumFractionDigits:0});e.fillText(`Beach length = ${v} m`,o/2,u),e.restore()}function W(s){const u=o-n*2,p=(S-C)*.25,w=S-p;i.loadStates.forEach(M=>{const c=n+M.startPosM/i.beachLength*u,I=n+M.endPosM/i.beachLength*u,L=M.arrivalMin,m=M.cleanedAtMinute;if(m<=0||s>=m)return;let x=1;if(s>L){const k=Math.max(m-L,.01),f=Math.min(Math.max((s-L)/k,0),1);x=Math.max(0,1-f)}e.save(),e.globalAlpha=x;const T=e.createLinearGradient(c,w,I,S);T.addColorStop(0,"rgba(121, 85, 72, 0.92)"),T.addColorStop(.5,"rgba(93, 64, 55, 0.95)"),T.addColorStop(1,"rgba(121, 85, 72, 0.92)"),e.fillStyle=T,e.fillRect(c,w,I-c,p),e.restore()})}function V(s,u,v=1){if(!s.length)return{position:0,phase:"idle",loadId:null,direction:v};const p=s[s.length-1].endMin;if(p===0)return{position:0,phase:"idle",loadId:null,direction:v};let w=u%p,M=v;for(let L=0;L<s.length;L+=1){const m=s[L];if(w<m.startMin)return{position:m.startPosM,phase:"idle",loadId:m.loadId,direction:M};if(w<=m.endMin||m.endMin===m.startMin){const x=m.endMin-m.startMin,T=x>0?(w-m.startMin)/x:1,k=m.startPosM+(m.endPosM-m.startPosM)*T,f=Math.sign(m.endPosM-m.startPosM);return f!==0&&(M=f),{position:k,phase:m.phase,loadId:m.loadId,direction:M}}}const c=s[s.length-1],I=Math.sign(c.endPosM-c.startPosM);return I!==0&&(M=I),{position:c.endPosM,phase:"idle",loadId:c.loadId,direction:M}}function R(){e.strokeStyle="rgba(255, 255, 255, 0.12)",e.lineWidth=1,e.setLineDash([6,8]),i.loadMarkers.forEach(s=>{const u=n+s/i.beachLength*(o-n*2);e.beginPath(),e.moveTo(u,C),e.lineTo(u,S),e.stroke()}),e.setLineDash([])}function _(s,u,v,p=1,w=!1){e.save();const M=5,c=28,I=12,L=36,m=14,x=8,T=p>=0?1:-1,k=s-c/2,f=u-M-I,D=k+c,$=u-M-m+2;let E,F,K,Y;if(T>=0?(F=k-x,E=F-L,K=k,Y=F):(E=D+x,F=E+L,K=D,Y=E),e.fillStyle=v,e.fillRect(k,f,c,I),e.fillStyle="rgba(255, 255, 255, 0.2)",e.fillRect(k+6,f+3,12,I-6),e.fillStyle=v,e.fillRect(E,$,L,m),w){const B=m*.9,J=L*.08,G=E+J,Q=F-J,U=$+2,ne=U-B;e.fillStyle="#8d6e63",e.beginPath(),e.moveTo(G,U),e.quadraticCurveTo((G+Q)/2,ne,Q,U),e.lineTo(G,U),e.closePath(),e.fill()}e.strokeStyle="rgba(255, 255, 255, 0.4)",e.lineWidth=2,e.beginPath(),e.moveTo(K,u-M-2),e.lineTo(Y,u-M+1),e.stroke();const j="rgba(15, 32, 52, 0.85)",te=[{x:k+c*.25,y:u},{x:D-c*.25,y:u},{x:E+L*.2,y:u+1},{x:F-L*.2,y:u+1}];e.fillStyle=j,te.forEach(B=>{e.beginPath(),e.arc(B.x,B.y,M,0,Math.PI*2),e.fill(),e.fillStyle="rgba(255, 255, 255, 0.25)",e.beginPath(),e.arc(B.x,B.y,M*.4,0,Math.PI*2),e.fill(),e.fillStyle=j}),e.fillStyle="rgba(15, 32, 52, 0.85)";const z=12,oe=T>=0?D-z+2:k-2;e.fillRect(oe,f-6,z,6),e.beginPath(),T>=0?(e.moveTo(D-c*.7,f),e.lineTo(D-c*.4,f-8),e.lineTo(D-c*.15,f-8),e.lineTo(D-c*.3,f)):(e.moveTo(k+c*.7,f),e.lineTo(k+c*.4,f-8),e.lineTo(k+c*.15,f-8),e.lineTo(k+c*.3,f)),e.closePath(),e.fill(),e.restore()}function y(s){const u=[];i.segmentsByAtv.forEach((v,p)=>{const w=q[p]??1,{position:M,phase:c,loadId:I,direction:L}=V(v,s,w);q[p]=L||w||1;const m=Z[p%Z.length],x=n+M/i.beachLength*(o-n*2),T=S-30-p*18,k=c!=="outbound";_(x,T,m,q[p],k),e.fillStyle=m,e.font='12px "Inter", sans-serif',e.fillText(`ATV ${p+1}`,x-20,T+22);const D=(I?i.loadStates.find(E=>E.loadId===I):void 0)?.crew??"Crew",$=b(d.trailerCapacityM3,{minimumFractionDigits:1,maximumFractionDigits:1});u.push(`ATV ${p+1}: ${c} load ${I??"—"} (${D}, capacity ${$} m³)`)}),a.textContent=u.join("  •  ")}function A(s){h||(h=s);const u=(s-h)/1e3,v=Math.max(i.totalMinutes,1),p=u*P%v;N(),W(p),R(),y(p),H(p),requestAnimationFrame(A)}return requestAnimationFrame(A),{update:O,updateSpeed:g}}function fe(t,l,a){if(l.atvSpeedKmh<=0){t.textContent="Increase ATV speed above zero to animate the transport cycle.";return}if(a.trailersPerDay<=0||a.requiredAtvs<=0){t.textContent="Adjust inputs to produce a non-zero workload for ATVs.";return}t.textContent=""}function ge(){const t={...X},l={...re},{canvas:a,derivedList:e,status:o,timeLabel:r,detailsLabel:n,derivedSection:i,derivedToggle:d,atvOverrideToggle:h,atvOverrideInput:P,atvOverrideHint:q}=ce(),C=pe(a,r,n);let S=!1;function O(){const g=le(t),H=l.atvOverrideEnabled?l.atvOverrideCount:null,N=de(t,g,{overrideAtvCount:H}),W={totalMinutes:N.totalMinutes,integerAtvs:N.numAtvs,overrideAtvs:N.overrideAtvCount!=null,computedIntegerAtvs:g.integerAtvs};if(he(e,g,W),fe(o,t,g),C.update(N,t),q){const V=b(g.integerAtvs,{maximumFractionDigits:0});if(N.overrideAtvCount!=null){const R=b(N.overrideAtvCount,{maximumFractionDigits:0});q.textContent=`Manual override active (${R} ATVs, computed ${V}).`}else q.textContent=`Using computed requirement (${V} ATVs).`}if(h&&(h.dataset.computedAtvs=String(g.integerAtvs)),P){const V=b(g.integerAtvs,{maximumFractionDigits:0});(!l.atvOverrideEnabled||l.atvOverrideCount==null)&&(P.placeholder=`Computed ${V}`)}}ue(t,(g,H)=>{t[g]=H,O()}),me(l,g=>{C.updateSpeed(g)}),ve(l,O,{toggle:h,input:P}),d.addEventListener("click",()=>{S=!S,i.classList.toggle("collapsed",S),d.textContent=S?"Show metrics":"Hide metrics"}),O()}ge();
