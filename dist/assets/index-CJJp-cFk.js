(function(){const c=document.createElement("link").relList;if(c&&c.supports&&c.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))e(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&e(o)}).observe(document,{childList:!0,subtree:!0});function r(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function e(n){if(n.ep)return;n.ep=!0;const s=r(n);fetch(n.href,s)}})();const be=52/12,fe=1,he=["#64ffda","#90caf9","#ffd54f","#ff8a80","#ce93d8","#80cbc4"],de={seasonLengthMonths:5,sargassumVolumeM3:7183.15,workDaysPerWeek:6,workHoursPerDay:5,trailerCapacityM3:2,timePerWorkerLoadM3Minutes:25,atvSpeedKmh:3,beachLengthM:600,loadTransferTimeMinutes:11,loadingMode:"single"},Se={minutesPerSecond:fe,atvOverrideEnabled:!1,atvOverrideCount:null},Le=[{key:"seasonLengthMonths",label:"Length of season (months)",min:1,max:12,step:.1,section:"season"},{key:"sargassumVolumeM3",label:"Estimated Sargassum volume (m³)",min:0,max:2e4,step:10,section:"season"},{key:"workDaysPerWeek",label:"Working days per week",min:1,max:7,step:1,section:"season"},{key:"workHoursPerDay",label:"Working hours per day",min:1,max:24,step:.5,section:"season"},{key:"trailerCapacityM3",label:"Trailer capacity (m³)",min:.1,max:5,step:.1,section:"labor"},{key:"timePerWorkerLoadM3Minutes",label:"Time to load 1 m³ per worker (minutes)",min:1,max:60,step:1,section:"labor"},{key:"atvSpeedKmh",label:"ATV speed (km/h)",min:0,max:15,step:.1,section:"atv"},{key:"beachLengthM",label:"Beach length (m)",min:60,max:1500,step:10,section:"atv"},{key:"loadTransferTimeMinutes",label:"Load transfer wait (minutes)",min:0,max:60,step:1,section:"atv"},{key:"loadingMode",label:"Loading mode",type:"select",options:[{value:"single",label:"Whole crew from west"},{value:"split",label:"Split crews west/east"}],section:"labor"}],Te=[{key:"avgDailyRemoval",label:"Average daily removal (m³)",format:t=>L(t,{maximumFractionDigits:2})},{key:"avgHourlyRemoval",label:"Average hourly removal (m³)",format:t=>L(t,{maximumFractionDigits:2})},{key:"trailersPerDay",label:"Trailer loads per day",format:t=>L(t,{maximumFractionDigits:2})},{key:"timeWorkerLoadHours",label:"Worker hours to load trailers (per day)",format:t=>L(t,{maximumFractionDigits:2})},{key:"requiredBeachWorkers",label:"Beach workers required (load crew)",format:t=>L(t,{maximumFractionDigits:2})},{key:"timeToLoadTrailerMinutes",label:"Time to load trailer (minutes)",format:t=>L(t,{maximumFractionDigits:2})},{key:"timeToLoadingAreaMinutes",label:"Travel to loading area (minutes)",format:t=>L(t,{maximumFractionDigits:2})},{key:"totalAtvTimePerLoadMinutes",label:"ATV cycle time per load (minutes)",format:t=>L(t,{maximumFractionDigits:2})},{key:"timePerAtvHours",label:"ATV duty time (hours/day)",format:t=>L(t,{maximumFractionDigits:2})},{key:"requiredAtvs",label:"Required # of ATVs",format:t=>L(t,{maximumFractionDigits:2})},{key:"requiredAtvDrivers",label:"Required # of ATV drivers",format:t=>L(t,{maximumFractionDigits:2})},{key:"requiredUnloadWorkers",label:"Required # of unload workers",format:t=>L(t,{maximumFractionDigits:2})},{key:"integerLoads",label:"Loads simulated today",format:t=>L(t,{maximumFractionDigits:0})},{key:"integerAtvs",label:"ATVs in rotation",format:t=>L(t,{maximumFractionDigits:0})},{key:"totalMinutes",label:"Day cycle duration (minutes)",format:t=>L(t,{maximumFractionDigits:1}),note:"Full rotation for busiest ATV within the day"}];function L(t,c={}){return Number.isFinite(t)?new Intl.NumberFormat("en-US",{maximumFractionDigits:2,minimumFractionDigits:0,...c}).format(t):"—"}function Ae(t){const c=t.seasonLengthMonths*be,r=c*t.workDaysPerWeek,e=r>0?t.sargassumVolumeM3/r:0,n=t.workHoursPerDay>0?e/t.workHoursPerDay:0,s=t.trailerCapacityM3>0?e/t.trailerCapacityM3:0,i=t.timePerWorkerLoadM3Minutes*e/60,u=t.workHoursPerDay>0?i/t.workHoursPerDay:0,T=u>0?t.trailerCapacityM3*t.timePerWorkerLoadM3Minutes/u:0,k=t.atvSpeedKmh*1e3/60,x=t.beachLengthM/2,P=k>0?x/k:0,D=P,S=P+T+D,A=S*s/60,g=t.workHoursPerDay>0?A/t.workHoursPerDay:0,C=g,b=t.workHoursPerDay>0?s*T/60/t.workHoursPerDay:0,d=Math.max(1,Math.round(s)),v=Math.max(1,Math.ceil(g));return{workingWeeks:c,workingDaysSeason:r,avgDailyRemoval:e,avgHourlyRemoval:n,trailersPerDay:s,timeWorkerLoadHours:i,requiredBeachWorkers:u,timeToLoadTrailerMinutes:T,timeToLoadingAreaMinutes:P,totalAtvTimePerLoadMinutes:S,timePerAtvHours:A,requiredAtvs:g,requiredAtvDrivers:C,requiredUnloadWorkers:b,integerLoads:d,integerAtvs:v}}function ke(t,c,r={}){const e=c.integerLoads,n=Number(r.overrideAtvCount),s=Number.isFinite(n)&&n>0?Math.max(1,Math.round(n)):null,o=s??c.integerAtvs,i=[],u=[],T=Array.from({length:o},()=>[]),k=Array.from({length:o},()=>0),x=Math.max(0,t.loadTransferTimeMinutes??0);if(e<=0||o<=0)return{loadMarkers:i,segmentsByAtv:T,totalMinutes:0,numLoads:0,numAtvs:o,loadStates:u};const P=t.beachLengthM/e,D=c.timeToLoadTrailerMinutes,S=t.atvSpeedKmh>0?t.atvSpeedKmh*1e3/60:0;let A=0,g=0;const C=Array.from({length:e},(d,v)=>{const O=v*P,Y=(v+1)*P,N=O+P/2;return{loadIndex:v+1,startPosM:O,endPosM:Y,centerPosM:N}});i.push(...C.map(d=>d.centerPosM).sort((d,v)=>d-v));let b;if((t.loadingMode??"single")==="split"){b=[];let d=0,v=e-1,O=!0;for(;d<=v;)O?(b.push({...C[d],crew:"West crew"}),d+=1):(b.push({...C[v],crew:"East crew"}),v-=1),O=!O;b.length&&e%2===1&&(b[b.length-1].crew="Both crews")}else b=C.map(d=>({...d,crew:"Main crew"}));return b.forEach(d=>{const v=d.centerPosM,O=d.startPosM,Y=d.endPosM,N=Math.min(v,5),ae=S>0?v/S:0,ee=S>0?Math.max(v-N,0)/S:0,G=S>0?N/S:0;let q=0,te=k[0];for(let W=1;W<o;W+=1)k[W]<te-Number.EPSILON&&(te=k[W],q=W);const ne=k[q],X=ne+ae,U=X+D,j=U+ee,re=j+G;let z=0,_=re;_<A&&(z=A-_,_=A);const Q=_+x,B=W=>{T[q].push(W),g=Math.max(g,W.endMin)};B({atvId:q,loadId:d.loadIndex,phase:"outbound",startMin:ne,endMin:X,startPosM:0,endPosM:v}),B({atvId:q,loadId:d.loadIndex,phase:"loading",startMin:X,endMin:U,startPosM:v,endPosM:v}),ee>0?B({atvId:q,loadId:d.loadIndex,phase:"return",startMin:U,endMin:j,startPosM:v,endPosM:N}):B({atvId:q,loadId:d.loadIndex,phase:"return",startMin:U,endMin:U,startPosM:v,endPosM:N}),z>0&&B({atvId:q,loadId:d.loadIndex,phase:"hold",startMin:j,endMin:j+z,startPosM:N,endPosM:N}),B({atvId:q,loadId:d.loadIndex,phase:"approach",startMin:j+z,endMin:_,startPosM:N,endPosM:0}),B({atvId:q,loadId:d.loadIndex,phase:"transfer",startMin:_,endMin:Q,startPosM:0,endPosM:0}),k[q]=Q,A=Q,u.push({startPosM:O,endPosM:Y,arrivalMin:X,cleanedAtMinute:U,crew:d.crew,loadId:d.loadIndex})}),{loadMarkers:i,segmentsByAtv:T.map(d=>d.sort((v,O)=>v.startMin-O.startMin)),totalMinutes:g,numLoads:e,numAtvs:o,loadStates:u,overrideAtvCount:s}}function xe(){const t=document.querySelector("#app");return t.innerHTML=`
    <section class="controls">
      <div class="control-header">
        <h1>HMB Beach Cleanup Model</h1>
        <p>Set the season-scale inputs from the spreadsheet; the animation shows how one workday plays out with those assumptions.</p>
      </div>
      <div class="controls-groups">
        <div class="control-group">
          <h2>Season Parameters</h2>
          <div class="input-grid" data-section="season"></div>
        </div>
        <div class="control-group">
          <h2>Trailer &amp; Labor</h2>
          <div class="input-grid" data-section="labor"></div>
        </div>
        <div class="control-group">
          <h2>ATV Operations</h2>
          <div class="input-grid" data-section="atv"></div>
          <div class="field override-field">
            <label for="atvOverrideToggle">Override # of ATVs</label>
            <div class="override-controls">
              <select id="atvOverrideToggle">
                <option value="no">No</option>
                <option value="yes">Yes</option>
              </select>
              <input
                type="number"
                id="atvOverrideInput"
                min="1"
                step="1"
                placeholder="Manual count"
              />
            </div>
            <span class="field-note" id="atvOverrideHint"></span>
          </div>
        </div>
      </div>
      <div class="derived-section" id="derivedSection">
        <div class="derived-header">
          <h2>Derived Metrics</h2>
          <button type="button" class="toggle-derived" id="toggleDerived">Hide metrics</button>
        </div>
        <ul class="metrics-list" id="derivedMetrics"></ul>
      </div>
      <div class="status" id="status"></div>
    </section>
    <section class="simulation">
      <div class="canvas-container">
        <canvas id="beachCanvas" width="960" height="520"></canvas>
        <div class="canvas-overlay canvas-overlay-top">
          <div class="sim-controls">
            <div class="sim-primary">
              <span id="timeLabel" class="sim-time">Sim time 00:00</span>
              <button type="button" id="toggleRun" class="toggle-run">Pause</button>
            </div>
            <span id="idleLabel" class="sim-idle">Crew idle time 00:00:00</span>
          </div>
          <div class="speed-slider">
            <input type="range" id="speedSlider" min="1" max="60" step="1" />
            <span id="speedValue"></span>
          </div>
        </div>
        <div class="canvas-overlay canvas-overlay-bottom">
          <span id="detailsLabel"></span>
        </div>
      </div>
    </section>
  `,{canvas:document.querySelector("#beachCanvas"),derivedList:document.querySelector("#derivedMetrics"),status:document.querySelector("#status"),timeLabel:document.querySelector("#timeLabel"),idleLabel:document.querySelector("#idleLabel"),toggleButton:document.querySelector("#toggleRun"),detailsLabel:document.querySelector("#detailsLabel"),derivedSection:document.querySelector("#derivedSection"),derivedToggle:document.querySelector("#toggleDerived"),speedSlider:document.querySelector("#speedSlider"),speedValue:document.querySelector("#speedValue"),atvOverrideToggle:document.querySelector("#atvOverrideToggle"),atvOverrideInput:document.querySelector("#atvOverrideInput"),atvOverrideHint:document.querySelector("#atvOverrideHint")}}function Pe(t,c){Le.forEach(r=>{const e=document.querySelector(`[data-section="${r.section}"]`);if(!e)return;const n=document.createElement("div");n.className="field";const s=document.createElement("label");s.textContent=r.label;let o;if(r.type==="select"&&Array.isArray(r.options))o=document.createElement("select"),r.options.forEach(i=>{const u=document.createElement("option");u.value=String(i.value),u.textContent=i.label,o.append(u)}),o.value=String(t[r.key]),o.addEventListener("change",()=>{const i=o.value,u=Number(i),k=r.options.every(x=>typeof x.value=="number")&&Number.isFinite(u)?u:i;c(r.key,k)});else{o=document.createElement("input");const i=r.type==="text"?"text":"number";if(o.type=i,r.key==="trailerCapacityM3"?o.value=Number(t[r.key]??0).toFixed(1):o.value=String(t[r.key]??""),r.placeholder&&(o.placeholder=r.placeholder),i==="number"){r.min!==void 0&&(o.min=String(r.min)),r.max!==void 0&&(o.max=String(r.max)),r.step!==void 0&&(o.step=String(r.step));const u=()=>{const T=Number(o.value);Number.isFinite(T)&&(c(r.key,T),r.key==="trailerCapacityM3"&&(o.value=T.toFixed(1)))};r.key==="trailerCapacityM3"?(o.addEventListener("change",u),o.addEventListener("blur",u)):o.addEventListener("input",u)}else o.addEventListener("input",()=>{c(r.key,o.value)})}n.append(s,o),e.append(n)})}function we(t,c){const r=document.querySelector("#speedSlider"),e=document.querySelector("#speedValue");if(!r||!e)return;const n=s=>{const o=Math.max(1,Math.round(s));e.textContent=`1 s → ${o} min`,c(s)};r.value=String(t.minutesPerSecond),n(t.minutesPerSecond),r.addEventListener("input",()=>{const s=Number(r.value);!Number.isFinite(s)||s<=0||(t.minutesPerSecond=s,n(s))})}function Ce(t,c,r={}){const e=r.toggle??document.querySelector("#atvOverrideToggle"),n=r.input??document.querySelector("#atvOverrideInput");if(!e||!n)return;const s=i=>{n.disabled=!i,i||(t.atvOverrideCount=null,n.value="")};e.value=t.atvOverrideEnabled?"yes":"no",t.atvOverrideCount!=null&&(n.value=String(t.atvOverrideCount)),s(t.atvOverrideEnabled),e.addEventListener("change",()=>{const i=e.value==="yes";if(t.atvOverrideEnabled=i,i&&!n.value){const u=Number(e.dataset.computedAtvs);Number.isFinite(u)&&u>0&&(t.atvOverrideCount=Math.max(1,Math.round(u)),n.value=String(t.atvOverrideCount))}s(i),c()});const o=()=>{if(!t.atvOverrideEnabled)return;const i=Number(n.value);if(!Number.isFinite(i)||i<=0){t.atvOverrideCount=null,n.value="",c();return}t.atvOverrideCount=Math.round(i),n.value=String(t.atvOverrideCount),c()};n.addEventListener("blur",o),n.addEventListener("keydown",i=>{i.key==="Enter"&&o()})}function Ee(t,c,r){t.innerHTML="",Te.forEach(e=>{let n;e.key==="totalMinutes"?n=r.totalMinutes:e.key==="integerAtvs"?n=r.integerAtvs??c.integerAtvs:n=c[e.key];const s=document.createElement("li");s.className="metric-card";const o=document.createElement("span");o.className="label",o.textContent=e.label;const i=document.createElement("span");if(i.className="value",i.textContent=e.format?e.format(n):String(n),s.append(o,i),e.key==="integerAtvs"&&r.overrideAtvs){const u=document.createElement("span");u.className="note";const T=L(r.computedIntegerAtvs,{maximumFractionDigits:0});u.textContent=`Manual override active (computed ${T})`,s.append(u)}else if(e.note){const u=document.createElement("span");u.className="note",u.textContent=e.note,s.append(u)}t.append(s)})}function De(t,c,r){const e=t.getContext("2d"),n=t.width,s=t.height,o=70;let i={loadMarkers:[],loadStates:[],segmentsByAtv:[],totalMinutes:1,numAtvs:0,beachLength:de.beachLengthM},u={...de},T=fe,k=[],x=!1,P=!1,D=0,S=null,A=null,g=[];const C=new Set,b=s*.3,d=s*.7;function v(){const a={paused:G(),manuallyPaused:x,autoPaused:P};C.forEach(l=>{try{l(a)}catch{}})}function O(){A!==null&&(cancelAnimationFrame(A),A=null)}function Y(){A===null&&!G()&&(A=requestAnimationFrame(ce))}function N(a,l){i={...a,beachLength:l.beachLengthM},u={...l},k=new Array(i.numAtvs).fill(1),D=0,S=null,P=!1,g=te(i.loadStates??[]),v(),Y()}function ae(a){T=a,S=null}function ee(a){const l=x;return typeof a=="boolean"?x=a:x=!x,x?l||O():(P&&(P=!1,D=0),S=null,Y()),v(),x}function G(){return x||P}function q(a){return typeof a!="function"?()=>{}:(C.add(a),a({paused:G(),manuallyPaused:x,autoPaused:P}),()=>{C.delete(a)})}function te(a){const l=a.map(m=>{const y=Math.min(m.arrivalMin,m.cleanedAtMinute),f=Math.max(m.arrivalMin,m.cleanedAtMinute);return f>y?{start:y,end:f}:null}).filter(Boolean).sort((m,y)=>m.start-y.start);if(!l.length)return[];const p=[l[0]];for(let m=1;m<l.length;m+=1){const y=l[m],f=p[p.length-1];y.start<=f.end?f.end=Math.max(f.end,y.end):p.push({...y})}return p}function ne(a){if(!g.length||a<=g[0].start)return 0;let l=0;for(let p=0;p<g.length;p+=1){const{start:m,end:y}=g[p];if(a<=m)break;const f=Math.min(y,a);if(l+=Math.max(0,f-m),a<=y)break}return Math.min(l,Math.max(0,a))}function X(a){const l=Math.max(0,Math.floor(a*60)),p=Math.floor(l/3600),m=Math.floor(l%3600/60),y=l%60;return`${String(p).padStart(2,"0")}:${String(m).padStart(2,"0")}:${String(y).padStart(2,"0")}`}function U(a){c&&(c.textContent=`Sim time ${X(a)}`)}function j(a){if(!idleLabel)return;const l=ne(a),p=Math.max(0,a-l);idleLabel.textContent=`Crew idle time ${X(p)}`}function re(){e.fillStyle="#0f2034",e.fillRect(0,0,n,s);const a=e.createLinearGradient(0,b,0,d);a.addColorStop(0,"rgba(230, 254, 255, 0.08)"),a.addColorStop(.5,"rgba(110, 192, 230, 0.18)"),a.addColorStop(1,"rgba(255, 255, 255, 0.05)"),e.fillStyle=a,e.fillRect(o,b,n-o*2,d-b),e.strokeStyle="rgba(255, 255, 255, 0.25)",e.lineWidth=2,e.beginPath(),e.moveTo(o,d),e.lineTo(n-o,d),e.stroke(),e.save(),e.textAlign="center",e.fillStyle="rgba(255, 255, 255, 0.7)",e.font='16px "Inter", sans-serif';const l=Math.min(s-12,d+28),p=L(u.beachLengthM,{maximumFractionDigits:0});e.fillText(`Beach length = ${p} m`,n/2,l),e.restore()}function z(a){const l=n-o*2,m=(d-b)*.25,y=d-m;i.loadStates.forEach(f=>{const h=o+f.startPosM/i.beachLength*l,H=o+f.endPosM/i.beachLength*l,I=f.arrivalMin,M=f.cleanedAtMinute;if(M<=0||a>=M)return;let R=1;if(a>I){const E=Math.max(M-I,.01),w=Math.min(Math.max((a-I)/E,0),1);R=Math.max(0,1-w)}e.save(),e.globalAlpha=R;const F=e.createLinearGradient(h,y,H,d);F.addColorStop(0,"rgba(121, 85, 72, 0.92)"),F.addColorStop(.5,"rgba(93, 64, 55, 0.95)"),F.addColorStop(1,"rgba(121, 85, 72, 0.92)"),e.fillStyle=F,e.fillRect(h,y,H-h,m),e.restore()})}function _(a,l,p=1){if(!a.length)return{position:0,phase:"idle",loadId:null,direction:p,progress:0};const m=a[a.length-1].endMin;if(m===0)return{position:0,phase:"idle",loadId:null,direction:p,progress:0};let y=l%m,f=p;for(let I=0;I<a.length;I+=1){const M=a[I];if(y<M.startMin)return{position:M.startPosM,phase:"idle",loadId:M.loadId,direction:f,progress:0};if(y<=M.endMin||M.endMin===M.startMin){const R=M.endMin-M.startMin,F=R>0?(y-M.startMin)/R:1,E=M.startPosM+(M.endPosM-M.startPosM)*F,w=Math.sign(M.endPosM-M.startPosM);return w!==0&&(f=w),{position:E,phase:M.phase,loadId:M.loadId,direction:f,progress:F}}}const h=a[a.length-1],H=Math.sign(h.endPosM-h.startPosM);return H!==0&&(f=H),{position:h.endPosM,phase:"idle",loadId:h.loadId,direction:f,progress:0}}function Q(){e.strokeStyle="rgba(255, 255, 255, 0.12)",e.lineWidth=1,e.setLineDash([6,8]),i.loadMarkers.forEach(a=>{const l=o+a/i.beachLength*(n-o*2);e.beginPath(),e.moveTo(l,b),e.lineTo(l,d),e.stroke()}),e.setLineDash([])}function B(a,l,p,m=1,y=!1){e.save();const f=5,h=28,H=12,I=36,M=14,R=8,F=m>=0?1:-1,E=a-h/2,w=l-f-H,V=E+h,ie=l-f-M+2;let $,K,Z,se;if(F>=0?(K=E-R,$=K-I,Z=E,se=K):($=V+R,K=$+I,Z=V,se=$),e.fillStyle=p,e.fillRect(E,w,h,H),e.fillStyle="rgba(255, 255, 255, 0.2)",e.fillRect(E+6,w+3,12,H-6),e.fillStyle=p,e.fillRect($,ie,I,M),y){const J=M*.9,ve=I*.08,le=$+ve,pe=K-ve,oe=ie+2,ye=oe-J;e.fillStyle="#8d6e63",e.beginPath(),e.moveTo(le,oe),e.quadraticCurveTo((le+pe)/2,ye,pe,oe),e.lineTo(le,oe),e.closePath(),e.fill()}e.strokeStyle="rgba(255, 255, 255, 0.4)",e.lineWidth=2,e.beginPath(),e.moveTo(Z,l-f-2),e.lineTo(se,l-f+1),e.stroke();const ue="rgba(15, 32, 52, 0.85)",ge=[{x:E+h*.25,y:l},{x:V-h*.25,y:l},{x:$+I*.2,y:l+1},{x:K-I*.2,y:l+1}];e.fillStyle=ue,ge.forEach(J=>{e.beginPath(),e.arc(J.x,J.y,f,0,Math.PI*2),e.fill(),e.fillStyle="rgba(255, 255, 255, 0.25)",e.beginPath(),e.arc(J.x,J.y,f*.4,0,Math.PI*2),e.fill(),e.fillStyle=ue}),e.fillStyle="rgba(15, 32, 52, 0.85)";const me=12,Me=F>=0?V-me+2:E-2;e.fillRect(Me,w-6,me,6),e.beginPath(),F>=0?(e.moveTo(V-h*.7,w),e.lineTo(V-h*.4,w-8),e.lineTo(V-h*.15,w-8),e.lineTo(V-h*.3,w)):(e.moveTo(E+h*.7,w),e.lineTo(E+h*.4,w-8),e.lineTo(E+h*.15,w-8),e.lineTo(E+h*.3,w)),e.closePath(),e.fill(),e.restore()}function W(a){const l=[];i.segmentsByAtv.forEach((p,m)=>{const y=k[m]??1,{position:f,phase:h,loadId:H,direction:I,progress:M}=_(p,a,y);k[m]=I||y||1;const R=he[m%he.length],F=o+f/i.beachLength*(n-o*2),E=d-30-m*18,w=.001,V=h==="loading"&&M>=1-w||h==="return"||h==="hold"||h==="approach"||h==="transfer"&&M<1-w;B(F,E,R,k[m],V),e.fillStyle=R,e.font='12px "Inter", sans-serif',e.fillText(`ATV ${m+1}`,F-20,E+22);const $=(H?i.loadStates.find(Z=>Z.loadId===H):void 0)?.crew??"Crew",K=L(u.trailerCapacityM3,{minimumFractionDigits:1,maximumFractionDigits:1});l.push(`ATV ${m+1}: ${h} load ${H??"—"} (${$}, capacity ${K} m³)`)}),r.textContent=l.join("  •  ")}function ce(a){if(G()){A=null;return}S===null&&(S=a);const l=Math.max((a-S)/1e3,0);S=a;const p=Math.max(i.totalMinutes,1);D+=l*T,D>p&&(D=p);const m=D;if(re(),z(m),Q(),W(m),U(m),j(m),D>=p){P=!0,A=null,v();return}A=requestAnimationFrame(ce)}return Y(),{update:N,updateSpeed:ae,toggleManualPause:ee,isPaused:G,onStateChange:q}}function Ie(t,c,r){if(c.atvSpeedKmh<=0){t.textContent="Increase ATV speed above zero to animate the transport cycle.";return}if(r.trailersPerDay<=0||r.requiredAtvs<=0){t.textContent="Adjust inputs to produce a non-zero workload for ATVs.";return}t.textContent=""}function Oe(){const t={...de},c={...Se},{canvas:r,derivedList:e,status:n,timeLabel:s,idleLabel:o,toggleButton:i,derivedSection:u,derivedToggle:T,atvOverrideToggle:k,atvOverrideInput:x,atvOverrideHint:P}=xe(),D=De(r,s,o);let S=!1;function A(){const g=Ae(t),C=c.atvOverrideEnabled?c.atvOverrideCount:null,b=ke(t,g,{overrideAtvCount:C}),d={totalMinutes:b.totalMinutes,integerAtvs:b.numAtvs,overrideAtvs:b.overrideAtvCount!=null,computedIntegerAtvs:g.integerAtvs};if(Ee(e,g,d),Ie(n,t,g),D.update(b,t),P){const v=L(g.integerAtvs,{maximumFractionDigits:0});if(b.overrideAtvCount!=null){const O=L(b.overrideAtvCount,{maximumFractionDigits:0});P.textContent=`Manual override active (${O} ATVs, computed ${v}).`}else P.textContent=`Using computed requirement (${v} ATVs).`}if(k&&(k.dataset.computedAtvs=String(g.integerAtvs)),x){const v=L(g.integerAtvs,{maximumFractionDigits:0});(!c.atvOverrideEnabled||c.atvOverrideCount==null)&&(x.placeholder=`Computed ${v}`)}}if(Pe(t,(g,C)=>{t[g]=C,A()}),we(c,g=>{D.updateSpeed(g)}),i){const g=({paused:C})=>{i.textContent=C?"Run":"Pause"};D.onStateChange(g),i.addEventListener("click",()=>{const C=D.isPaused();D.toggleManualPause(!C)})}Ce(c,A,{toggle:k,input:x}),T.addEventListener("click",()=>{S=!S,u.classList.toggle("collapsed",S),T.textContent=S?"Show metrics":"Hide metrics"}),A()}Oe();
