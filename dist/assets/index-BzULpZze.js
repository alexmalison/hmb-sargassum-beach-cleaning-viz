(function(){const m=document.createElement("link").relList;if(m&&m.supports&&m.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))e(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&e(n)}).observe(document,{childList:!0,subtree:!0});function a(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function e(r){if(r.ep)return;r.ep=!0;const i=a(r);fetch(r.href,i)}})();const Ee=52/12,Le=1,Se=["#64ffda","#90caf9","#ffd54f","#ff8a80","#ce93d8","#80cbc4"],me={seasonLengthMonths:5,sargassumVolumeM3:7183.15,workDaysPerWeek:6,workHoursPerDay:5,trailerCapacityM3:2,timePerWorkerLoadM3Minutes:25,atvSpeedKmh:3,beachLengthM:600,loadTransferTimeMinutes:11,loadingMode:"single"},Ie={minutesPerSecond:Le,atvOverrideCount:0},Fe=[{key:"seasonLengthMonths",label:"Length of season (months)",min:1,max:12,step:.1,section:"season"},{key:"sargassumVolumeM3",label:"Estimated Sargassum volume (m³)",min:0,max:2e4,step:10,section:"season"},{key:"workDaysPerWeek",label:"Working days per week",min:1,max:7,step:1,section:"season"},{key:"workHoursPerDay",label:"Working hours per day",min:1,max:24,step:.5,section:"season"},{key:"trailerCapacityM3",label:"Trailer capacity (m³)",min:.1,max:5,step:.1,section:"labor"},{key:"timePerWorkerLoadM3Minutes",label:"Time to load 1 m³ per worker (minutes)",min:1,max:60,step:1,section:"labor"},{key:"atvSpeedKmh",label:"ATV speed (km/h)",min:0,max:15,step:.1,section:"atv"},{key:"beachLengthM",label:"Beach length (m)",min:60,max:1500,step:10,section:"atv"},{key:"loadTransferTimeMinutes",label:"Load transfer wait (minutes)",min:0,max:60,step:1,section:"atv"},{key:"loadingMode",label:"Loading mode",type:"select",options:[{value:"single",label:"Whole crew from west"},{value:"split",label:"Split crews west/east"}],section:"labor"}],He=[{key:"avgDailyRemoval",label:"Average daily removal (m³)",format:t=>k(t,{maximumFractionDigits:2})},{key:"avgHourlyRemoval",label:"Average hourly removal (m³)",format:t=>k(t,{maximumFractionDigits:2})},{key:"trailersPerDay",label:"Trailer loads per day",format:t=>k(t,{maximumFractionDigits:2})},{key:"timeWorkerLoadHours",label:"Worker hours to load trailers (per day)",format:t=>k(t,{maximumFractionDigits:2})},{key:"requiredBeachWorkers",label:"Beach workers required (load crew)",format:t=>k(t,{maximumFractionDigits:2})},{key:"timeToLoadTrailerMinutes",label:"Time to load trailer (minutes)",format:t=>k(t,{maximumFractionDigits:2})},{key:"timeToLoadingAreaMinutes",label:"Travel to loading area (minutes)",format:t=>k(t,{maximumFractionDigits:2})},{key:"totalAtvTimePerLoadMinutes",label:"ATV cycle time per load (minutes)",format:t=>k(t,{maximumFractionDigits:2})},{key:"timePerAtvHours",label:"ATV duty time (hours/day)",format:t=>k(t,{maximumFractionDigits:2})},{key:"requiredAtvs",label:"Required # of ATVs",format:t=>k(t,{maximumFractionDigits:2})},{key:"requiredAtvDrivers",label:"Required # of ATV drivers",format:t=>k(t,{maximumFractionDigits:2})},{key:"requiredUnloadWorkers",label:"Required # of unload workers",format:t=>k(t,{maximumFractionDigits:2})},{key:"integerLoads",label:"Loads simulated today",format:t=>k(t,{maximumFractionDigits:0})},{key:"integerAtvs",label:"ATVs in rotation",format:t=>k(t,{maximumFractionDigits:0})},{key:"totalMinutes",label:"Day cycle duration (minutes)",format:t=>k(t,{maximumFractionDigits:1}),note:"Full rotation for busiest ATV within the day"}];function k(t,m={}){return Number.isFinite(t)?new Intl.NumberFormat("en-US",{maximumFractionDigits:2,minimumFractionDigits:0,...m}).format(t):"—"}function qe(t){const m=t.seasonLengthMonths*Ee,a=m*t.workDaysPerWeek,e=a>0?t.sargassumVolumeM3/a:0,r=t.workHoursPerDay>0?e/t.workHoursPerDay:0,i=t.trailerCapacityM3>0?e/t.trailerCapacityM3:0,c=t.timePerWorkerLoadM3Minutes*e/60,v=t.workHoursPerDay>0?c/t.workHoursPerDay:0,P=v>0?t.trailerCapacityM3*t.timePerWorkerLoadM3Minutes/v:0,C=t.atvSpeedKmh*1e3/60,x=t.beachLengthM/2,S=C>0?x/C:0,w=S,L=S+P+w,M=L*i/60,T=t.workHoursPerDay>0?M/t.workHoursPerDay:0,D=T,I=t.workHoursPerDay>0?i*P/60/t.workHoursPerDay:0,h=Math.max(1,Math.round(i)),f=Math.max(1,Math.ceil(T));return{workingWeeks:m,workingDaysSeason:a,avgDailyRemoval:e,avgHourlyRemoval:r,trailersPerDay:i,timeWorkerLoadHours:c,requiredBeachWorkers:v,timeToLoadTrailerMinutes:P,timeToLoadingAreaMinutes:S,totalAtvTimePerLoadMinutes:L,timePerAtvHours:M,requiredAtvs:T,requiredAtvDrivers:D,requiredUnloadWorkers:I,integerLoads:h,integerAtvs:f}}function Ne(t,m,a={}){const e=m.integerLoads,r=Number(a.overrideAtvCount),i=Number.isFinite(r)&&r>0?Math.max(1,Math.round(r)):null,n=i??m.integerAtvs,c=[],v=[],P=Array.from({length:n},()=>[]),C=Array.from({length:n},()=>0),x=Math.max(0,t.loadTransferTimeMinutes??0);if(e<=0||n<=0)return{loadMarkers:c,segmentsByAtv:P,totalMinutes:0,numLoads:0,numAtvs:n,loadStates:v};const S=t.beachLengthM/e,w=m.timeToLoadTrailerMinutes,L=t.atvSpeedKmh>0?t.atvSpeedKmh*1e3/60:0;let M=0,T=0;const D=Array.from({length:e},(h,f)=>{const W=f*S,H=(f+1)*S,N=W+S/2;return{loadIndex:f+1,startPosM:W,endPosM:H,centerPosM:N}});c.push(...D.map(h=>h.centerPosM).sort((h,f)=>h-f));let I;if((t.loadingMode??"single")==="split"){I=[];let h=0,f=e-1,W=!0;for(;h<=f;)W?(I.push({...D[h],crew:"West crew"}),h+=1):(I.push({...D[f],crew:"East crew"}),f-=1),W=!W;I.length&&e%2===1&&(I[I.length-1].crew="Both crews")}else I=D.map(h=>({...h,crew:"Main crew"}));return I.forEach(h=>{const f=h.centerPosM,W=h.startPosM,H=h.endPosM,N=Math.min(f,5),ie=L>0?f/L:0,z=L>0?Math.max(f-N,0)/L:0,se=L>0?N/L:0;let O=0,ne=C[0];for(let B=1;B<n;B+=1)C[B]<ne-Number.EPSILON&&(ne=C[B],O=B);const K=C[O],J=K+ie,G=J+w,X=G+z,oe=X+se;let j=0,$=oe;$<M&&(j=M-$,$=M);const Q=$+x,U=B=>{P[O].push(B),T=Math.max(T,B.endMin)};U({atvId:O,loadId:h.loadIndex,phase:"outbound",startMin:K,endMin:J,startPosM:0,endPosM:f}),U({atvId:O,loadId:h.loadIndex,phase:"loading",startMin:J,endMin:G,startPosM:f,endPosM:f}),z>0?U({atvId:O,loadId:h.loadIndex,phase:"return",startMin:G,endMin:X,startPosM:f,endPosM:N}):U({atvId:O,loadId:h.loadIndex,phase:"return",startMin:G,endMin:G,startPosM:f,endPosM:N}),j>0&&U({atvId:O,loadId:h.loadIndex,phase:"hold",startMin:X,endMin:X+j,startPosM:N,endPosM:N}),U({atvId:O,loadId:h.loadIndex,phase:"approach",startMin:X+j,endMin:$,startPosM:N,endPosM:0}),U({atvId:O,loadId:h.loadIndex,phase:"transfer",startMin:$,endMin:Q,startPosM:0,endPosM:0}),C[O]=Q,M=Q,v.push({startPosM:W,endPosM:H,arrivalMin:J,cleanedAtMinute:G,crew:h.crew,loadId:h.loadIndex})}),{loadMarkers:c,segmentsByAtv:P.map(h=>h.sort((f,W)=>f.startMin-W.startMin)),totalMinutes:T,numLoads:e,numAtvs:n,loadStates:v,overrideAtvCount:i}}function Oe(){const t=document.querySelector("#app");return t.innerHTML=`
    <section class="controls">
      <div class="control-header">
        <h1>HMB Beach Cleanup Model</h1>
        <p>Set the season-scale inputs from the spreadsheet; the animation shows how one workday plays out with those assumptions.</p>
      </div>
      <div class="controls-groups">
        <div class="control-group">
          <h2>Season Parameters</h2>
          <div class="input-grid" data-section="season"></div>
        </div>
        <div class="control-group">
          <h2>Trailer &amp; Labor</h2>
          <div class="input-grid" data-section="labor"></div>
        </div>
        <div class="control-group">
          <h2>ATV Operations</h2>
          <div class="input-grid" data-section="atv"></div>
          <div class="field override-field">
            <label for="atvOverrideInput">Override # of ATVs</label>
            <input
              type="number"
              id="atvOverrideInput"
              min="0"
              step="1"
              placeholder="0 for auto"
            />
            <span class="field-note" id="atvOverrideHint"></span>
          </div>
        </div>
      </div>
      <div class="derived-section" id="derivedSection">
        <div class="derived-header">
          <h2>Derived Metrics</h2>
          <button type="button" class="toggle-derived" id="toggleDerived">Hide metrics</button>
        </div>
        <ul class="metrics-list" id="derivedMetrics"></ul>
      </div>
      <div class="status" id="status"></div>
    </section>
    <section class="simulation">
      <div class="canvas-container">
        <canvas id="beachCanvas" width="960" height="520"></canvas>
        <div class="canvas-overlay canvas-overlay-top">
          <div class="sim-controls">
            <button type="button" id="toggleRun" class="toggle-run">Pause</button>
            <span id="timeLabel" class="sim-stat">Sim time 00:00:00</span>
            <div class="speed-slider">
              <input type="range" id="speedSlider" min="1" max="60" step="1" />
              <span id="speedValue">1 s → 1 min</span>
            </div>
          </div>
        </div>
        <div class="canvas-overlay canvas-overlay-bottom">
          <span id="detailsLabel"></span>
        </div>
      </div>
    </section>
  `,{canvas:document.querySelector("#beachCanvas"),derivedList:document.querySelector("#derivedMetrics"),status:document.querySelector("#status"),timeLabel:document.querySelector("#timeLabel"),toggleButton:document.querySelector("#toggleRun"),detailsLabel:document.querySelector("#detailsLabel"),derivedSection:document.querySelector("#derivedSection"),derivedToggle:document.querySelector("#toggleDerived"),speedSlider:document.querySelector("#speedSlider"),speedValue:document.querySelector("#speedValue"),atvOverrideInput:document.querySelector("#atvOverrideInput"),atvOverrideHint:document.querySelector("#atvOverrideHint")}}function Re(t,m){Fe.forEach(a=>{const e=document.querySelector(`[data-section="${a.section}"]`);if(!e)return;const r=document.createElement("div");r.className="field";const i=document.createElement("label");i.textContent=a.label;let n;if(a.type==="select"&&Array.isArray(a.options))n=document.createElement("select"),a.options.forEach(c=>{const v=document.createElement("option");v.value=String(c.value),v.textContent=c.label,n.append(v)}),n.value=String(t[a.key]),n.addEventListener("change",()=>{const c=n.value,v=Number(c),C=a.options.every(x=>typeof x.value=="number")&&Number.isFinite(v)?v:c;m(a.key,C)});else{n=document.createElement("input");const c=a.type==="text"?"text":"number";if(n.type=c,a.key==="trailerCapacityM3"?n.value=Number(t[a.key]??0).toFixed(1):n.value=String(t[a.key]??""),a.placeholder&&(n.placeholder=a.placeholder),c==="number"){a.min!==void 0&&(n.min=String(a.min)),a.max!==void 0&&(n.max=String(a.max)),a.step!==void 0&&(n.step=String(a.step));const v=()=>{const P=Number(n.value);Number.isFinite(P)&&(m(a.key,P),a.key==="trailerCapacityM3"&&(n.value=P.toFixed(1)))};a.key==="trailerCapacityM3"?(n.addEventListener("change",v),n.addEventListener("blur",v)):n.addEventListener("input",v)}else n.addEventListener("input",()=>{m(a.key,n.value)})}r.append(i,n),e.append(r)})}function We(t,m){const a=document.querySelector("#speedSlider"),e=document.querySelector("#speedValue");if(!a||!e)return;const r=i=>{const n=Math.max(1,Math.round(i));e.textContent=`1 s → ${n} min`,m(i)};a.value=String(t.minutesPerSecond),r(t.minutesPerSecond),a.addEventListener("input",()=>{const i=Number(a.value);!Number.isFinite(i)||i<=0||(t.minutesPerSecond=i,r(i))})}function Ve(t,m,a={}){const e=a.input??document.querySelector("#atvOverrideInput");if(!e)return;const r=i=>{const n=Number(i);!Number.isFinite(n)||n<=0?(t.atvOverrideCount=0,e.value="0"):(t.atvOverrideCount=Math.round(n),e.value=String(t.atvOverrideCount)),m()};e.value=t.atvOverrideCount>0?String(t.atvOverrideCount):"0",e.addEventListener("change",()=>{r(e.value)}),e.addEventListener("blur",()=>{r(e.value)}),e.addEventListener("keydown",i=>{i.key==="Enter"&&(i.preventDefault(),r(e.value))})}function Be(t,m,a){t.innerHTML="",He.forEach(e=>{let r;e.key==="totalMinutes"?r=a.totalMinutes:e.key==="integerAtvs"?r=a.integerAtvs??m.integerAtvs:r=m[e.key];const i=document.createElement("li");i.className="metric-card";const n=document.createElement("span");n.className="label",n.textContent=e.label;const c=document.createElement("span");if(c.className="value",c.textContent=e.format?e.format(r):String(r),i.append(n,c),e.key==="integerAtvs"&&a.overrideAtvs){const v=document.createElement("span");v.className="note";const P=k(a.computedIntegerAtvs,{maximumFractionDigits:0});v.textContent=`Manual override active (computed ${P})`,i.append(v)}else if(e.note){const v=document.createElement("span");v.className="note",v.textContent=e.note,i.append(v)}t.append(i)})}function $e(t,m,a){const e=t.getContext("2d"),r=t.width,i=t.height,n=70;let c={loadMarkers:[],loadStates:[],segmentsByAtv:[],totalMinutes:1,numAtvs:0,beachLength:me.beachLengthM},v={...me},P=Le,C=[],x=!1,S=!1,w=0,L=null,M=null,T=[];const D=new Set;let I="Loaded 0.0 m³",h="Crew idle time 00:00:00";const f=i*.3,W=i*.4,H=f+W;function N(){const o={paused:K(),manuallyPaused:x,autoPaused:S};D.forEach(s=>{try{s(o)}catch{}})}function ie(){M!==null&&(cancelAnimationFrame(M),M=null)}function z(){M===null&&!K()&&(M=requestAnimationFrame(ve))}function se(o,s){c={...o,beachLength:s.beachLengthM},v={...s},C=new Array(c.numAtvs).fill(1),w=0,L=null,S=!1,T=G(c.loadStates??[]),j(w),$(w),Q(w),N(),z()}function O(o){P=o,L=null}function ne(o){const s=x;return typeof o=="boolean"?x=o:x=!x,x?s||ie():(S&&(S=!1,w=0),L=null,z()),N(),x}function K(){return x||S}function J(o){return typeof o!="function"?()=>{}:(D.add(o),o({paused:K(),manuallyPaused:x,autoPaused:S}),()=>{D.delete(o)})}function G(o){const s=o.map(l=>{const g=Math.min(l.arrivalMin,l.cleanedAtMinute),u=Math.max(l.arrivalMin,l.cleanedAtMinute);return u>g?{start:g,end:u}:null}).filter(Boolean).sort((l,g)=>l.start-g.start);if(!s.length)return[];const p=[s[0]];for(let l=1;l<s.length;l+=1){const g=s[l],u=p[p.length-1];g.start<=u.end?u.end=Math.max(u.end,g.end):p.push({...g})}return p}function X(o){if(!T.length||o<=T[0].start)return 0;let s=0;for(let p=0;p<T.length;p+=1){const{start:l,end:g}=T[p];if(o<=l)break;const u=Math.min(g,o);if(s+=Math.max(0,u-l),o<=g)break}return Math.min(s,Math.max(0,o))}function oe(o){const s=Math.max(0,Math.floor(o*60)),p=Math.floor(s/3600),l=Math.floor(s%3600/60),g=s%60;return`${String(p).padStart(2,"0")}:${String(l).padStart(2,"0")}:${String(g).padStart(2,"0")}`}function j(o){m&&(m.textContent=`Sim time ${oe(o)}`)}function $(o){const s=Number(v.trailerCapacityM3)||0;if(s<=0||!Array.isArray(c.loadStates)){I="Loaded 0.0 m³";return}let p=0;c.loadStates.forEach(g=>{const u=g.arrivalMin,d=g.cleanedAtMinute;if(!(!Number.isFinite(u)||!Number.isFinite(d)||d<=u)){if(o>=d)p+=s;else if(o>u){const E=Math.max(0,Math.min((o-u)/(d-u),1));p+=s*E}}}),I=`Loaded ${k(p,{minimumFractionDigits:1,maximumFractionDigits:1})} m³`}function Q(o){const s=X(o),p=Math.max(0,o-s);h=`Crew idle time ${oe(p)}`}function U(){e.fillStyle="#0f2034",e.fillRect(0,0,r,i),e.fillStyle="#0f2034",e.fillRect(0,0,r,f);const o=e.createLinearGradient(0,f,0,H);o.addColorStop(0,"rgba(214, 196, 148, 0.78)"),o.addColorStop(1,"rgba(191, 166, 115, 0.82)"),e.fillStyle=o,e.fillRect(n,f,r-n*2,H-f),e.strokeStyle="rgba(255, 255, 255, 0.25)",e.lineWidth=2,e.beginPath(),e.moveTo(n,H),e.lineTo(r-n,H),e.stroke(),e.save(),e.textAlign="center",e.fillStyle="rgba(255, 255, 255, 0.7)",e.font='16px "Inter", sans-serif';const s=Math.min(i-12,H+28),l=[`Beach length = ${k(v.beachLengthM,{maximumFractionDigits:0})} m`,I,h];e.fillText(l.join("   •   "),r/2,s),e.restore()}function B(o){const s=r-n*2,l=(H-f)*.25,g=H-l;c.loadStates.forEach(u=>{const d=n+u.startPosM/c.beachLength*s,E=n+u.endPosM/c.beachLength*s,F=u.arrivalMin,y=u.cleanedAtMinute;if(y<=0)return;const V=e.createLinearGradient(d,g,E,H);if(V.addColorStop(0,"rgba(194, 178, 128, 0.65)"),V.addColorStop(1,"rgba(214, 198, 148, 0.7)"),e.save(),e.fillStyle=V,e.fillRect(d,g,E-d,l),e.restore(),o>=y)return;let q=1;if(o>F){const A=Math.max(y-F,.01),R=Math.min(Math.max((o-F)/A,0),1);q=Math.max(0,1-R)}if(q<=0)return;e.save(),e.globalAlpha=q;const b=e.createLinearGradient(d,g,E,H);b.addColorStop(0,"rgba(121, 85, 72, 0.92)"),b.addColorStop(.5,"rgba(93, 64, 55, 0.95)"),b.addColorStop(1,"rgba(121, 85, 72, 0.92)"),e.fillStyle=b,e.fillRect(d,g,E-d,l),e.restore()})}function Te(o,s,p=1){if(!o.length)return{position:0,phase:"idle",loadId:null,direction:p,progress:0};const l=o[o.length-1].endMin;if(l===0)return{position:0,phase:"idle",loadId:null,direction:p,progress:0};let g=s%l,u=p;for(let F=0;F<o.length;F+=1){const y=o[F];if(g<y.startMin)return{position:y.startPosM,phase:"idle",loadId:y.loadId,direction:u,progress:0};if(g<=y.endMin||y.endMin===y.startMin){const V=y.endMin-y.startMin,q=V>0?(g-y.startMin)/V:1,b=y.startPosM+(y.endPosM-y.startPosM)*q,A=Math.sign(y.endPosM-y.startPosM);return A!==0&&(u=A),{position:b,phase:y.phase,loadId:y.loadId,direction:u,progress:q}}}const d=o[o.length-1],E=Math.sign(d.endPosM-d.startPosM);return E!==0&&(u=E),{position:d.endPosM,phase:"idle",loadId:d.loadId,direction:u,progress:0}}function Ae(){e.strokeStyle="rgba(255, 255, 255, 0.12)",e.lineWidth=1,e.setLineDash([6,8]),c.loadMarkers.forEach(o=>{const s=n+o/c.beachLength*(r-n*2);e.beginPath(),e.moveTo(s,f),e.lineTo(s,H),e.stroke()}),e.setLineDash([])}function ke(o,s,p,l=1,g=!1){e.save();const u=5,d=28,E=12,F=36,y=14,V=8,q=l>=0?1:-1,b=o-d/2,A=s-u-E,R=b+d,le=s-u-y+2;let _,Y,te,de;if(q>=0?(Y=b-V,_=Y-F,te=b,de=Y):(_=R+V,Y=_+F,te=R,de=_),e.fillStyle=p,e.fillRect(b,A,d,E),e.fillStyle="rgba(255, 255, 255, 0.2)",e.fillRect(b+6,A+3,12,E-6),e.fillStyle=p,e.fillRect(_,le,F,y),g){const ee=y*.9,ye=F*.08,ue=_+ye,be=Y-ye,re=le+2,De=re-ee;e.fillStyle="#8d6e63",e.beginPath(),e.moveTo(ue,re),e.quadraticCurveTo((ue+be)/2,De,be,re),e.lineTo(ue,re),e.closePath(),e.fill()}e.strokeStyle="rgba(255, 255, 255, 0.4)",e.lineWidth=2,e.beginPath(),e.moveTo(te,s-u-2),e.lineTo(de,s-u+1),e.stroke();const he="rgba(15, 32, 52, 0.85)",xe=[{x:b+d*.25,y:s},{x:R-d*.25,y:s},{x:_+F*.2,y:s+1},{x:Y-F*.2,y:s+1}];e.fillStyle=he,xe.forEach(ee=>{e.beginPath(),e.arc(ee.x,ee.y,u,0,Math.PI*2),e.fill(),e.fillStyle="rgba(255, 255, 255, 0.25)",e.beginPath(),e.arc(ee.x,ee.y,u*.4,0,Math.PI*2),e.fill(),e.fillStyle=he}),e.fillStyle="rgba(15, 32, 52, 0.85)";const fe=12,we=q>=0?R-fe+2:b-2;e.fillRect(we,A-6,fe,6),e.beginPath(),q>=0?(e.moveTo(R-d*.7,A),e.lineTo(R-d*.4,A-8),e.lineTo(R-d*.15,A-8),e.lineTo(R-d*.3,A)):(e.moveTo(b+d*.7,A),e.lineTo(b+d*.4,A-8),e.lineTo(b+d*.15,A-8),e.lineTo(b+d*.3,A)),e.closePath(),e.fill();const Z=q>=0?R-d*.35:b+d*.35,ce=4,pe=A-ce-2,Ce=8,ge=6;e.fillStyle="#ffd180",e.beginPath(),e.arc(Z,pe,ce,0,Math.PI*2),e.fill(),e.fillStyle="#0f2034",e.fillRect(Z-ge/2,pe+ce-1,ge,Ce);const ae=A+2,Me=10;e.strokeStyle="#cfd8dc",e.lineWidth=2,e.beginPath(),q>=0?(e.moveTo(Z-2,ae),e.lineTo(Z-2-Me,ae-2)):(e.moveTo(Z+2,ae),e.lineTo(Z+2+Me,ae-2)),e.stroke(),e.restore()}function Pe(o){const s=[];c.segmentsByAtv.forEach((p,l)=>{const g=C[l]??1,{position:u,phase:d,loadId:E,direction:F,progress:y}=Te(p,o,g);C[l]=F||g||1;const V=Se[l%Se.length],q=n+u/c.beachLength*(r-n*2),b=H-30-l*18,A=.001,R=d==="loading"&&y>=1-A||d==="return"||d==="hold"||d==="approach"||d==="transfer"&&y<1-A;ke(q,b,V,C[l],R),e.fillStyle=V,e.font='12px "Inter", sans-serif',e.fillText(`ATV ${l+1}`,q-20,b+22);const _=(E?c.loadStates.find(te=>te.loadId===E):void 0)?.crew??"Crew",Y=k(v.trailerCapacityM3,{minimumFractionDigits:1,maximumFractionDigits:1});s.push(`ATV ${l+1}: ${d} load ${E??"—"} (${_}, capacity ${Y} m³)`)}),a.textContent=s.join("  •  ")}function ve(o){if(K()){M=null;return}L===null&&(L=o);const s=Math.max((o-L)/1e3,0);L=o;const p=Math.max(c.totalMinutes,1);w+=s*P,w>p&&(w=p);const l=w;if(U(),B(l),Ae(),Pe(l),j(l),$(l),Q(l),w>=p){S=!0,M=null,N();return}M=requestAnimationFrame(ve)}return z(),{update:se,updateSpeed:O,toggleManualPause:ne,isPaused:K,onStateChange:J}}function Ue(t,m,a){if(m.atvSpeedKmh<=0){t.textContent="Increase ATV speed above zero to animate the transport cycle.";return}if(a.trailersPerDay<=0||a.requiredAtvs<=0){t.textContent="Adjust inputs to produce a non-zero workload for ATVs.";return}t.textContent=""}function _e(){const t={...me},m={...Ie},{canvas:a,derivedList:e,status:r,timeLabel:i,toggleButton:n,detailsLabel:c,derivedSection:v,derivedToggle:P,atvOverrideInput:C,atvOverrideHint:x}=Oe(),S=$e(a,i,c);let w=!1;function L(){const M=qe(t),T=m.atvOverrideCount>0?m.atvOverrideCount:null,D=Ne(t,M,{overrideAtvCount:T}),I={totalMinutes:D.totalMinutes,integerAtvs:D.numAtvs,overrideAtvs:D.overrideAtvCount!=null,computedIntegerAtvs:M.integerAtvs};if(Be(e,M,I),Ue(r,t,M),S.update(D,t),x){const h=k(M.integerAtvs,{maximumFractionDigits:0});if(D.overrideAtvCount!=null){const f=k(D.overrideAtvCount,{maximumFractionDigits:0});x.textContent=`Manual override active (${f} ATVs, computed ${h}).`}else x.textContent=`Using computed requirement (${h} ATVs).`}}if(Re(t,(M,T)=>{t[M]=T,L()}),We(m,M=>{S.updateSpeed(M)}),n){const M=({paused:T})=>{n.textContent=T?"Run":"Pause"};S.onStateChange(M),n.addEventListener("click",()=>{const T=S.isPaused();S.toggleManualPause(!T)})}Ve(m,L,{input:C}),P.addEventListener("click",()=>{w=!w,v.classList.toggle("collapsed",w),P.textContent=w?"Show metrics":"Hide metrics"}),L()}_e();
