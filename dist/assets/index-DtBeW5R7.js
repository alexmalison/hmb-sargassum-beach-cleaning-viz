(function(){const m=document.createElement("link").relList;if(m&&m.supports&&m.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))e(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&e(o)}).observe(document,{childList:!0,subtree:!0});function a(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function e(s){if(s.ep)return;s.ep=!0;const r=a(s);fetch(s.href,r)}})();const Ee=52/12,Le=1,Se=["#64ffda","#90caf9","#ffd54f","#ff8a80","#ce93d8","#80cbc4"],me={seasonLengthMonths:5,sargassumVolumeM3:7183.15,workDaysPerWeek:6,workHoursPerDay:5,trailerCapacityM3:2,timePerWorkerLoadM3Minutes:25,atvSpeedKmh:3,beachLengthM:600,loadTransferTimeMinutes:11,loadingMode:"single"},Ie={minutesPerSecond:Le,atvOverrideCount:0},Fe=[{key:"seasonLengthMonths",label:"Length of season (months)",min:1,max:12,step:.1,section:"season"},{key:"sargassumVolumeM3",label:"Estimated Sargassum volume (m³)",min:0,max:2e4,step:10,section:"season"},{key:"workDaysPerWeek",label:"Working days per week",min:1,max:7,step:1,section:"season"},{key:"workHoursPerDay",label:"Working hours per day",min:1,max:24,step:.5,section:"season"},{key:"trailerCapacityM3",label:"Trailer capacity (m³)",min:.1,max:5,step:.1,section:"labor"},{key:"timePerWorkerLoadM3Minutes",label:"Time to load 1 m³ per worker (minutes)",min:1,max:60,step:1,section:"labor"},{key:"atvSpeedKmh",label:"ATV speed (km/h)",min:0,max:15,step:.1,section:"atv"},{key:"beachLengthM",label:"Beach length (m)",min:60,max:1500,step:10,section:"atv"},{key:"loadTransferTimeMinutes",label:"Load transfer wait (minutes)",min:0,max:60,step:1,section:"atv"},{key:"loadingMode",label:"Loading mode",type:"select",options:[{value:"single",label:"Whole crew from west"},{value:"split",label:"Split crews west/east"}],section:"labor"}],He=[{key:"avgDailyRemoval",label:"Average daily removal (m³)",format:t=>k(t,{maximumFractionDigits:2})},{key:"avgHourlyRemoval",label:"Average hourly removal (m³)",format:t=>k(t,{maximumFractionDigits:2})},{key:"trailersPerDay",label:"Trailer loads per day",format:t=>k(t,{maximumFractionDigits:2})},{key:"timeWorkerLoadHours",label:"Worker hours to load trailers (per day)",format:t=>k(t,{maximumFractionDigits:2})},{key:"requiredBeachWorkers",label:"Beach workers required (load crew)",format:t=>k(t,{maximumFractionDigits:2})},{key:"timeToLoadTrailerMinutes",label:"Time to load trailer (minutes)",format:t=>k(t,{maximumFractionDigits:2})},{key:"timeToLoadingAreaMinutes",label:"Travel to loading area (minutes)",format:t=>k(t,{maximumFractionDigits:2})},{key:"totalAtvTimePerLoadMinutes",label:"ATV cycle time per load (minutes)",format:t=>k(t,{maximumFractionDigits:2})},{key:"timePerAtvHours",label:"ATV duty time (hours/day)",format:t=>k(t,{maximumFractionDigits:2})},{key:"requiredAtvs",label:"Required # of ATVs",format:t=>k(t,{maximumFractionDigits:2})},{key:"requiredAtvDrivers",label:"Required # of ATV drivers",format:t=>k(t,{maximumFractionDigits:2})},{key:"requiredUnloadWorkers",label:"Required # of unload workers",format:t=>k(t,{maximumFractionDigits:2})},{key:"integerLoads",label:"Loads simulated today",format:t=>k(t,{maximumFractionDigits:0})},{key:"integerAtvs",label:"ATVs in rotation",format:t=>k(t,{maximumFractionDigits:0})},{key:"totalMinutes",label:"Day cycle duration (minutes)",format:t=>k(t,{maximumFractionDigits:1}),note:"Full rotation for busiest ATV within the day"}];function k(t,m={}){return Number.isFinite(t)?new Intl.NumberFormat("en-US",{maximumFractionDigits:2,minimumFractionDigits:0,...m}).format(t):"—"}function qe(t){const m=t.seasonLengthMonths*Ee,a=m*t.workDaysPerWeek,e=a>0?t.sargassumVolumeM3/a:0,s=t.workHoursPerDay>0?e/t.workHoursPerDay:0,r=t.trailerCapacityM3>0?e/t.trailerCapacityM3:0,c=t.timePerWorkerLoadM3Minutes*e/60,v=t.workHoursPerDay>0?c/t.workHoursPerDay:0,P=v>0?t.trailerCapacityM3*t.timePerWorkerLoadM3Minutes/v:0,w=t.atvSpeedKmh*1e3/60,x=t.beachLengthM/2,S=w>0?x/w:0,C=S,L=S+P+C,M=L*r/60,T=t.workHoursPerDay>0?M/t.workHoursPerDay:0,D=T,I=t.workHoursPerDay>0?r*P/60/t.workHoursPerDay:0,h=Math.max(1,Math.round(r)),g=Math.max(1,Math.ceil(T));return{workingWeeks:m,workingDaysSeason:a,avgDailyRemoval:e,avgHourlyRemoval:s,trailersPerDay:r,timeWorkerLoadHours:c,requiredBeachWorkers:v,timeToLoadTrailerMinutes:P,timeToLoadingAreaMinutes:S,totalAtvTimePerLoadMinutes:L,timePerAtvHours:M,requiredAtvs:T,requiredAtvDrivers:D,requiredUnloadWorkers:I,integerLoads:h,integerAtvs:g}}function Ne(t,m,a={}){const e=m.integerLoads,s=Number(a.overrideAtvCount),r=Number.isFinite(s)&&s>0?Math.max(1,Math.round(s)):null,o=r??m.integerAtvs,c=[],v=[],P=Array.from({length:o},()=>[]),w=Array.from({length:o},()=>0),x=Math.max(0,t.loadTransferTimeMinutes??0);if(e<=0||o<=0)return{loadMarkers:c,segmentsByAtv:P,totalMinutes:0,numLoads:0,numAtvs:o,loadStates:v};const S=t.beachLengthM/e,C=m.timeToLoadTrailerMinutes,L=t.atvSpeedKmh>0?t.atvSpeedKmh*1e3/60:0;let M=0,T=0;const D=Array.from({length:e},(h,g)=>{const V=g*S,F=(g+1)*S,O=V+S/2;return{loadIndex:g+1,startPosM:V,endPosM:F,centerPosM:O}});c.push(...D.map(h=>h.centerPosM).sort((h,g)=>h-g));let I;if((t.loadingMode??"single")==="split"){I=[];let h=0,g=e-1,V=!0;for(;h<=g;)V?(I.push({...D[h],crew:"West crew"}),h+=1):(I.push({...D[g],crew:"East crew"}),g-=1),V=!V;I.length&&e%2===1&&(I[I.length-1].crew="Both crews")}else I=D.map(h=>({...h,crew:"Main crew"}));return I.forEach(h=>{const g=h.centerPosM,V=h.startPosM,F=h.endPosM,O=Math.min(g,5),ie=L>0?g/L:0,z=L>0?Math.max(g-O,0)/L:0,se=L>0?O/L:0;let R=0,ne=w[0];for(let B=1;B<o;B+=1)w[B]<ne-Number.EPSILON&&(ne=w[B],R=B);const G=w[R],J=G+ie,K=J+C,X=K+z,oe=X+se;let j=0,$=oe;$<M&&(j=M-$,$=M);const Q=$+x,U=B=>{P[R].push(B),T=Math.max(T,B.endMin)};U({atvId:R,loadId:h.loadIndex,phase:"outbound",startMin:G,endMin:J,startPosM:0,endPosM:g}),U({atvId:R,loadId:h.loadIndex,phase:"loading",startMin:J,endMin:K,startPosM:g,endPosM:g}),z>0?U({atvId:R,loadId:h.loadIndex,phase:"return",startMin:K,endMin:X,startPosM:g,endPosM:O}):U({atvId:R,loadId:h.loadIndex,phase:"return",startMin:K,endMin:K,startPosM:g,endPosM:O}),j>0&&U({atvId:R,loadId:h.loadIndex,phase:"hold",startMin:X,endMin:X+j,startPosM:O,endPosM:O}),U({atvId:R,loadId:h.loadIndex,phase:"approach",startMin:X+j,endMin:$,startPosM:O,endPosM:0}),U({atvId:R,loadId:h.loadIndex,phase:"transfer",startMin:$,endMin:Q,startPosM:0,endPosM:0}),w[R]=Q,M=Q,v.push({startPosM:V,endPosM:F,arrivalMin:J,cleanedAtMinute:K,crew:h.crew,loadId:h.loadIndex})}),{loadMarkers:c,segmentsByAtv:P.map(h=>h.sort((g,V)=>g.startMin-V.startMin)),totalMinutes:T,numLoads:e,numAtvs:o,loadStates:v,overrideAtvCount:r}}function Oe(){const t=document.querySelector("#app");return t.innerHTML=`
    <section class="controls">
      <div class="control-header">
        <h1>HMB Beach Cleanup Model</h1>
        <p>Set the season-scale inputs from the spreadsheet; the animation shows how one workday plays out with those assumptions.</p>
      </div>
      <div class="controls-groups">
        <div class="control-group">
          <h2>Season Parameters</h2>
          <div class="input-grid" data-section="season"></div>
        </div>
        <div class="control-group">
          <h2>Trailer &amp; Labor</h2>
          <div class="input-grid" data-section="labor"></div>
        </div>
        <div class="control-group">
          <h2>ATV Operations</h2>
          <div class="input-grid" data-section="atv"></div>
          <div class="field override-field">
            <label for="atvOverrideInput">Override # of ATVs</label>
            <input
              type="number"
              id="atvOverrideInput"
              min="0"
              step="1"
              placeholder="0 for auto"
            />
            <span class="field-note" id="atvOverrideHint"></span>
          </div>
        </div>
      </div>
      <div class="derived-section" id="derivedSection">
        <div class="derived-header">
          <h2>Derived Metrics</h2>
          <button type="button" class="toggle-derived" id="toggleDerived">Hide metrics</button>
        </div>
        <ul class="metrics-list" id="derivedMetrics"></ul>
      </div>
      <div class="status" id="status"></div>
    </section>
    <section class="simulation">
      <div class="canvas-container">
        <canvas id="beachCanvas" width="720" height="420"></canvas>
        <div class="canvas-overlay canvas-overlay-top">
          <div class="sim-controls">
            <button type="button" id="toggleRun" class="toggle-run">Pause</button>
            <span id="timeLabel" class="sim-stat">Sim time 00:00:00</span>
            <div class="speed-slider">
              <input type="range" id="speedSlider" min="1" max="60" step="1" />
              <span id="speedValue">1 s → 1 min</span>
            </div>
          </div>
        </div>
        <div class="canvas-overlay canvas-overlay-bottom">
          <span id="detailsLabel"></span>
        </div>
      </div>
    </section>
  `,{canvas:document.querySelector("#beachCanvas"),derivedList:document.querySelector("#derivedMetrics"),status:document.querySelector("#status"),timeLabel:document.querySelector("#timeLabel"),toggleButton:document.querySelector("#toggleRun"),detailsLabel:document.querySelector("#detailsLabel"),derivedSection:document.querySelector("#derivedSection"),derivedToggle:document.querySelector("#toggleDerived"),speedSlider:document.querySelector("#speedSlider"),speedValue:document.querySelector("#speedValue"),atvOverrideInput:document.querySelector("#atvOverrideInput"),atvOverrideHint:document.querySelector("#atvOverrideHint")}}function Re(t,m){Fe.forEach(a=>{const e=document.querySelector(`[data-section="${a.section}"]`);if(!e)return;const s=document.createElement("div");s.className="field";const r=document.createElement("label");r.textContent=a.label;let o;if(a.type==="select"&&Array.isArray(a.options))o=document.createElement("select"),a.options.forEach(c=>{const v=document.createElement("option");v.value=String(c.value),v.textContent=c.label,o.append(v)}),o.value=String(t[a.key]),o.addEventListener("change",()=>{const c=o.value,v=Number(c),w=a.options.every(x=>typeof x.value=="number")&&Number.isFinite(v)?v:c;m(a.key,w)});else{o=document.createElement("input");const c=a.type==="text"?"text":"number";if(o.type=c,a.key==="trailerCapacityM3"?o.value=Number(t[a.key]??0).toFixed(1):o.value=String(t[a.key]??""),a.placeholder&&(o.placeholder=a.placeholder),c==="number"){a.min!==void 0&&(o.min=String(a.min)),a.max!==void 0&&(o.max=String(a.max)),a.step!==void 0&&(o.step=String(a.step));const v=()=>{const P=Number(o.value);Number.isFinite(P)&&(m(a.key,P),a.key==="trailerCapacityM3"&&(o.value=P.toFixed(1)))};a.key==="trailerCapacityM3"?(o.addEventListener("change",v),o.addEventListener("blur",v)):o.addEventListener("input",v)}else o.addEventListener("input",()=>{m(a.key,o.value)})}s.append(r,o),e.append(s)})}function We(t,m){const a=document.querySelector("#speedSlider"),e=document.querySelector("#speedValue");if(!a||!e)return;const s=r=>{const o=Math.max(1,Math.round(r));e.textContent=`1 s → ${o} min`,m(r)};a.value=String(t.minutesPerSecond),s(t.minutesPerSecond),a.addEventListener("input",()=>{const r=Number(a.value);!Number.isFinite(r)||r<=0||(t.minutesPerSecond=r,s(r))})}function Ve(t,m,a={}){const e=a.input??document.querySelector("#atvOverrideInput");if(!e)return;const s=r=>{const o=Number(r);!Number.isFinite(o)||o<=0?(t.atvOverrideCount=0,e.value="0"):(t.atvOverrideCount=Math.round(o),e.value=String(t.atvOverrideCount)),m()};e.value=t.atvOverrideCount>0?String(t.atvOverrideCount):"0",e.addEventListener("change",()=>{s(e.value)}),e.addEventListener("blur",()=>{s(e.value)}),e.addEventListener("keydown",r=>{r.key==="Enter"&&(r.preventDefault(),s(e.value))})}function Be(t,m,a){t.innerHTML="",He.forEach(e=>{let s;e.key==="totalMinutes"?s=a.totalMinutes:e.key==="integerAtvs"?s=a.integerAtvs??m.integerAtvs:s=m[e.key];const r=document.createElement("li");r.className="metric-card";const o=document.createElement("span");o.className="label",o.textContent=e.label;const c=document.createElement("span");if(c.className="value",c.textContent=e.format?e.format(s):String(s),r.append(o,c),e.key==="integerAtvs"&&a.overrideAtvs){const v=document.createElement("span");v.className="note";const P=k(a.computedIntegerAtvs,{maximumFractionDigits:0});v.textContent=`Manual override active (computed ${P})`,r.append(v)}else if(e.note){const v=document.createElement("span");v.className="note",v.textContent=e.note,r.append(v)}t.append(r)})}function $e(t,m,a){const e=t.getContext("2d"),s=t.width,r=t.height,o=70;let c={loadMarkers:[],loadStates:[],segmentsByAtv:[],totalMinutes:1,numAtvs:0,beachLength:me.beachLengthM},v={...me},P=Le,w=[],x=!1,S=!1,C=0,L=null,M=null,T=[];const D=new Set;let I="Loaded 0.0 m³",h="Crew idle time 00:00:00";const g=r*.3,V=r*.4,F=g+V;function O(){const n={paused:G(),manuallyPaused:x,autoPaused:S};D.forEach(i=>{try{i(n)}catch{}})}function ie(){M!==null&&(cancelAnimationFrame(M),M=null)}function z(){M===null&&!G()&&(M=requestAnimationFrame(ve))}function se(n,i){c={...n,beachLength:i.beachLengthM},v={...i},w=new Array(c.numAtvs).fill(1),C=0,L=null,S=!1,T=K(c.loadStates??[]),j(C),$(C),Q(C),O(),z()}function R(n){P=n,L=null}function ne(n){const i=x;return typeof n=="boolean"?x=n:x=!x,x?i||ie():(S&&(S=!1,C=0),L=null,z()),O(),x}function G(){return x||S}function J(n){return typeof n!="function"?()=>{}:(D.add(n),n({paused:G(),manuallyPaused:x,autoPaused:S}),()=>{D.delete(n)})}function K(n){const i=n.map(l=>{const p=Math.min(l.arrivalMin,l.cleanedAtMinute),u=Math.max(l.arrivalMin,l.cleanedAtMinute);return u>p?{start:p,end:u}:null}).filter(Boolean).sort((l,p)=>l.start-p.start);if(!i.length)return[];const f=[i[0]];for(let l=1;l<i.length;l+=1){const p=i[l],u=f[f.length-1];p.start<=u.end?u.end=Math.max(u.end,p.end):f.push({...p})}return f}function X(n){if(!T.length||n<=T[0].start)return 0;let i=0;for(let f=0;f<T.length;f+=1){const{start:l,end:p}=T[f];if(n<=l)break;const u=Math.min(p,n);if(i+=Math.max(0,u-l),n<=p)break}return Math.min(i,Math.max(0,n))}function oe(n){const i=Math.max(0,Math.floor(n*60)),f=Math.floor(i/3600),l=Math.floor(i%3600/60),p=i%60;return`${String(f).padStart(2,"0")}:${String(l).padStart(2,"0")}:${String(p).padStart(2,"0")}`}function j(n){m&&(m.textContent=`Sim time ${oe(n)}`)}function $(n){const i=Number(v.trailerCapacityM3)||0;if(i<=0||!Array.isArray(c.loadStates)){I="Loaded 0.0 m³";return}let f=0;c.loadStates.forEach(p=>{const u=p.arrivalMin,d=p.cleanedAtMinute;if(!(!Number.isFinite(u)||!Number.isFinite(d)||d<=u)){if(n>=d)f+=i;else if(n>u){const E=Math.max(0,Math.min((n-u)/(d-u),1));f+=i*E}}}),I=`Loaded ${k(f,{minimumFractionDigits:1,maximumFractionDigits:1})} m³`}function Q(n){const i=X(n),f=Math.max(0,n-i);h=`Crew idle time ${oe(f)}`}function U(){e.fillStyle="#0f2034",e.fillRect(0,0,s,r);const n=e.createLinearGradient(0,0,0,g);n.addColorStop(0,"rgba(236, 221, 180, 0.92)"),n.addColorStop(.6,"rgba(226, 205, 156, 0.9)"),n.addColorStop(1,"rgba(212, 186, 134, 0.88)"),e.fillStyle=n,e.fillRect(0,0,s,g);const i=e.createLinearGradient(0,F,0,r);i.addColorStop(0,"rgba(118, 213, 237, 0.85)"),i.addColorStop(1,"rgba(64, 191, 255, 0.9)"),e.fillStyle=i,e.fillRect(0,F,s,r-F),e.strokeStyle="rgba(255, 255, 255, 0.25)",e.lineWidth=2,e.beginPath(),e.moveTo(o,F),e.lineTo(s-o,F),e.stroke(),e.save(),e.textAlign="center",e.fillStyle="rgba(255, 255, 255, 0.7)",e.font='16px "Inter", sans-serif';const f=Math.min(r-12,F+28),p=[`Beach length = ${k(v.beachLengthM,{maximumFractionDigits:0})} m`,I,h];e.fillText(p.join("   •   "),s/2,f),e.restore()}function B(n){const i=s-o*2,l=(F-g)*.25,p=F-l;c.loadStates.forEach(u=>{const d=o+u.startPosM/c.beachLength*i,E=o+u.endPosM/c.beachLength*i,H=u.arrivalMin,y=u.cleanedAtMinute;if(y<=0)return;const N=e.createLinearGradient(d,p,E,F);if(N.addColorStop(0,"rgba(194, 178, 128, 0.68)"),N.addColorStop(.55,"rgba(214, 198, 148, 0.74)"),N.addColorStop(.75,"rgba(118, 213, 237, 0.8)"),N.addColorStop(1,"rgba(76, 195, 255, 0.85)"),e.save(),e.fillStyle=N,e.fillRect(d,p,E-d,l),e.restore(),n>=y)return;let q=1;if(n>H){const A=Math.max(y-H,.01),W=Math.min(Math.max((n-H)/A,0),1);q=Math.max(0,1-W)}if(q<=0)return;e.save(),e.globalAlpha=q;const b=e.createLinearGradient(d,p,E,F);b.addColorStop(0,"rgba(121, 85, 72, 0.92)"),b.addColorStop(.5,"rgba(93, 64, 55, 0.95)"),b.addColorStop(1,"rgba(121, 85, 72, 0.92)"),e.fillStyle=b,e.fillRect(d,p,E-d,l),e.restore()})}function Te(n,i,f=1){if(!n.length)return{position:0,phase:"idle",loadId:null,direction:f,progress:0};const l=n[n.length-1].endMin;if(l===0)return{position:0,phase:"idle",loadId:null,direction:f,progress:0};let p=i%l,u=f;for(let H=0;H<n.length;H+=1){const y=n[H];if(p<y.startMin)return{position:y.startPosM,phase:"idle",loadId:y.loadId,direction:u,progress:0};if(p<=y.endMin||y.endMin===y.startMin){const N=y.endMin-y.startMin,q=N>0?(p-y.startMin)/N:1,b=y.startPosM+(y.endPosM-y.startPosM)*q,A=Math.sign(y.endPosM-y.startPosM);return A!==0&&(u=A),{position:b,phase:y.phase,loadId:y.loadId,direction:u,progress:q}}}const d=n[n.length-1],E=Math.sign(d.endPosM-d.startPosM);return E!==0&&(u=E),{position:d.endPosM,phase:"idle",loadId:d.loadId,direction:u,progress:0}}function Ae(){e.strokeStyle="rgba(255, 255, 255, 0.12)",e.lineWidth=1,e.setLineDash([6,8]),c.loadMarkers.forEach(n=>{const i=o+n/c.beachLength*(s-o*2);e.beginPath(),e.moveTo(i,g),e.lineTo(i,F),e.stroke()}),e.setLineDash([])}function ke(n,i,f,l=1,p=!1){e.save();const u=5,d=28,E=12,H=36,y=14,N=8,q=l>=0?1:-1,b=n-d/2,A=i-u-E,W=b+d,le=i-u-y+2;let _,Y,te,de;if(q>=0?(Y=b-N,_=Y-H,te=b,de=Y):(_=W+N,Y=_+H,te=W,de=_),e.fillStyle=f,e.fillRect(b,A,d,E),e.fillStyle="rgba(255, 255, 255, 0.2)",e.fillRect(b+6,A+3,12,E-6),e.fillStyle=f,e.fillRect(_,le,H,y),p){const ee=y*.9,ye=H*.08,ue=_+ye,be=Y-ye,re=le+2,De=re-ee;e.fillStyle="#8d6e63",e.beginPath(),e.moveTo(ue,re),e.quadraticCurveTo((ue+be)/2,De,be,re),e.lineTo(ue,re),e.closePath(),e.fill()}e.strokeStyle="rgba(255, 255, 255, 0.4)",e.lineWidth=2,e.beginPath(),e.moveTo(te,i-u-2),e.lineTo(de,i-u+1),e.stroke();const he="rgba(15, 32, 52, 0.85)",xe=[{x:b+d*.25,y:i},{x:W-d*.25,y:i},{x:_+H*.2,y:i+1},{x:Y-H*.2,y:i+1}];e.fillStyle=he,xe.forEach(ee=>{e.beginPath(),e.arc(ee.x,ee.y,u,0,Math.PI*2),e.fill(),e.fillStyle="rgba(255, 255, 255, 0.25)",e.beginPath(),e.arc(ee.x,ee.y,u*.4,0,Math.PI*2),e.fill(),e.fillStyle=he}),e.fillStyle="rgba(15, 32, 52, 0.85)";const fe=12,Ce=q>=0?W-fe+2:b-2;e.fillRect(Ce,A-6,fe,6),e.beginPath(),q>=0?(e.moveTo(W-d*.7,A),e.lineTo(W-d*.4,A-8),e.lineTo(W-d*.15,A-8),e.lineTo(W-d*.3,A)):(e.moveTo(b+d*.7,A),e.lineTo(b+d*.4,A-8),e.lineTo(b+d*.15,A-8),e.lineTo(b+d*.3,A)),e.closePath(),e.fill();const Z=q>=0?W-d*.35:b+d*.35,ce=4,pe=A-ce-2,we=8,ge=6;e.fillStyle="#ffd180",e.beginPath(),e.arc(Z,pe,ce,0,Math.PI*2),e.fill(),e.fillStyle="#0f2034",e.fillRect(Z-ge/2,pe+ce-1,ge,we);const ae=A+2,Me=10;e.strokeStyle="#cfd8dc",e.lineWidth=2,e.beginPath(),q>=0?(e.moveTo(Z-2,ae),e.lineTo(Z-2-Me,ae-2)):(e.moveTo(Z+2,ae),e.lineTo(Z+2+Me,ae-2)),e.stroke(),e.restore()}function Pe(n){const i=[];c.segmentsByAtv.forEach((f,l)=>{const p=w[l]??1,{position:u,phase:d,loadId:E,direction:H,progress:y}=Te(f,n,p);w[l]=H||p||1;const N=Se[l%Se.length],q=o+u/c.beachLength*(s-o*2),b=F-30-l*18,A=.001,W=d==="loading"&&y>=1-A||d==="return"||d==="hold"||d==="approach"||d==="transfer"&&y<1-A;ke(q,b,N,w[l],W),e.fillStyle=N,e.font='12px "Inter", sans-serif',e.fillText(`ATV ${l+1}`,q-20,b+22);const _=(E?c.loadStates.find(te=>te.loadId===E):void 0)?.crew??"Crew",Y=k(v.trailerCapacityM3,{minimumFractionDigits:1,maximumFractionDigits:1});i.push(`ATV ${l+1}: ${d} load ${E??"—"} (${_}, capacity ${Y} m³)`)}),a.textContent=i.join("  •  ")}function ve(n){if(G()){M=null;return}L===null&&(L=n);const i=Math.max((n-L)/1e3,0);L=n;const f=Math.max(c.totalMinutes,1);C+=i*P,C>f&&(C=f);const l=C;if(U(),B(l),Ae(),Pe(l),j(l),$(l),Q(l),C>=f){S=!0,M=null,O();return}M=requestAnimationFrame(ve)}return z(),{update:se,updateSpeed:R,toggleManualPause:ne,isPaused:G,onStateChange:J}}function Ue(t,m,a){if(m.atvSpeedKmh<=0){t.textContent="Increase ATV speed above zero to animate the transport cycle.";return}if(a.trailersPerDay<=0||a.requiredAtvs<=0){t.textContent="Adjust inputs to produce a non-zero workload for ATVs.";return}t.textContent=""}function _e(){const t={...me},m={...Ie},{canvas:a,derivedList:e,status:s,timeLabel:r,toggleButton:o,detailsLabel:c,derivedSection:v,derivedToggle:P,atvOverrideInput:w,atvOverrideHint:x}=Oe(),S=$e(a,r,c);let C=!1;function L(){const M=qe(t),T=m.atvOverrideCount>0?m.atvOverrideCount:null,D=Ne(t,M,{overrideAtvCount:T}),I={totalMinutes:D.totalMinutes,integerAtvs:D.numAtvs,overrideAtvs:D.overrideAtvCount!=null,computedIntegerAtvs:M.integerAtvs};if(Be(e,M,I),Ue(s,t,M),S.update(D,t),x){const h=k(M.integerAtvs,{maximumFractionDigits:0});if(D.overrideAtvCount!=null){const g=k(D.overrideAtvCount,{maximumFractionDigits:0});x.textContent=`Manual override active (${g} ATVs, computed ${h}).`}else x.textContent=`Using computed requirement (${h} ATVs).`}}if(Re(t,(M,T)=>{t[M]=T,L()}),We(m,M=>{S.updateSpeed(M)}),o){const M=({paused:T})=>{o.textContent=T?"Run":"Pause"};S.onStateChange(M),o.addEventListener("click",()=>{const T=S.isPaused();S.toggleManualPause(!T)})}Ve(m,L,{input:w}),P.addEventListener("click",()=>{C=!C,v.classList.toggle("collapsed",C),P.textContent=C?"Show metrics":"Hide metrics"}),L()}_e();
