(function(){const p=document.createElement("link").relList;if(p&&p.supports&&p.supports("modulepreload"))return;for(const d of document.querySelectorAll('link[rel="modulepreload"]'))i(d);new MutationObserver(d=>{for(const e of d)if(e.type==="childList")for(const n of e.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function o(d){const e={};return d.integrity&&(e.integrity=d.integrity),d.referrerPolicy&&(e.referrerPolicy=d.referrerPolicy),d.crossOrigin==="use-credentials"?e.credentials="include":d.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function i(d){if(d.ep)return;d.ep=!0;const e=o(d);fetch(d.href,e)}})();const Ee=52/12,Le=1,Se=["#64ffda","#90caf9","#ffd54f","#ff8a80","#ce93d8","#80cbc4"],ve={seasonLengthMonths:5,sargassumVolumeM3:7183.15,workDaysPerWeek:6,workHoursPerDay:5,trailerCapacityM3:2,timePerWorkerLoadM3Minutes:25,disposalTruckCount:1,disposalTruckCapacityM3:8,disposalDistanceM:2e3,disposalTruckSpeedKmh:20,atvSpeedKmh:3,beachLengthM:600,loadTransferTimeMinutes:11,loadingMode:"single"},Fe={minutesPerSecond:Le,atvOverrideCount:0},He=[{key:"seasonLengthMonths",label:"Length of season (months)",min:1,max:12,step:.1,section:"season"},{key:"sargassumVolumeM3",label:"Estimated Sargassum volume (m³)",min:0,max:2e4,step:10,section:"season"},{key:"workDaysPerWeek",label:"Working days per week",min:1,max:7,step:1,section:"season"},{key:"workHoursPerDay",label:"Working hours per day",min:1,max:24,step:.5,section:"season"},{key:"trailerCapacityM3",label:"Trailer capacity (m³)",min:.1,max:5,step:.1,section:"labor"},{key:"timePerWorkerLoadM3Minutes",label:"Time to load 1 m³ per worker (minutes)",min:1,max:60,step:1,section:"labor"},{key:"atvSpeedKmh",label:"ATV speed (km/h)",min:0,max:15,step:.1,section:"atv"},{key:"beachLengthM",label:"Beach length (m)",min:60,max:1500,step:10,section:"atv"},{key:"loadTransferTimeMinutes",label:"Load transfer wait (minutes)",min:0,max:60,step:1,section:"atv"},{key:"disposalTruckCount",label:"Disposal Trucks (number of)",min:0,max:20,step:1,section:"labor"},{key:"disposalTruckCapacityM3",label:"Truck Capacity (m³, one decimal place)",min:0,max:30,step:.1,section:"labor"},{key:"disposalDistanceM",label:"Distance to Disposal site (meters)",min:0,max:2e4,step:50,section:"labor"},{key:"disposalTruckSpeedKmh",label:"Average Truck speed (km/h)",min:0,max:80,step:1,section:"labor"},{key:"loadingMode",label:"Loading mode",type:"select",options:[{value:"single",label:"Whole crew from west"},{value:"split",label:"Split crews west/east"}],section:"labor"}],qe=[{key:"avgDailyRemoval",label:"Average daily removal (m³)",format:t=>C(t,{maximumFractionDigits:2})},{key:"avgHourlyRemoval",label:"Average hourly removal (m³)",format:t=>C(t,{maximumFractionDigits:2})},{key:"trailersPerDay",label:"Trailer loads per day",format:t=>C(t,{maximumFractionDigits:2})},{key:"timeWorkerLoadHours",label:"Worker hours to load trailers (per day)",format:t=>C(t,{maximumFractionDigits:2})},{key:"requiredBeachWorkers",label:"Beach workers required (load crew)",format:t=>C(t,{maximumFractionDigits:2})},{key:"timeToLoadTrailerMinutes",label:"Time to load trailer (minutes)",format:t=>C(t,{maximumFractionDigits:2})},{key:"timeToLoadingAreaMinutes",label:"Travel to loading area (minutes)",format:t=>C(t,{maximumFractionDigits:2})},{key:"totalAtvTimePerLoadMinutes",label:"ATV cycle time per load (minutes)",format:t=>C(t,{maximumFractionDigits:2})},{key:"timePerAtvHours",label:"ATV duty time (hours/day)",format:t=>C(t,{maximumFractionDigits:2})},{key:"requiredAtvs",label:"Required # of ATVs",format:t=>C(t,{maximumFractionDigits:2})},{key:"requiredAtvDrivers",label:"Required # of ATV drivers",format:t=>C(t,{maximumFractionDigits:2})},{key:"requiredUnloadWorkers",label:"Required # of unload workers",format:t=>C(t,{maximumFractionDigits:2})},{key:"integerLoads",label:"Loads simulated today",format:t=>C(t,{maximumFractionDigits:0})},{key:"integerAtvs",label:"ATVs in rotation",format:t=>C(t,{maximumFractionDigits:0})},{key:"totalMinutes",label:"Day cycle duration (minutes)",format:t=>C(t,{maximumFractionDigits:1}),note:"Full rotation for busiest ATV within the day"}];function C(t,p={}){return Number.isFinite(t)?new Intl.NumberFormat("en-US",{maximumFractionDigits:2,minimumFractionDigits:0,...p}).format(t):"—"}function Ne(t){const p=t.seasonLengthMonths*Ee,o=p*t.workDaysPerWeek,i=o>0?t.sargassumVolumeM3/o:0,d=t.workHoursPerDay>0?i/t.workHoursPerDay:0,e=t.trailerCapacityM3>0?i/t.trailerCapacityM3:0,f=t.timePerWorkerLoadM3Minutes*i/60,s=t.workHoursPerDay>0?f/t.workHoursPerDay:0,P=s>0?t.trailerCapacityM3*t.timePerWorkerLoadM3Minutes/s:0,H=t.atvSpeedKmh*1e3/60,N=t.beachLengthM/2,E=H>0?N/H:0,q=E,y=E+P+q,w=y*e/60,D=t.workHoursPerDay>0?w/t.workHoursPerDay:0,S=D,x=t.workHoursPerDay>0?e*P/60/t.workHoursPerDay:0,c=Math.max(1,Math.round(e)),g=Math.max(1,Math.ceil(D));return{workingWeeks:p,workingDaysSeason:o,avgDailyRemoval:i,avgHourlyRemoval:d,trailersPerDay:e,timeWorkerLoadHours:f,requiredBeachWorkers:s,timeToLoadTrailerMinutes:P,timeToLoadingAreaMinutes:E,totalAtvTimePerLoadMinutes:y,timePerAtvHours:w,requiredAtvs:D,requiredAtvDrivers:S,requiredUnloadWorkers:x,integerLoads:c,integerAtvs:g}}function Re(t,p,o={}){const i=p.integerLoads,d=Number(o.overrideAtvCount),e=Number.isFinite(d)&&d>0?Math.max(1,Math.round(d)):null,n=e??p.integerAtvs,f=[],s=[],P=Array.from({length:n},()=>[]),H=Array.from({length:n},()=>0),N=Math.max(0,t.loadTransferTimeMinutes??0);if(i<=0||n<=0)return{loadMarkers:f,segmentsByAtv:P,totalMinutes:0,numLoads:0,numAtvs:n,loadStates:s};const E=t.beachLengthM/i,q=p.timeToLoadTrailerMinutes,y=t.atvSpeedKmh>0?t.atvSpeedKmh*1e3/60:0;let w=0,D=0;const S=Array.from({length:i},(c,g)=>{const L=g*E,j=(g+1)*E,b=L+E/2;return{loadIndex:g+1,startPosM:L,endPosM:j,centerPosM:b}});f.push(...S.map(c=>c.centerPosM).sort((c,g)=>c-g));let x;if((t.loadingMode??"single")==="split"){x=[];let c=0,g=i-1,L=!0;for(;c<=g;)L?(x.push({...S[c],crew:"West crew"}),c+=1):(x.push({...S[g],crew:"East crew"}),g-=1),L=!L;x.length&&i%2===1&&(x[x.length-1].crew="Both crews")}else x=S.map(c=>({...c,crew:"Main crew"}));return x.forEach(c=>{const g=c.centerPosM,L=c.startPosM,j=c.endPosM,b=Math.min(g,5),ae=y>0?g/y:0,re=y>0?Math.max(g-b,0)/y:0,ne=y>0?b/y:0;let R=0,ie=H[0];for(let U=1;U<n;U+=1)H[U]<ie-Number.EPSILON&&(ie=H[U],R=U);const se=H[R],$=se+ae,X=$+q,z=X+re,ce=z+ne;let J=0,Y=ce;Y<w&&(J=w-Y,Y=w);const Q=Y+N,G=U=>{P[R].push(U),D=Math.max(D,U.endMin)};G({atvId:R,loadId:c.loadIndex,phase:"outbound",startMin:se,endMin:$,startPosM:0,endPosM:g}),G({atvId:R,loadId:c.loadIndex,phase:"loading",startMin:$,endMin:X,startPosM:g,endPosM:g}),re>0?G({atvId:R,loadId:c.loadIndex,phase:"return",startMin:X,endMin:z,startPosM:g,endPosM:b}):G({atvId:R,loadId:c.loadIndex,phase:"return",startMin:X,endMin:X,startPosM:g,endPosM:b}),J>0&&G({atvId:R,loadId:c.loadIndex,phase:"hold",startMin:z,endMin:z+J,startPosM:b,endPosM:b}),G({atvId:R,loadId:c.loadIndex,phase:"approach",startMin:z+J,endMin:Y,startPosM:b,endPosM:0}),G({atvId:R,loadId:c.loadIndex,phase:"transfer",startMin:Y,endMin:Q,startPosM:0,endPosM:0}),H[R]=Q,w=Q,s.push({startPosM:L,endPosM:j,arrivalMin:$,cleanedAtMinute:X,crew:c.crew,loadId:c.loadIndex})}),{loadMarkers:f,segmentsByAtv:P.map(c=>c.sort((g,L)=>g.startMin-L.startMin)),totalMinutes:D,numLoads:i,numAtvs:n,loadStates:s,overrideAtvCount:e}}function Oe(){const t=document.querySelector("#app");return t.innerHTML=`
    <section class="controls">
      <div class="control-header">
        <h1>HMB Beach Cleanup Model</h1>
        <p>Set the season-scale inputs from the spreadsheet; the animation shows how one workday plays out with those assumptions.</p>
      </div>
      <div class="controls-groups">
        <div class="control-group">
          <h2>Season Parameters</h2>
          <div class="input-grid" data-section="season"></div>
        </div>
        <div class="control-group">
          <h2>Trailer &amp; Labor</h2>
          <div class="input-grid" data-section="labor"></div>
        </div>
        <div class="control-group">
          <h2>ATV Operations</h2>
          <div class="input-grid" data-section="atv"></div>
          <div class="field override-field">
            <label for="atvOverrideInput">Override # of ATVs</label>
            <input
              type="number"
              id="atvOverrideInput"
              min="0"
              step="1"
              placeholder="0 for auto"
            />
            <span class="field-note" id="atvOverrideHint"></span>
          </div>
        </div>
      </div>
      <div class="derived-section" id="derivedSection">
        <div class="derived-header">
          <h2>Derived Metrics</h2>
          <button type="button" class="toggle-derived" id="toggleDerived">Hide metrics</button>
        </div>
        <ul class="metrics-list" id="derivedMetrics"></ul>
      </div>
      <div class="status" id="status"></div>
    </section>
    <section class="simulation">
      <div class="simulation-body">
        <div class="fleet-canvas-container">
          <canvas id="fleetCanvas" width="220" height="200"></canvas>
        </div>
        <div class="canvas-container">
          <canvas id="beachCanvas" width="720" height="336"></canvas>
          <div class="canvas-overlay canvas-overlay-top">
            <div class="sim-controls">
              <button type="button" id="toggleRun" class="toggle-run">Pause</button>
              <div class="sim-timing">
                <span id="timeLabel" class="sim-stat">Sim time 00:00:00</span>
                <div class="speed-slider">
                  <input type="range" id="speedSlider" min="1" max="60" step="1" />
                  <span id="speedValue">1 s → 1 min</span>
                </div>
              </div>
            </div>
            <div class="sim-secondary">
              <span id="loadedLabel" class="sim-stat">Loaded 0.0 m³</span>
              <span class="sim-sep">•</span>
              <span id="idleLabel" class="sim-stat">Crew idle time 00:00:00</span>
            </div>
          </div>
          <div class="canvas-overlay canvas-overlay-bottom">
            <span id="detailsLabel"></span>
          </div>
        </div>
      </div>
    </section>
  `,{canvas:document.querySelector("#beachCanvas"),fleetCanvas:document.querySelector("#fleetCanvas"),derivedList:document.querySelector("#derivedMetrics"),status:document.querySelector("#status"),timeLabel:document.querySelector("#timeLabel"),loadedLabel:document.querySelector("#loadedLabel"),idleLabel:document.querySelector("#idleLabel"),toggleButton:document.querySelector("#toggleRun"),detailsLabel:document.querySelector("#detailsLabel"),derivedSection:document.querySelector("#derivedSection"),derivedToggle:document.querySelector("#toggleDerived"),speedSlider:document.querySelector("#speedSlider"),speedValue:document.querySelector("#speedValue"),atvOverrideInput:document.querySelector("#atvOverrideInput"),atvOverrideHint:document.querySelector("#atvOverrideHint")}}function We(t,p){He.forEach(o=>{const i=document.querySelector(`[data-section="${o.section}"]`);if(!i)return;const d=document.createElement("div");d.className="field";const e=document.createElement("label");e.textContent=o.label;let n;if(o.type==="select"&&Array.isArray(o.options))n=document.createElement("select"),o.options.forEach(f=>{const s=document.createElement("option");s.value=String(f.value),s.textContent=f.label,n.append(s)}),n.value=String(t[o.key]),n.addEventListener("change",()=>{const f=n.value,s=Number(f),H=o.options.every(N=>typeof N.value=="number")&&Number.isFinite(s)?s:f;p(o.key,H)});else{n=document.createElement("input");const f=o.type==="text"?"text":"number";if(n.type=f,o.key==="trailerCapacityM3"?n.value=Number(t[o.key]??0).toFixed(1):n.value=String(t[o.key]??""),o.placeholder&&(n.placeholder=o.placeholder),f==="number"){o.min!==void 0&&(n.min=String(o.min)),o.max!==void 0&&(n.max=String(o.max)),o.step!==void 0&&(n.step=String(o.step));const s=()=>{const P=Number(n.value);Number.isFinite(P)&&(p(o.key,P),o.key==="trailerCapacityM3"&&(n.value=P.toFixed(1)))};o.key==="trailerCapacityM3"?(n.addEventListener("change",s),n.addEventListener("blur",s)):n.addEventListener("input",s)}else n.addEventListener("input",()=>{p(o.key,n.value)})}d.append(e,n),i.append(d)})}function Ve(t,p){const o=document.querySelector("#speedSlider"),i=document.querySelector("#speedValue");if(!o||!i)return;const d=e=>{const n=Math.max(1,Math.round(e));i.textContent=`1 s → ${n} min`,p(e)};o.value=String(t.minutesPerSecond),d(t.minutesPerSecond),o.addEventListener("input",()=>{const e=Number(o.value);!Number.isFinite(e)||e<=0||(t.minutesPerSecond=e,d(e))})}function Be(t,p,o={}){const i=o.input??document.querySelector("#atvOverrideInput");if(!i)return;const d=e=>{const n=Number(e);!Number.isFinite(n)||n<=0?(t.atvOverrideCount=0,i.value="0"):(t.atvOverrideCount=Math.round(n),i.value=String(t.atvOverrideCount)),p()};i.value=t.atvOverrideCount>0?String(t.atvOverrideCount):"0",i.addEventListener("change",()=>{d(i.value)}),i.addEventListener("blur",()=>{d(i.value)}),i.addEventListener("keydown",e=>{e.key==="Enter"&&(e.preventDefault(),d(i.value))})}function $e(t,p,o){t.innerHTML="",qe.forEach(i=>{let d;i.key==="totalMinutes"?d=o.totalMinutes:i.key==="integerAtvs"?d=o.integerAtvs??p.integerAtvs:d=p[i.key];const e=document.createElement("li");e.className="metric-card";const n=document.createElement("span");n.className="label",n.textContent=i.label;const f=document.createElement("span");if(f.className="value",f.textContent=i.format?i.format(d):String(d),e.append(n,f),i.key==="integerAtvs"&&o.overrideAtvs){const s=document.createElement("span");s.className="note";const P=C(o.computedIntegerAtvs,{maximumFractionDigits:0});s.textContent=`Manual override active (computed ${P})`,e.append(s)}else if(i.note){const s=document.createElement("span");s.className="note",s.textContent=i.note,e.append(s)}t.append(e)})}function Ge(t,p,o,i,d){const e=t.getContext("2d"),n=t.width,f=t.height;let s={loadMarkers:[],loadStates:[],segmentsByAtv:[],totalMinutes:1,numAtvs:0,beachLength:ve.beachLengthM},P={...ve},H=Le,N=[],E=!1,q=!1,y=0,w=null,D=null,S=[];const x=new Set;let c="Loaded 0.0 m³",g="Crew idle time 00:00:00";const L=f*.3,j=f*.4,b=L+j;function ae(){const a={paused:$(),manuallyPaused:E,autoPaused:q};x.forEach(r=>{try{r(a)}catch{}})}function re(){D!==null&&(cancelAnimationFrame(D),D=null)}function ne(){D===null&&!$()&&(D=requestAnimationFrame(pe))}function R(a,r){s={...a,beachLength:r.beachLengthM},P={...r},N=new Array(s.numAtvs).fill(1),y=0,w=null,q=!1,S=z(s.loadStates??[]),Y(y),Q(y),G(y),ae(),ne()}function ie(a){H=a,w=null}function se(a){const r=E;return typeof a=="boolean"?E=a:E=!E,E?r||re():(q&&(q=!1,y=0),w=null,ne()),ae(),E}function $(){return E||q}function X(a){return typeof a!="function"?()=>{}:(x.add(a),a({paused:$(),manuallyPaused:E,autoPaused:q}),()=>{x.delete(a)})}function z(a){const r=a.map(l=>{const h=Math.min(l.arrivalMin,l.cleanedAtMinute),m=Math.max(l.arrivalMin,l.cleanedAtMinute);return m>h?{start:h,end:m}:null}).filter(Boolean).sort((l,h)=>l.start-h.start);if(!r.length)return[];const v=[r[0]];for(let l=1;l<r.length;l+=1){const h=r[l],m=v[v.length-1];h.start<=m.end?m.end=Math.max(m.end,h.end):v.push({...h})}return v}function ce(a){if(!S.length||a<=S[0].start)return 0;let r=0;for(let v=0;v<S.length;v+=1){const{start:l,end:h}=S[v];if(a<=l)break;const m=Math.min(h,a);if(r+=Math.max(0,m-l),a<=h)break}return Math.min(r,Math.max(0,a))}function J(a){const r=Math.max(0,Math.floor(a*60)),v=Math.floor(r/3600),l=Math.floor(r%3600/60),h=r%60;return`${String(v).padStart(2,"0")}:${String(l).padStart(2,"0")}:${String(h).padStart(2,"0")}`}function Y(a){p&&(p.textContent=`Sim time ${J(a)}`)}function Q(a){const r=Number(P.trailerCapacityM3)||0;if(r<=0||!Array.isArray(s.loadStates)){c="Loaded 0.0 m³";return}let v=0;s.loadStates.forEach(h=>{const m=h.arrivalMin,u=h.cleanedAtMinute;if(!(!Number.isFinite(m)||!Number.isFinite(u)||u<=m)){if(a>=u)v+=r;else if(a>m){const k=Math.max(0,Math.min((a-m)/(u-m),1));v+=r*k}}}),c=`Loaded ${C(v,{minimumFractionDigits:1,maximumFractionDigits:1})} m³`,o&&(o.textContent=c)}function G(a){const r=ce(a),v=Math.max(0,a-r);g=`Crew idle time ${J(v)}`,i&&(i.textContent=g)}function U(){e.fillStyle="#0f2034",e.fillRect(0,0,n,f);const a=e.createLinearGradient(0,0,0,L);a.addColorStop(0,"rgba(214, 196, 148, 0.82)"),a.addColorStop(1,"rgba(198, 174, 122, 0.78)"),e.fillStyle=a,e.fillRect(0,0,n,L);const r=e.createLinearGradient(0,b,0,f);r.addColorStop(0,"rgba(118, 213, 237, 0.85)"),r.addColorStop(1,"rgba(64, 191, 255, 0.9)"),e.fillStyle=r,e.fillRect(0,b,n,f-b);const v=e.createLinearGradient(0,L,0,b);v.addColorStop(0,"rgba(214, 196, 148, 0.82)"),v.addColorStop(1,"rgba(198, 174, 122, 0.78)"),e.fillStyle=v,e.fillRect(0,L,n,b-L),e.strokeStyle="rgba(255, 255, 255, 0.25)",e.lineWidth=2,e.beginPath(),e.moveTo(0,b),e.lineTo(n,b),e.stroke(),e.save(),e.textAlign="center",e.fillStyle="rgba(255, 255, 255, 0.7)",e.font='16px "Inter", sans-serif';const l=Math.min(f-12,b+28),m=`Beach length = ${C(P.beachLengthM,{maximumFractionDigits:0})} m`;e.fillText(m,n/2,l),e.restore()}function Te(a){const r=n,l=(b-L)*.25,h=b-l;e.save();const m=e.createLinearGradient(0,L,0,b);m.addColorStop(0,"rgba(236, 221, 180, 0.92)"),m.addColorStop(.6,"rgba(226, 205, 156, 0.9)"),m.addColorStop(1,"rgba(212, 186, 134, 0.88)"),e.fillStyle=m,e.fillRect(0,h,n,l),e.restore(),s.loadStates.forEach(u=>{const k=u.startPosM/s.beachLength*r,I=u.endPosM/s.beachLength*r,M=u.arrivalMin,V=u.cleanedAtMinute;if(V<=0)return;const F=e.createLinearGradient(k,L,I,b);F.addColorStop(0,"rgba(236, 221, 180, 0.92)"),F.addColorStop(.6,"rgba(226, 205, 156, 0.9)"),F.addColorStop(1,"rgba(212, 186, 134, 0.88)"),e.save(),e.fillStyle=F,e.fillRect(k,h,I-k,l);const A=h+l*.55,T=Math.min(b,A+l*.45),O=Math.max(2,(T-A)*.35),oe=Math.max(30,(I-k)/4);e.beginPath(),e.moveTo(k,T);for(let K=k;K<=I;K+=3){const Z=A+Math.sin((K-k)/oe*Math.PI*2)*O;e.lineTo(K,Z)}e.lineTo(I,T),e.closePath();const W=e.createLinearGradient(0,A,0,T);if(W.addColorStop(0,"rgba(142, 226, 255, 0.55)"),W.addColorStop(1,"rgba(64, 191, 255, 0.4)"),e.fillStyle=W,e.fill(),e.strokeStyle="rgba(64, 191, 255, 0.65)",e.lineWidth=1.1,e.stroke(),e.restore(),a>=V)return;let B=1;if(a>M){const K=Math.max(V-M,.01),Z=Math.min(Math.max((a-M)/K,0),1);B=Math.max(0,1-Z)}if(B<=0)return;e.save(),e.globalAlpha=B;const _=e.createLinearGradient(k,h,I,b);_.addColorStop(0,"rgba(121, 85, 72, 0.92)"),_.addColorStop(.5,"rgba(93, 64, 55, 0.95)"),_.addColorStop(1,"rgba(121, 85, 72, 0.92)"),e.fillStyle=_,e.fillRect(k,h,I-k,l),e.restore()})}function ke(a,r,v=1){if(!a.length)return{position:0,phase:"idle",loadId:null,direction:v,progress:0};const l=a[a.length-1].endMin;if(l===0)return{position:0,phase:"idle",loadId:null,direction:v,progress:0};let h=r%l,m=v;for(let I=0;I<a.length;I+=1){const M=a[I];if(h<M.startMin)return{position:M.startPosM,phase:"idle",loadId:M.loadId,direction:m,progress:0};if(h<=M.endMin||M.endMin===M.startMin){const V=M.endMin-M.startMin,F=V>0?(h-M.startMin)/V:1,A=M.startPosM+(M.endPosM-M.startPosM)*F,T=Math.sign(M.endPosM-M.startPosM);return T!==0&&(m=T),{position:A,phase:M.phase,loadId:M.loadId,direction:m,progress:F}}}const u=a[a.length-1],k=Math.sign(u.endPosM-u.startPosM);return k!==0&&(m=k),{position:u.endPosM,phase:"idle",loadId:u.loadId,direction:m,progress:0}}function xe(){e.strokeStyle="rgba(255, 255, 255, 0.12)",e.lineWidth=1,e.setLineDash([6,8]),s.loadMarkers.forEach(a=>{const r=a/s.beachLength*n;e.beginPath(),e.moveTo(r,L),e.lineTo(r,b),e.stroke()}),e.setLineDash([])}function Ae(a,r,v,l=1,h=!1){e.save();const m=5,u=28,k=12,I=36,M=14,V=8,F=l>=0?1:-1,A=a-u/2,T=r-m-k,O=A+u,oe=r-m-M+2;let W,B,_,K;if(F>=0?(B=A-V,W=B-I,_=A,K=B):(W=O+V,B=W+I,_=O,K=W),e.fillStyle=v,e.fillRect(A,T,u,k),e.fillStyle="rgba(255, 255, 255, 0.2)",e.fillRect(A+6,T+3,12,k-6),e.fillStyle=v,e.fillRect(W,oe,I,M),h){const te=M*.9,ye=I*.08,me=W+ye,be=B-ye,de=oe+2,Ie=de-te;e.fillStyle="#8d6e63",e.beginPath(),e.moveTo(me,de),e.quadraticCurveTo((me+be)/2,Ie,be,de),e.lineTo(me,de),e.closePath(),e.fill()}e.strokeStyle="rgba(255, 255, 255, 0.4)",e.lineWidth=2,e.beginPath(),e.moveTo(_,r-m-2),e.lineTo(K,r-m+1),e.stroke();const Z="rgba(15, 32, 52, 0.85)",Ce=[{x:A+u*.25,y:r},{x:O-u*.25,y:r},{x:W+I*.2,y:r+1},{x:B-I*.2,y:r+1}];e.fillStyle=Z,Ce.forEach(te=>{e.beginPath(),e.arc(te.x,te.y,m,0,Math.PI*2),e.fill(),e.fillStyle="rgba(255, 255, 255, 0.25)",e.beginPath(),e.arc(te.x,te.y,m*.4,0,Math.PI*2),e.fill(),e.fillStyle=Z}),e.fillStyle="rgba(15, 32, 52, 0.85)";const he=12,we=F>=0?O-he+2:A-2;e.fillRect(we,T-6,he,6),e.beginPath(),F>=0?(e.moveTo(O-u*.7,T),e.lineTo(O-u*.4,T-8),e.lineTo(O-u*.15,T-8),e.lineTo(O-u*.3,T)):(e.moveTo(A+u*.7,T),e.lineTo(A+u*.4,T-8),e.lineTo(A+u*.15,T-8),e.lineTo(A+u*.3,T)),e.closePath(),e.fill();const ee=F>=0?O-u*.35:A+u*.35,ue=4,fe=T-ue-2,De=8,ge=6;e.fillStyle="#ffd180",e.beginPath(),e.arc(ee,fe,ue,0,Math.PI*2),e.fill(),e.fillStyle="#0f2034",e.fillRect(ee-ge/2,fe+ue-1,ge,De);const le=T+2,Me=10;e.strokeStyle="#cfd8dc",e.lineWidth=2,e.beginPath(),F>=0?(e.moveTo(ee-2,le),e.lineTo(ee-2-Me,le-2)):(e.moveTo(ee+2,le),e.lineTo(ee+2+Me,le-2)),e.stroke(),e.restore()}function Pe(a){const r=[];s.segmentsByAtv.forEach((v,l)=>{const h=N[l]??1,{position:m,phase:u,loadId:k,direction:I,progress:M}=ke(v,a,h);N[l]=I||h||1;const V=Se[l%Se.length],F=Math.max(0,Math.min(n,m/s.beachLength*n)),A=b-30-l*18,T=.001,O=u==="loading"&&M>=1-T||u==="return"||u==="hold"||u==="approach"||u==="transfer"&&M<1-T;Ae(F,A,V,N[l],O),e.fillStyle=V,e.font='12px "Inter", sans-serif',e.fillText(`ATV ${l+1}`,F-20,A+22);const W=(k?s.loadStates.find(_=>_.loadId===k):void 0)?.crew??"Crew",B=C(P.trailerCapacityM3,{minimumFractionDigits:1,maximumFractionDigits:1});r.push(`ATV ${l+1}: ${u} load ${k??"—"} (${W}, capacity ${B} m³)`)}),d.textContent=r.join("  •  ")}function pe(a){if($()){D=null;return}w===null&&(w=a);const r=Math.max((a-w)/1e3,0);w=a;const v=Math.max(s.totalMinutes,1);y+=r*H,y>v&&(y=v);const l=y;if(U(),Te(l),xe(),Pe(l),Y(l),Q(l),G(l),y>=v){q=!0,D=null,ae();return}D=requestAnimationFrame(pe)}return ne(),{update:R,updateSpeed:ie,toggleManualPause:se,isPaused:$,onStateChange:X}}function Ue(t,p,o){if(p.atvSpeedKmh<=0){t.textContent="Increase ATV speed above zero to animate the transport cycle.";return}if(o.trailersPerDay<=0||o.requiredAtvs<=0){t.textContent="Adjust inputs to produce a non-zero workload for ATVs.";return}t.textContent=""}function _e(){const t={...ve},p={...Fe},{canvas:o,derivedList:i,status:d,timeLabel:e,loadedLabel:n,idleLabel:f,toggleButton:s,detailsLabel:P,derivedSection:H,derivedToggle:N,atvOverrideInput:E,atvOverrideHint:q}=Oe(),y=Ge(o,e,n,f,P);let w=!1;function D(){const S=Ne(t),x=p.atvOverrideCount>0?p.atvOverrideCount:null,c=Re(t,S,{overrideAtvCount:x}),g={totalMinutes:c.totalMinutes,integerAtvs:c.numAtvs,overrideAtvs:c.overrideAtvCount!=null,computedIntegerAtvs:S.integerAtvs};if($e(i,S,g),Ue(d,t,S),y.update(c,t),q){const L=C(S.integerAtvs,{maximumFractionDigits:0});if(c.overrideAtvCount!=null){const j=C(c.overrideAtvCount,{maximumFractionDigits:0});q.textContent=`Manual override active (${j} ATVs, computed ${L}).`}else q.textContent=`Using computed requirement (${L} ATVs).`}}if(We(t,(S,x)=>{t[S]=x,D()}),Ve(p,S=>{y.updateSpeed(S)}),s){const S=({paused:x})=>{s.textContent=x?"Run":"Pause"};y.onStateChange(S),s.addEventListener("click",()=>{const x=y.isPaused();y.toggleManualPause(!x)})}Be(p,D,{input:E}),N.addEventListener("click",()=>{w=!w,H.classList.toggle("collapsed",w),N.textContent=w?"Show metrics":"Hide metrics"}),D()}_e();
