(function(){const m=document.createElement("link").relList;if(m&&m.supports&&m.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))e(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&e(n)}).observe(document,{childList:!0,subtree:!0});function a(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function e(r){if(r.ep)return;r.ep=!0;const i=a(r);fetch(r.href,i)}})();const Ce=52/12,Le=1,Se=["#64ffda","#90caf9","#ffd54f","#ff8a80","#ce93d8","#80cbc4"],me={seasonLengthMonths:5,sargassumVolumeM3:7183.15,workDaysPerWeek:6,workHoursPerDay:5,trailerCapacityM3:2,timePerWorkerLoadM3Minutes:25,atvSpeedKmh:3,beachLengthM:600,loadTransferTimeMinutes:11,loadingMode:"single"},Ee={minutesPerSecond:Le,atvOverrideCount:0},Ie=[{key:"seasonLengthMonths",label:"Length of season (months)",min:1,max:12,step:.1,section:"season"},{key:"sargassumVolumeM3",label:"Estimated Sargassum volume (m³)",min:0,max:2e4,step:10,section:"season"},{key:"workDaysPerWeek",label:"Working days per week",min:1,max:7,step:1,section:"season"},{key:"workHoursPerDay",label:"Working hours per day",min:1,max:24,step:.5,section:"season"},{key:"trailerCapacityM3",label:"Trailer capacity (m³)",min:.1,max:5,step:.1,section:"labor"},{key:"timePerWorkerLoadM3Minutes",label:"Time to load 1 m³ per worker (minutes)",min:1,max:60,step:1,section:"labor"},{key:"atvSpeedKmh",label:"ATV speed (km/h)",min:0,max:15,step:.1,section:"atv"},{key:"beachLengthM",label:"Beach length (m)",min:60,max:1500,step:10,section:"atv"},{key:"loadTransferTimeMinutes",label:"Load transfer wait (minutes)",min:0,max:60,step:1,section:"atv"},{key:"loadingMode",label:"Loading mode",type:"select",options:[{value:"single",label:"Whole crew from west"},{value:"split",label:"Split crews west/east"}],section:"labor"}],Fe=[{key:"avgDailyRemoval",label:"Average daily removal (m³)",format:t=>k(t,{maximumFractionDigits:2})},{key:"avgHourlyRemoval",label:"Average hourly removal (m³)",format:t=>k(t,{maximumFractionDigits:2})},{key:"trailersPerDay",label:"Trailer loads per day",format:t=>k(t,{maximumFractionDigits:2})},{key:"timeWorkerLoadHours",label:"Worker hours to load trailers (per day)",format:t=>k(t,{maximumFractionDigits:2})},{key:"requiredBeachWorkers",label:"Beach workers required (load crew)",format:t=>k(t,{maximumFractionDigits:2})},{key:"timeToLoadTrailerMinutes",label:"Time to load trailer (minutes)",format:t=>k(t,{maximumFractionDigits:2})},{key:"timeToLoadingAreaMinutes",label:"Travel to loading area (minutes)",format:t=>k(t,{maximumFractionDigits:2})},{key:"totalAtvTimePerLoadMinutes",label:"ATV cycle time per load (minutes)",format:t=>k(t,{maximumFractionDigits:2})},{key:"timePerAtvHours",label:"ATV duty time (hours/day)",format:t=>k(t,{maximumFractionDigits:2})},{key:"requiredAtvs",label:"Required # of ATVs",format:t=>k(t,{maximumFractionDigits:2})},{key:"requiredAtvDrivers",label:"Required # of ATV drivers",format:t=>k(t,{maximumFractionDigits:2})},{key:"requiredUnloadWorkers",label:"Required # of unload workers",format:t=>k(t,{maximumFractionDigits:2})},{key:"integerLoads",label:"Loads simulated today",format:t=>k(t,{maximumFractionDigits:0})},{key:"integerAtvs",label:"ATVs in rotation",format:t=>k(t,{maximumFractionDigits:0})},{key:"totalMinutes",label:"Day cycle duration (minutes)",format:t=>k(t,{maximumFractionDigits:1}),note:"Full rotation for busiest ATV within the day"}];function k(t,m={}){return Number.isFinite(t)?new Intl.NumberFormat("en-US",{maximumFractionDigits:2,minimumFractionDigits:0,...m}).format(t):"—"}function He(t){const m=t.seasonLengthMonths*Ce,a=m*t.workDaysPerWeek,e=a>0?t.sargassumVolumeM3/a:0,r=t.workHoursPerDay>0?e/t.workHoursPerDay:0,i=t.trailerCapacityM3>0?e/t.trailerCapacityM3:0,d=t.timePerWorkerLoadM3Minutes*e/60,v=t.workHoursPerDay>0?d/t.workHoursPerDay:0,P=v>0?t.trailerCapacityM3*t.timePerWorkerLoadM3Minutes/v:0,C=t.atvSpeedKmh*1e3/60,x=t.beachLengthM/2,b=C>0?x/C:0,w=b,S=b+P+w,g=S*i/60,L=t.workHoursPerDay>0?g/t.workHoursPerDay:0,E=L,I=t.workHoursPerDay>0?i*P/60/t.workHoursPerDay:0,h=Math.max(1,Math.round(i)),p=Math.max(1,Math.ceil(L));return{workingWeeks:m,workingDaysSeason:a,avgDailyRemoval:e,avgHourlyRemoval:r,trailersPerDay:i,timeWorkerLoadHours:d,requiredBeachWorkers:v,timeToLoadTrailerMinutes:P,timeToLoadingAreaMinutes:b,totalAtvTimePerLoadMinutes:S,timePerAtvHours:g,requiredAtvs:L,requiredAtvDrivers:E,requiredUnloadWorkers:I,integerLoads:h,integerAtvs:p}}function qe(t,m,a={}){const e=m.integerLoads,r=Number(a.overrideAtvCount),i=Number.isFinite(r)&&r>0?Math.max(1,Math.round(r)):null,n=i??m.integerAtvs,d=[],v=[],P=Array.from({length:n},()=>[]),C=Array.from({length:n},()=>0),x=Math.max(0,t.loadTransferTimeMinutes??0);if(e<=0||n<=0)return{loadMarkers:d,segmentsByAtv:P,totalMinutes:0,numLoads:0,numAtvs:n,loadStates:v};const b=t.beachLengthM/e,w=m.timeToLoadTrailerMinutes,S=t.atvSpeedKmh>0?t.atvSpeedKmh*1e3/60:0;let g=0,L=0;const E=Array.from({length:e},(h,p)=>{const T=p*b,j=(p+1)*b,O=T+b/2;return{loadIndex:p+1,startPosM:T,endPosM:j,centerPosM:O}});d.push(...E.map(h=>h.centerPosM).sort((h,p)=>h-p));let I;if((t.loadingMode??"single")==="split"){I=[];let h=0,p=e-1,T=!0;for(;h<=p;)T?(I.push({...E[h],crew:"West crew"}),h+=1):(I.push({...E[p],crew:"East crew"}),p-=1),T=!T;I.length&&e%2===1&&(I[I.length-1].crew="Both crews")}else I=E.map(h=>({...h,crew:"Main crew"}));return I.forEach(h=>{const p=h.centerPosM,T=h.startPosM,j=h.endPosM,O=Math.min(p,5),Z=S>0?p/S:0,ne=S>0?Math.max(p-O,0)/S:0,se=S>0?O/S:0;let N=0,_=C[0];for(let V=1;V<n;V+=1)C[V]<_-Number.EPSILON&&(_=C[V],N=V);const oe=C[N],z=oe+Z,K=z+w,Y=K+ne,ae=Y+se;let G=0,B=ae;B<g&&(G=g-B,B=g);const ee=B+x,$=V=>{P[N].push(V),L=Math.max(L,V.endMin)};$({atvId:N,loadId:h.loadIndex,phase:"outbound",startMin:oe,endMin:z,startPosM:0,endPosM:p}),$({atvId:N,loadId:h.loadIndex,phase:"loading",startMin:z,endMin:K,startPosM:p,endPosM:p}),ne>0?$({atvId:N,loadId:h.loadIndex,phase:"return",startMin:K,endMin:Y,startPosM:p,endPosM:O}):$({atvId:N,loadId:h.loadIndex,phase:"return",startMin:K,endMin:K,startPosM:p,endPosM:O}),G>0&&$({atvId:N,loadId:h.loadIndex,phase:"hold",startMin:Y,endMin:Y+G,startPosM:O,endPosM:O}),$({atvId:N,loadId:h.loadIndex,phase:"approach",startMin:Y+G,endMin:B,startPosM:O,endPosM:0}),$({atvId:N,loadId:h.loadIndex,phase:"transfer",startMin:B,endMin:ee,startPosM:0,endPosM:0}),C[N]=ee,g=ee,v.push({startPosM:T,endPosM:j,arrivalMin:z,cleanedAtMinute:K,crew:h.crew,loadId:h.loadIndex})}),{loadMarkers:d,segmentsByAtv:P.map(h=>h.sort((p,T)=>p.startMin-T.startMin)),totalMinutes:L,numLoads:e,numAtvs:n,loadStates:v,overrideAtvCount:i}}function Ne(){const t=document.querySelector("#app");return t.innerHTML=`
    <section class="controls">
      <div class="control-header">
        <h1>HMB Beach Cleanup Model</h1>
        <p>Set the season-scale inputs from the spreadsheet; the animation shows how one workday plays out with those assumptions.</p>
      </div>
      <div class="controls-groups">
        <div class="control-group">
          <h2>Season Parameters</h2>
          <div class="input-grid" data-section="season"></div>
        </div>
        <div class="control-group">
          <h2>Trailer &amp; Labor</h2>
          <div class="input-grid" data-section="labor"></div>
        </div>
        <div class="control-group">
          <h2>ATV Operations</h2>
          <div class="input-grid" data-section="atv"></div>
          <div class="field override-field">
            <label for="atvOverrideInput">Override # of ATVs</label>
            <input
              type="number"
              id="atvOverrideInput"
              min="0"
              step="1"
              placeholder="0 for auto"
            />
            <span class="field-note" id="atvOverrideHint"></span>
          </div>
        </div>
      </div>
      <div class="derived-section" id="derivedSection">
        <div class="derived-header">
          <h2>Derived Metrics</h2>
          <button type="button" class="toggle-derived" id="toggleDerived">Hide metrics</button>
        </div>
        <ul class="metrics-list" id="derivedMetrics"></ul>
      </div>
      <div class="status" id="status"></div>
    </section>
    <section class="simulation">
      <div class="canvas-container">
        <canvas id="beachCanvas" width="960" height="520"></canvas>
        <div class="canvas-overlay canvas-overlay-top">
          <div class="sim-controls">
            <button type="button" id="toggleRun" class="toggle-run">Pause</button>
            <span id="timeLabel" class="sim-stat">Sim time 00:00:00</span>
          </div>
          <div class="speed-slider">
            <input type="range" id="speedSlider" min="1" max="60" step="1" />
          </div>
          <span id="speedValue" class="sim-stat">1 s → 1 min</span>
        </div>
        <div class="canvas-overlay canvas-overlay-bottom">
          <span id="detailsLabel"></span>
        </div>
      </div>
    </section>
  `,{canvas:document.querySelector("#beachCanvas"),derivedList:document.querySelector("#derivedMetrics"),status:document.querySelector("#status"),timeLabel:document.querySelector("#timeLabel"),toggleButton:document.querySelector("#toggleRun"),detailsLabel:document.querySelector("#detailsLabel"),derivedSection:document.querySelector("#derivedSection"),derivedToggle:document.querySelector("#toggleDerived"),speedSlider:document.querySelector("#speedSlider"),speedValue:document.querySelector("#speedValue"),atvOverrideInput:document.querySelector("#atvOverrideInput"),atvOverrideHint:document.querySelector("#atvOverrideHint")}}function Oe(t,m){Ie.forEach(a=>{const e=document.querySelector(`[data-section="${a.section}"]`);if(!e)return;const r=document.createElement("div");r.className="field";const i=document.createElement("label");i.textContent=a.label;let n;if(a.type==="select"&&Array.isArray(a.options))n=document.createElement("select"),a.options.forEach(d=>{const v=document.createElement("option");v.value=String(d.value),v.textContent=d.label,n.append(v)}),n.value=String(t[a.key]),n.addEventListener("change",()=>{const d=n.value,v=Number(d),C=a.options.every(x=>typeof x.value=="number")&&Number.isFinite(v)?v:d;m(a.key,C)});else{n=document.createElement("input");const d=a.type==="text"?"text":"number";if(n.type=d,a.key==="trailerCapacityM3"?n.value=Number(t[a.key]??0).toFixed(1):n.value=String(t[a.key]??""),a.placeholder&&(n.placeholder=a.placeholder),d==="number"){a.min!==void 0&&(n.min=String(a.min)),a.max!==void 0&&(n.max=String(a.max)),a.step!==void 0&&(n.step=String(a.step));const v=()=>{const P=Number(n.value);Number.isFinite(P)&&(m(a.key,P),a.key==="trailerCapacityM3"&&(n.value=P.toFixed(1)))};a.key==="trailerCapacityM3"?(n.addEventListener("change",v),n.addEventListener("blur",v)):n.addEventListener("input",v)}else n.addEventListener("input",()=>{m(a.key,n.value)})}r.append(i,n),e.append(r)})}function Re(t,m){const a=document.querySelector("#speedSlider"),e=document.querySelector("#speedValue");if(!a||!e)return;const r=i=>{const n=Math.max(1,Math.round(i));e.textContent=`1 s → ${n} min`,m(i)};a.value=String(t.minutesPerSecond),r(t.minutesPerSecond),a.addEventListener("input",()=>{const i=Number(a.value);!Number.isFinite(i)||i<=0||(t.minutesPerSecond=i,r(i))})}function We(t,m,a={}){const e=a.input??document.querySelector("#atvOverrideInput");if(!e)return;const r=i=>{const n=Number(i);!Number.isFinite(n)||n<=0?(t.atvOverrideCount=0,e.value="0"):(t.atvOverrideCount=Math.round(n),e.value=String(t.atvOverrideCount)),m()};e.value=t.atvOverrideCount>0?String(t.atvOverrideCount):"0",e.addEventListener("change",()=>{r(e.value)}),e.addEventListener("blur",()=>{r(e.value)}),e.addEventListener("keydown",i=>{i.key==="Enter"&&(i.preventDefault(),r(e.value))})}function Ve(t,m,a){t.innerHTML="",Fe.forEach(e=>{let r;e.key==="totalMinutes"?r=a.totalMinutes:e.key==="integerAtvs"?r=a.integerAtvs??m.integerAtvs:r=m[e.key];const i=document.createElement("li");i.className="metric-card";const n=document.createElement("span");n.className="label",n.textContent=e.label;const d=document.createElement("span");if(d.className="value",d.textContent=e.format?e.format(r):String(r),i.append(n,d),e.key==="integerAtvs"&&a.overrideAtvs){const v=document.createElement("span");v.className="note";const P=k(a.computedIntegerAtvs,{maximumFractionDigits:0});v.textContent=`Manual override active (computed ${P})`,i.append(v)}else if(e.note){const v=document.createElement("span");v.className="note",v.textContent=e.note,i.append(v)}t.append(i)})}function Be(t,m,a){const e=t.getContext("2d"),r=t.width,i=t.height,n=70;let d={loadMarkers:[],loadStates:[],segmentsByAtv:[],totalMinutes:1,numAtvs:0,beachLength:me.beachLengthM},v={...me},P=Le,C=[],x=!1,b=!1,w=0,S=null,g=null,L=[];const E=new Set;let I="Loaded 0.0 m³",h="Crew idle time 00:00:00";const p=i*.3,T=i*.7;function j(){const o={paused:_(),manuallyPaused:x,autoPaused:b};E.forEach(s=>{try{s(o)}catch{}})}function O(){g!==null&&(cancelAnimationFrame(g),g=null)}function Z(){g===null&&!_()&&(g=requestAnimationFrame(ve))}function ne(o,s){d={...o,beachLength:s.beachLengthM},v={...s},C=new Array(d.numAtvs).fill(1),w=0,S=null,b=!1,L=z(d.loadStates??[]),ae(w),G(w),B(w),j(),Z()}function se(o){P=o,S=null}function N(o){const s=x;return typeof o=="boolean"?x=o:x=!x,x?s||O():(b&&(b=!1,w=0),S=null,Z()),j(),x}function _(){return x||b}function oe(o){return typeof o!="function"?()=>{}:(E.add(o),o({paused:_(),manuallyPaused:x,autoPaused:b}),()=>{E.delete(o)})}function z(o){const s=o.map(l=>{const M=Math.min(l.arrivalMin,l.cleanedAtMinute),u=Math.max(l.arrivalMin,l.cleanedAtMinute);return u>M?{start:M,end:u}:null}).filter(Boolean).sort((l,M)=>l.start-M.start);if(!s.length)return[];const f=[s[0]];for(let l=1;l<s.length;l+=1){const M=s[l],u=f[f.length-1];M.start<=u.end?u.end=Math.max(u.end,M.end):f.push({...M})}return f}function K(o){if(!L.length||o<=L[0].start)return 0;let s=0;for(let f=0;f<L.length;f+=1){const{start:l,end:M}=L[f];if(o<=l)break;const u=Math.min(M,o);if(s+=Math.max(0,u-l),o<=M)break}return Math.min(s,Math.max(0,o))}function Y(o){const s=Math.max(0,Math.floor(o*60)),f=Math.floor(s/3600),l=Math.floor(s%3600/60),M=s%60;return`${String(f).padStart(2,"0")}:${String(l).padStart(2,"0")}:${String(M).padStart(2,"0")}`}function ae(o){m&&(m.textContent=`Sim time ${Y(o)}`)}function G(o){const s=Number(v.trailerCapacityM3)||0;if(s<=0||!Array.isArray(d.loadStates)){I="Loaded 0.0 m³";return}let f=0;d.loadStates.forEach(M=>{const u=M.arrivalMin,c=M.cleanedAtMinute;if(!(!Number.isFinite(u)||!Number.isFinite(c)||c<=u)){if(o>=c)f+=s;else if(o>u){const q=Math.max(0,Math.min((o-u)/(c-u),1));f+=s*q}}}),I=`Loaded ${k(f,{minimumFractionDigits:1,maximumFractionDigits:1})} m³`}function B(o){const s=K(o),f=Math.max(0,o-s);h=`Crew idle time ${Y(f)}`}function ee(){e.fillStyle="#0f2034",e.fillRect(0,0,r,i);const o=e.createLinearGradient(0,p,0,T);o.addColorStop(0,"rgba(230, 254, 255, 0.08)"),o.addColorStop(.5,"rgba(110, 192, 230, 0.18)"),o.addColorStop(1,"rgba(255, 255, 255, 0.05)"),e.fillStyle=o,e.fillRect(n,p,r-n*2,T-p),e.strokeStyle="rgba(255, 255, 255, 0.25)",e.lineWidth=2,e.beginPath(),e.moveTo(n,T),e.lineTo(r-n,T),e.stroke(),e.save(),e.textAlign="center",e.fillStyle="rgba(255, 255, 255, 0.7)",e.font='16px "Inter", sans-serif';const s=Math.min(i-12,T+28),l=[`Beach length = ${k(v.beachLengthM,{maximumFractionDigits:0})} m`,I,h];e.fillText(l.join("   •   "),r/2,s),e.restore()}function $(o){const s=r-n*2,l=(T-p)*.25,M=T-l;d.loadStates.forEach(u=>{const c=n+u.startPosM/d.beachLength*s,q=n+u.endPosM/d.beachLength*s,F=u.arrivalMin,y=u.cleanedAtMinute;if(y<=0||o>=y)return;let R=1;if(o>F){const D=Math.max(y-F,.01),A=Math.min(Math.max((o-F)/D,0),1);R=Math.max(0,1-A)}e.save(),e.globalAlpha=R;const H=e.createLinearGradient(c,M,q,T);H.addColorStop(0,"rgba(121, 85, 72, 0.92)"),H.addColorStop(.5,"rgba(93, 64, 55, 0.95)"),H.addColorStop(1,"rgba(121, 85, 72, 0.92)"),e.fillStyle=H,e.fillRect(c,M,q-c,l),e.restore()})}function V(o,s,f=1){if(!o.length)return{position:0,phase:"idle",loadId:null,direction:f,progress:0};const l=o[o.length-1].endMin;if(l===0)return{position:0,phase:"idle",loadId:null,direction:f,progress:0};let M=s%l,u=f;for(let F=0;F<o.length;F+=1){const y=o[F];if(M<y.startMin)return{position:y.startPosM,phase:"idle",loadId:y.loadId,direction:u,progress:0};if(M<=y.endMin||y.endMin===y.startMin){const R=y.endMin-y.startMin,H=R>0?(M-y.startMin)/R:1,D=y.startPosM+(y.endPosM-y.startPosM)*H,A=Math.sign(y.endPosM-y.startPosM);return A!==0&&(u=A),{position:D,phase:y.phase,loadId:y.loadId,direction:u,progress:H}}}const c=o[o.length-1],q=Math.sign(c.endPosM-c.startPosM);return q!==0&&(u=q),{position:c.endPosM,phase:"idle",loadId:c.loadId,direction:u,progress:0}}function Te(){e.strokeStyle="rgba(255, 255, 255, 0.12)",e.lineWidth=1,e.setLineDash([6,8]),d.loadMarkers.forEach(o=>{const s=n+o/d.beachLength*(r-n*2);e.beginPath(),e.moveTo(s,p),e.lineTo(s,T),e.stroke()}),e.setLineDash([])}function Ae(o,s,f,l=1,M=!1){e.save();const u=5,c=28,q=12,F=36,y=14,R=8,H=l>=0?1:-1,D=o-c/2,A=s-u-q,W=D+c,le=s-u-y+2;let U,X,te,de;if(H>=0?(X=D-R,U=X-F,te=D,de=X):(U=W+R,X=U+F,te=W,de=U),e.fillStyle=f,e.fillRect(D,A,c,q),e.fillStyle="rgba(255, 255, 255, 0.2)",e.fillRect(D+6,A+3,12,q-6),e.fillStyle=f,e.fillRect(U,le,F,y),M){const Q=y*.9,ye=F*.08,ue=U+ye,be=X-ye,ie=le+2,De=ie-Q;e.fillStyle="#8d6e63",e.beginPath(),e.moveTo(ue,ie),e.quadraticCurveTo((ue+be)/2,De,be,ie),e.lineTo(ue,ie),e.closePath(),e.fill()}e.strokeStyle="rgba(255, 255, 255, 0.4)",e.lineWidth=2,e.beginPath(),e.moveTo(te,s-u-2),e.lineTo(de,s-u+1),e.stroke();const he="rgba(15, 32, 52, 0.85)",Pe=[{x:D+c*.25,y:s},{x:W-c*.25,y:s},{x:U+F*.2,y:s+1},{x:X-F*.2,y:s+1}];e.fillStyle=he,Pe.forEach(Q=>{e.beginPath(),e.arc(Q.x,Q.y,u,0,Math.PI*2),e.fill(),e.fillStyle="rgba(255, 255, 255, 0.25)",e.beginPath(),e.arc(Q.x,Q.y,u*.4,0,Math.PI*2),e.fill(),e.fillStyle=he}),e.fillStyle="rgba(15, 32, 52, 0.85)";const fe=12,xe=H>=0?W-fe+2:D-2;e.fillRect(xe,A-6,fe,6),e.beginPath(),H>=0?(e.moveTo(W-c*.7,A),e.lineTo(W-c*.4,A-8),e.lineTo(W-c*.15,A-8),e.lineTo(W-c*.3,A)):(e.moveTo(D+c*.7,A),e.lineTo(D+c*.4,A-8),e.lineTo(D+c*.15,A-8),e.lineTo(D+c*.3,A)),e.closePath(),e.fill();const J=H>=0?W-c*.35:D+c*.35,ce=4,pe=A-ce-2,we=8,ge=6;e.fillStyle="#ffd180",e.beginPath(),e.arc(J,pe,ce,0,Math.PI*2),e.fill(),e.fillStyle="#0f2034",e.fillRect(J-ge/2,pe+ce-1,ge,we);const re=A+2,Me=10;e.strokeStyle="#cfd8dc",e.lineWidth=2,e.beginPath(),H>=0?(e.moveTo(J-2,re),e.lineTo(J-2-Me,re-2)):(e.moveTo(J+2,re),e.lineTo(J+2+Me,re-2)),e.stroke(),e.restore()}function ke(o){const s=[];d.segmentsByAtv.forEach((f,l)=>{const M=C[l]??1,{position:u,phase:c,loadId:q,direction:F,progress:y}=V(f,o,M);C[l]=F||M||1;const R=Se[l%Se.length],H=n+u/d.beachLength*(r-n*2),D=T-30-l*18,A=.001,W=c==="loading"&&y>=1-A||c==="return"||c==="hold"||c==="approach"||c==="transfer"&&y<1-A;Ae(H,D,R,C[l],W),e.fillStyle=R,e.font='12px "Inter", sans-serif',e.fillText(`ATV ${l+1}`,H-20,D+22);const U=(q?d.loadStates.find(te=>te.loadId===q):void 0)?.crew??"Crew",X=k(v.trailerCapacityM3,{minimumFractionDigits:1,maximumFractionDigits:1});s.push(`ATV ${l+1}: ${c} load ${q??"—"} (${U}, capacity ${X} m³)`)}),a.textContent=s.join("  •  ")}function ve(o){if(_()){g=null;return}S===null&&(S=o);const s=Math.max((o-S)/1e3,0);S=o;const f=Math.max(d.totalMinutes,1);w+=s*P,w>f&&(w=f);const l=w;if(ee(),$(l),Te(),ke(l),ae(l),G(l),B(l),w>=f){b=!0,g=null,j();return}g=requestAnimationFrame(ve)}return Z(),{update:ne,updateSpeed:se,toggleManualPause:N,isPaused:_,onStateChange:oe}}function $e(t,m,a){if(m.atvSpeedKmh<=0){t.textContent="Increase ATV speed above zero to animate the transport cycle.";return}if(a.trailersPerDay<=0||a.requiredAtvs<=0){t.textContent="Adjust inputs to produce a non-zero workload for ATVs.";return}t.textContent=""}function Ue(){const t={...me},m={...Ee},{canvas:a,derivedList:e,status:r,timeLabel:i,toggleButton:n,detailsLabel:d,derivedSection:v,derivedToggle:P,atvOverrideInput:C,atvOverrideHint:x}=Ne(),b=Be(a,i,d);let w=!1;function S(){const g=He(t),L=m.atvOverrideCount>0?m.atvOverrideCount:null,E=qe(t,g,{overrideAtvCount:L}),I={totalMinutes:E.totalMinutes,integerAtvs:E.numAtvs,overrideAtvs:E.overrideAtvCount!=null,computedIntegerAtvs:g.integerAtvs};if(Ve(e,g,I),$e(r,t,g),b.update(E,t),x){const h=k(g.integerAtvs,{maximumFractionDigits:0});if(E.overrideAtvCount!=null){const p=k(E.overrideAtvCount,{maximumFractionDigits:0});x.textContent=`Manual override active (${p} ATVs, computed ${h}).`}else x.textContent=`Using computed requirement (${h} ATVs).`}}if(Oe(t,(g,L)=>{t[g]=L,S()}),Re(m,g=>{b.updateSpeed(g)}),n){const g=({paused:L})=>{n.textContent=L?"Run":"Pause"};b.onStateChange(g),n.addEventListener("click",()=>{const L=b.isPaused();b.toggleManualPause(!L)})}We(m,S,{input:C}),P.addEventListener("click",()=>{w=!w,v.classList.toggle("collapsed",w),P.textContent=w?"Show metrics":"Hide metrics"}),S()}Ue();
