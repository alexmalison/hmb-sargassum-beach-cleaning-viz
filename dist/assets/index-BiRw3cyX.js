(function(){const h=document.createElement("link").relList;if(h&&h.supports&&h.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))e(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&e(n)}).observe(document,{childList:!0,subtree:!0});function o(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function e(r){if(r.ep)return;r.ep=!0;const i=o(r);fetch(r.href,i)}})();const De=52/12,Le=1,Se=["#64ffda","#90caf9","#ffd54f","#ff8a80","#ce93d8","#80cbc4"],me={seasonLengthMonths:5,sargassumVolumeM3:7183.15,workDaysPerWeek:6,workHoursPerDay:5,trailerCapacityM3:2,timePerWorkerLoadM3Minutes:25,atvSpeedKmh:3,beachLengthM:600,loadTransferTimeMinutes:11,loadingMode:"single"},Ie={minutesPerSecond:Le,atvOverrideCount:0},Ee=[{key:"seasonLengthMonths",label:"Length of season (months)",min:1,max:12,step:.1,section:"season"},{key:"sargassumVolumeM3",label:"Estimated Sargassum volume (m³)",min:0,max:2e4,step:10,section:"season"},{key:"workDaysPerWeek",label:"Working days per week",min:1,max:7,step:1,section:"season"},{key:"workHoursPerDay",label:"Working hours per day",min:1,max:24,step:.5,section:"season"},{key:"trailerCapacityM3",label:"Trailer capacity (m³)",min:.1,max:5,step:.1,section:"labor"},{key:"timePerWorkerLoadM3Minutes",label:"Time to load 1 m³ per worker (minutes)",min:1,max:60,step:1,section:"labor"},{key:"atvSpeedKmh",label:"ATV speed (km/h)",min:0,max:15,step:.1,section:"atv"},{key:"beachLengthM",label:"Beach length (m)",min:60,max:1500,step:10,section:"atv"},{key:"loadTransferTimeMinutes",label:"Load transfer wait (minutes)",min:0,max:60,step:1,section:"atv"},{key:"loadingMode",label:"Loading mode",type:"select",options:[{value:"single",label:"Whole crew from west"},{value:"split",label:"Split crews west/east"}],section:"labor"}],Fe=[{key:"avgDailyRemoval",label:"Average daily removal (m³)",format:t=>C(t,{maximumFractionDigits:2})},{key:"avgHourlyRemoval",label:"Average hourly removal (m³)",format:t=>C(t,{maximumFractionDigits:2})},{key:"trailersPerDay",label:"Trailer loads per day",format:t=>C(t,{maximumFractionDigits:2})},{key:"timeWorkerLoadHours",label:"Worker hours to load trailers (per day)",format:t=>C(t,{maximumFractionDigits:2})},{key:"requiredBeachWorkers",label:"Beach workers required (load crew)",format:t=>C(t,{maximumFractionDigits:2})},{key:"timeToLoadTrailerMinutes",label:"Time to load trailer (minutes)",format:t=>C(t,{maximumFractionDigits:2})},{key:"timeToLoadingAreaMinutes",label:"Travel to loading area (minutes)",format:t=>C(t,{maximumFractionDigits:2})},{key:"totalAtvTimePerLoadMinutes",label:"ATV cycle time per load (minutes)",format:t=>C(t,{maximumFractionDigits:2})},{key:"timePerAtvHours",label:"ATV duty time (hours/day)",format:t=>C(t,{maximumFractionDigits:2})},{key:"requiredAtvs",label:"Required # of ATVs",format:t=>C(t,{maximumFractionDigits:2})},{key:"requiredAtvDrivers",label:"Required # of ATV drivers",format:t=>C(t,{maximumFractionDigits:2})},{key:"requiredUnloadWorkers",label:"Required # of unload workers",format:t=>C(t,{maximumFractionDigits:2})},{key:"integerLoads",label:"Loads simulated today",format:t=>C(t,{maximumFractionDigits:0})},{key:"integerAtvs",label:"ATVs in rotation",format:t=>C(t,{maximumFractionDigits:0})},{key:"totalMinutes",label:"Day cycle duration (minutes)",format:t=>C(t,{maximumFractionDigits:1}),note:"Full rotation for busiest ATV within the day"}];function C(t,h={}){return Number.isFinite(t)?new Intl.NumberFormat("en-US",{maximumFractionDigits:2,minimumFractionDigits:0,...h}).format(t):"—"}function He(t){const h=t.seasonLengthMonths*De,o=h*t.workDaysPerWeek,e=o>0?t.sargassumVolumeM3/o:0,r=t.workHoursPerDay>0?e/t.workHoursPerDay:0,i=t.trailerCapacityM3>0?e/t.trailerCapacityM3:0,M=t.timePerWorkerLoadM3Minutes*e/60,f=t.workHoursPerDay>0?M/t.workHoursPerDay:0,T=f>0?t.trailerCapacityM3*t.timePerWorkerLoadM3Minutes/f:0,k=t.atvSpeedKmh*1e3/60,I=t.beachLengthM/2,L=k>0?I/k:0,H=L,A=L+T+H,b=A*i/60,D=t.workHoursPerDay>0?b/t.workHoursPerDay:0,E=D,q=t.workHoursPerDay>0?i*T/60/t.workHoursPerDay:0,d=Math.max(1,Math.round(i)),y=Math.max(1,Math.ceil(D));return{workingWeeks:h,workingDaysSeason:o,avgDailyRemoval:e,avgHourlyRemoval:r,trailersPerDay:i,timeWorkerLoadHours:M,requiredBeachWorkers:f,timeToLoadTrailerMinutes:T,timeToLoadingAreaMinutes:L,totalAtvTimePerLoadMinutes:A,timePerAtvHours:b,requiredAtvs:D,requiredAtvDrivers:E,requiredUnloadWorkers:q,integerLoads:d,integerAtvs:y}}function qe(t,h,o={}){const e=h.integerLoads,r=Number(o.overrideAtvCount),i=Number.isFinite(r)&&r>0?Math.max(1,Math.round(r)):null,n=i??h.integerAtvs,M=[],f=[],T=Array.from({length:n},()=>[]),k=Array.from({length:n},()=>0),I=Math.max(0,t.loadTransferTimeMinutes??0);if(e<=0||n<=0)return{loadMarkers:M,segmentsByAtv:T,totalMinutes:0,numLoads:0,numAtvs:n,loadStates:f};const L=t.beachLengthM/e,H=h.timeToLoadTrailerMinutes,A=t.atvSpeedKmh>0?t.atvSpeedKmh*1e3/60:0;let b=0,D=0;const E=Array.from({length:e},(d,y)=>{const p=y*L,z=(y+1)*L,$=p+L/2;return{loadIndex:y+1,startPosM:p,endPosM:z,centerPosM:$}});M.push(...E.map(d=>d.centerPosM).sort((d,y)=>d-y));let q;if((t.loadingMode??"single")==="split"){q=[];let d=0,y=e-1,p=!0;for(;d<=y;)p?(q.push({...E[d],crew:"West crew"}),d+=1):(q.push({...E[y],crew:"East crew"}),y-=1),p=!p;q.length&&e%2===1&&(q[q.length-1].crew="Both crews")}else q=E.map(d=>({...d,crew:"Main crew"}));return q.forEach(d=>{const y=d.centerPosM,p=d.startPosM,z=d.endPosM,$=Math.min(y,5),te=A>0?y/A:0,oe=A>0?Math.max(y-$,0)/A:0,de=A>0?$/A:0;let N=0,K=k[0];for(let G=1;G<n;G+=1)k[G]<K-Number.EPSILON&&(K=k[G],N=G);const re=k[N],Q=re+te,Y=Q+H,X=Y+oe,ie=X+de;let J=0,U=ie;U<b&&(J=b-U,U=b);const ne=U+I,_=G=>{T[N].push(G),D=Math.max(D,G.endMin)};_({atvId:N,loadId:d.loadIndex,phase:"outbound",startMin:re,endMin:Q,startPosM:0,endPosM:y}),_({atvId:N,loadId:d.loadIndex,phase:"loading",startMin:Q,endMin:Y,startPosM:y,endPosM:y}),oe>0?_({atvId:N,loadId:d.loadIndex,phase:"return",startMin:Y,endMin:X,startPosM:y,endPosM:$}):_({atvId:N,loadId:d.loadIndex,phase:"return",startMin:Y,endMin:Y,startPosM:y,endPosM:$}),J>0&&_({atvId:N,loadId:d.loadIndex,phase:"hold",startMin:X,endMin:X+J,startPosM:$,endPosM:$}),_({atvId:N,loadId:d.loadIndex,phase:"approach",startMin:X+J,endMin:U,startPosM:$,endPosM:0}),_({atvId:N,loadId:d.loadIndex,phase:"transfer",startMin:U,endMin:ne,startPosM:0,endPosM:0}),k[N]=ne,b=ne,f.push({startPosM:p,endPosM:z,arrivalMin:Q,cleanedAtMinute:Y,crew:d.crew,loadId:d.loadIndex})}),{loadMarkers:M,segmentsByAtv:T.map(d=>d.sort((y,p)=>y.startMin-p.startMin)),totalMinutes:D,numLoads:e,numAtvs:n,loadStates:f,overrideAtvCount:i}}function Re(){const t=document.querySelector("#app");return t.innerHTML=`
    <section class="controls">
      <div class="control-header">
        <h1>HMB Beach Cleanup Model</h1>
        <p>Set the season-scale inputs from the spreadsheet; the animation shows how one workday plays out with those assumptions.</p>
      </div>
      <div class="controls-groups">
        <div class="control-group">
          <h2>Season Parameters</h2>
          <div class="input-grid" data-section="season"></div>
        </div>
        <div class="control-group">
          <h2>Trailer &amp; Labor</h2>
          <div class="input-grid" data-section="labor"></div>
        </div>
        <div class="control-group">
          <h2>ATV Operations</h2>
          <div class="input-grid" data-section="atv"></div>
          <div class="field override-field">
            <label for="atvOverrideInput">Override # of ATVs</label>
            <input
              type="number"
              id="atvOverrideInput"
              min="0"
              step="1"
              placeholder="0 for auto"
            />
            <span class="field-note" id="atvOverrideHint"></span>
          </div>
        </div>
      </div>
      <div class="derived-section" id="derivedSection">
        <div class="derived-header">
          <h2>Derived Metrics</h2>
          <button type="button" class="toggle-derived" id="toggleDerived">Hide metrics</button>
        </div>
        <ul class="metrics-list" id="derivedMetrics"></ul>
      </div>
      <div class="status" id="status"></div>
    </section>
    <section class="simulation">
      <div class="canvas-container">
        <canvas id="beachCanvas" width="720" height="336"></canvas>
        <div class="canvas-overlay canvas-overlay-top">
          <div class="sim-controls">
            <button type="button" id="toggleRun" class="toggle-run">Pause</button>
            <span id="timeLabel" class="sim-stat">Sim time 00:00:00</span>
            <div class="speed-slider">
              <input type="range" id="speedSlider" min="1" max="60" step="1" />
              <span id="speedValue">1 s → 1 min</span>
            </div>
          </div>
        </div>
        <div class="canvas-overlay canvas-overlay-bottom">
          <span id="detailsLabel"></span>
        </div>
      </div>
    </section>
  `,{canvas:document.querySelector("#beachCanvas"),derivedList:document.querySelector("#derivedMetrics"),status:document.querySelector("#status"),timeLabel:document.querySelector("#timeLabel"),toggleButton:document.querySelector("#toggleRun"),detailsLabel:document.querySelector("#detailsLabel"),derivedSection:document.querySelector("#derivedSection"),derivedToggle:document.querySelector("#toggleDerived"),speedSlider:document.querySelector("#speedSlider"),speedValue:document.querySelector("#speedValue"),atvOverrideInput:document.querySelector("#atvOverrideInput"),atvOverrideHint:document.querySelector("#atvOverrideHint")}}function Ne(t,h){Ee.forEach(o=>{const e=document.querySelector(`[data-section="${o.section}"]`);if(!e)return;const r=document.createElement("div");r.className="field";const i=document.createElement("label");i.textContent=o.label;let n;if(o.type==="select"&&Array.isArray(o.options))n=document.createElement("select"),o.options.forEach(M=>{const f=document.createElement("option");f.value=String(M.value),f.textContent=M.label,n.append(f)}),n.value=String(t[o.key]),n.addEventListener("change",()=>{const M=n.value,f=Number(M),k=o.options.every(I=>typeof I.value=="number")&&Number.isFinite(f)?f:M;h(o.key,k)});else{n=document.createElement("input");const M=o.type==="text"?"text":"number";if(n.type=M,o.key==="trailerCapacityM3"?n.value=Number(t[o.key]??0).toFixed(1):n.value=String(t[o.key]??""),o.placeholder&&(n.placeholder=o.placeholder),M==="number"){o.min!==void 0&&(n.min=String(o.min)),o.max!==void 0&&(n.max=String(o.max)),o.step!==void 0&&(n.step=String(o.step));const f=()=>{const T=Number(n.value);Number.isFinite(T)&&(h(o.key,T),o.key==="trailerCapacityM3"&&(n.value=T.toFixed(1)))};o.key==="trailerCapacityM3"?(n.addEventListener("change",f),n.addEventListener("blur",f)):n.addEventListener("input",f)}else n.addEventListener("input",()=>{h(o.key,n.value)})}r.append(i,n),e.append(r)})}function Oe(t,h){const o=document.querySelector("#speedSlider"),e=document.querySelector("#speedValue");if(!o||!e)return;const r=i=>{const n=Math.max(1,Math.round(i));e.textContent=`1 s → ${n} min`,h(i)};o.value=String(t.minutesPerSecond),r(t.minutesPerSecond),o.addEventListener("input",()=>{const i=Number(o.value);!Number.isFinite(i)||i<=0||(t.minutesPerSecond=i,r(i))})}function We(t,h,o={}){const e=o.input??document.querySelector("#atvOverrideInput");if(!e)return;const r=i=>{const n=Number(i);!Number.isFinite(n)||n<=0?(t.atvOverrideCount=0,e.value="0"):(t.atvOverrideCount=Math.round(n),e.value=String(t.atvOverrideCount)),h()};e.value=t.atvOverrideCount>0?String(t.atvOverrideCount):"0",e.addEventListener("change",()=>{r(e.value)}),e.addEventListener("blur",()=>{r(e.value)}),e.addEventListener("keydown",i=>{i.key==="Enter"&&(i.preventDefault(),r(e.value))})}function Ve(t,h,o){t.innerHTML="",Fe.forEach(e=>{let r;e.key==="totalMinutes"?r=o.totalMinutes:e.key==="integerAtvs"?r=o.integerAtvs??h.integerAtvs:r=h[e.key];const i=document.createElement("li");i.className="metric-card";const n=document.createElement("span");n.className="label",n.textContent=e.label;const M=document.createElement("span");if(M.className="value",M.textContent=e.format?e.format(r):String(r),i.append(n,M),e.key==="integerAtvs"&&o.overrideAtvs){const f=document.createElement("span");f.className="note";const T=C(o.computedIntegerAtvs,{maximumFractionDigits:0});f.textContent=`Manual override active (computed ${T})`,i.append(f)}else if(e.note){const f=document.createElement("span");f.className="note",f.textContent=e.note,i.append(f)}t.append(i)})}function Be(t,h,o){const e=t.getContext("2d"),r=t.width,i=t.height;let n={loadMarkers:[],loadStates:[],segmentsByAtv:[],totalMinutes:1,numAtvs:0,beachLength:me.beachLengthM},M={...me},f=Le,T=[],k=!1,I=!1,L=0,H=null,A=null,b=[];const D=new Set;let E="Loaded 0.0 m³",q="Crew idle time 00:00:00";const d=i*.3,y=i*.4,p=d+y;function z(){const a={paused:K(),manuallyPaused:k,autoPaused:I};D.forEach(s=>{try{s(a)}catch{}})}function $(){A!==null&&(cancelAnimationFrame(A),A=null)}function te(){A===null&&!K()&&(A=requestAnimationFrame(ve))}function oe(a,s){n={...a,beachLength:s.beachLengthM},M={...s},T=new Array(n.numAtvs).fill(1),L=0,H=null,I=!1,b=Q(n.loadStates??[]),ie(L),J(L),U(L),z(),te()}function de(a){f=a,H=null}function N(a){const s=k;return typeof a=="boolean"?k=a:k=!k,k?s||$():(I&&(I=!1,L=0),H=null,te()),z(),k}function K(){return k||I}function re(a){return typeof a!="function"?()=>{}:(D.add(a),a({paused:K(),manuallyPaused:k,autoPaused:I}),()=>{D.delete(a)})}function Q(a){const s=a.map(l=>{const u=Math.min(l.arrivalMin,l.cleanedAtMinute),v=Math.max(l.arrivalMin,l.cleanedAtMinute);return v>u?{start:u,end:v}:null}).filter(Boolean).sort((l,u)=>l.start-u.start);if(!s.length)return[];const m=[s[0]];for(let l=1;l<s.length;l+=1){const u=s[l],v=m[m.length-1];u.start<=v.end?v.end=Math.max(v.end,u.end):m.push({...u})}return m}function Y(a){if(!b.length||a<=b[0].start)return 0;let s=0;for(let m=0;m<b.length;m+=1){const{start:l,end:u}=b[m];if(a<=l)break;const v=Math.min(u,a);if(s+=Math.max(0,v-l),a<=u)break}return Math.min(s,Math.max(0,a))}function X(a){const s=Math.max(0,Math.floor(a*60)),m=Math.floor(s/3600),l=Math.floor(s%3600/60),u=s%60;return`${String(m).padStart(2,"0")}:${String(l).padStart(2,"0")}:${String(u).padStart(2,"0")}`}function ie(a){h&&(h.textContent=`Sim time ${X(a)}`)}function J(a){const s=Number(M.trailerCapacityM3)||0;if(s<=0||!Array.isArray(n.loadStates)){E="Loaded 0.0 m³";return}let m=0;n.loadStates.forEach(u=>{const v=u.arrivalMin,c=u.cleanedAtMinute;if(!(!Number.isFinite(v)||!Number.isFinite(c)||c<=v)){if(a>=c)m+=s;else if(a>v){const S=Math.max(0,Math.min((a-v)/(c-v),1));m+=s*S}}}),E=`Loaded ${C(m,{minimumFractionDigits:1,maximumFractionDigits:1})} m³`}function U(a){const s=Y(a),m=Math.max(0,a-s);q=`Crew idle time ${X(m)}`}function ne(){e.fillStyle="#0f2034",e.fillRect(0,0,r,i);const a=e.createLinearGradient(0,0,0,d);a.addColorStop(0,"rgba(236, 221, 180, 0.92)"),a.addColorStop(.6,"rgba(226, 205, 156, 0.9)"),a.addColorStop(1,"rgba(212, 186, 134, 0.88)"),e.fillStyle=a,e.fillRect(0,0,r,d);const s=e.createLinearGradient(0,p,0,i);s.addColorStop(0,"rgba(118, 213, 237, 0.85)"),s.addColorStop(1,"rgba(64, 191, 255, 0.9)"),e.fillStyle=s,e.fillRect(0,p,r,i-p);const m=e.createLinearGradient(0,d,0,p);m.addColorStop(0,"rgba(214, 196, 148, 0.82)"),m.addColorStop(1,"rgba(198, 174, 122, 0.78)"),e.fillStyle=m,e.fillRect(0,d,r,p-d),e.strokeStyle="rgba(255, 255, 255, 0.25)",e.lineWidth=2,e.beginPath(),e.moveTo(0,p),e.lineTo(r,p),e.stroke(),e.save(),e.textAlign="center",e.fillStyle="rgba(255, 255, 255, 0.7)",e.font='16px "Inter", sans-serif';const l=Math.min(i-12,p+28),v=[`Beach length = ${C(M.beachLengthM,{maximumFractionDigits:0})} m`,E,q];e.fillText(v.join("   •   "),r/2,l),e.restore()}function _(a){const s=r,l=(p-d)*.25,u=p-l;e.save();const v=e.createLinearGradient(0,u,0,u+l);v.addColorStop(0,"rgba(214, 196, 148, 0.84)"),v.addColorStop(1,"rgba(198, 174, 122, 0.82)"),e.fillStyle=v,e.fillRect(0,u,r,l),e.restore(),n.loadStates.forEach(c=>{const S=c.startPosM/n.beachLength*s,w=c.endPosM/n.beachLength*s,g=c.arrivalMin,B=c.cleanedAtMinute;if(B<=0)return;const F=e.createLinearGradient(S,u,w,p);F.addColorStop(0,"rgba(214, 196, 148, 0.82)"),F.addColorStop(.45,"rgba(200, 178, 130, 0.82)"),F.addColorStop(.65,"rgba(170, 198, 188, 0.65)"),F.addColorStop(1,"rgba(118, 213, 237, 0.78)"),e.save(),e.fillStyle=F,e.fillRect(S,u,w-S,l);const P=e.createLinearGradient(0,u+l*.45,0,p);P.addColorStop(0,"rgba(118, 213, 237, 0.35)"),P.addColorStop(1,"rgba(64, 191, 255, 0.55)"),e.fillStyle=P,e.fillRect(S,u+l*.45,w-S,l*.55);const x=p-l*.35,O=l*.12,ae=Math.max(40,(w-S)/4);e.strokeStyle="rgba(255, 255, 255, 0.45)",e.lineWidth=1.4,e.beginPath();for(let R=S;R<=w;R+=4){const j=x+Math.sin((R-S)/ae*Math.PI*2)*O;R===S?e.moveTo(R,j):e.lineTo(R,j)}if(e.stroke(),e.restore(),a>=B)return;let W=1;if(a>g){const R=Math.max(B-g,.01),j=Math.min(Math.max((a-g)/R,0),1);W=Math.max(0,1-j)}if(W<=0)return;e.save(),e.globalAlpha=W;const V=e.createLinearGradient(S,u,w,p);V.addColorStop(0,"rgba(121, 85, 72, 0.92)"),V.addColorStop(.5,"rgba(93, 64, 55, 0.95)"),V.addColorStop(1,"rgba(121, 85, 72, 0.92)"),e.fillStyle=V,e.fillRect(S,u,w-S,l),e.restore()})}function G(a,s,m=1){if(!a.length)return{position:0,phase:"idle",loadId:null,direction:m,progress:0};const l=a[a.length-1].endMin;if(l===0)return{position:0,phase:"idle",loadId:null,direction:m,progress:0};let u=s%l,v=m;for(let w=0;w<a.length;w+=1){const g=a[w];if(u<g.startMin)return{position:g.startPosM,phase:"idle",loadId:g.loadId,direction:v,progress:0};if(u<=g.endMin||g.endMin===g.startMin){const B=g.endMin-g.startMin,F=B>0?(u-g.startMin)/B:1,P=g.startPosM+(g.endPosM-g.startPosM)*F,x=Math.sign(g.endPosM-g.startPosM);return x!==0&&(v=x),{position:P,phase:g.phase,loadId:g.loadId,direction:v,progress:F}}}const c=a[a.length-1],S=Math.sign(c.endPosM-c.startPosM);return S!==0&&(v=S),{position:c.endPosM,phase:"idle",loadId:c.loadId,direction:v,progress:0}}function Te(){e.strokeStyle="rgba(255, 255, 255, 0.12)",e.lineWidth=1,e.setLineDash([6,8]),n.loadMarkers.forEach(a=>{const s=a/n.beachLength*r;e.beginPath(),e.moveTo(s,d),e.lineTo(s,p),e.stroke()}),e.setLineDash([])}function ke(a,s,m,l=1,u=!1){e.save();const v=5,c=28,S=12,w=36,g=14,B=8,F=l>=0?1:-1,P=a-c/2,x=s-v-S,O=P+c,ae=s-v-g+2;let W,V,R,j;if(F>=0?(V=P-B,W=V-w,R=P,j=V):(W=O+B,V=W+w,R=O,j=W),e.fillStyle=m,e.fillRect(P,x,c,S),e.fillStyle="rgba(255, 255, 255, 0.2)",e.fillRect(P+6,x+3,12,S-6),e.fillStyle=m,e.fillRect(W,ae,w,g),u){const ee=g*.9,ye=w*.08,ue=W+ye,be=V-ye,le=ae+2,we=le-ee;e.fillStyle="#8d6e63",e.beginPath(),e.moveTo(ue,le),e.quadraticCurveTo((ue+be)/2,we,be,le),e.lineTo(ue,le),e.closePath(),e.fill()}e.strokeStyle="rgba(255, 255, 255, 0.4)",e.lineWidth=2,e.beginPath(),e.moveTo(R,s-v-2),e.lineTo(j,s-v+1),e.stroke();const he="rgba(15, 32, 52, 0.85)",Pe=[{x:P+c*.25,y:s},{x:O-c*.25,y:s},{x:W+w*.2,y:s+1},{x:V-w*.2,y:s+1}];e.fillStyle=he,Pe.forEach(ee=>{e.beginPath(),e.arc(ee.x,ee.y,v,0,Math.PI*2),e.fill(),e.fillStyle="rgba(255, 255, 255, 0.25)",e.beginPath(),e.arc(ee.x,ee.y,v*.4,0,Math.PI*2),e.fill(),e.fillStyle=he}),e.fillStyle="rgba(15, 32, 52, 0.85)";const fe=12,xe=F>=0?O-fe+2:P-2;e.fillRect(xe,x-6,fe,6),e.beginPath(),F>=0?(e.moveTo(O-c*.7,x),e.lineTo(O-c*.4,x-8),e.lineTo(O-c*.15,x-8),e.lineTo(O-c*.3,x)):(e.moveTo(P+c*.7,x),e.lineTo(P+c*.4,x-8),e.lineTo(P+c*.15,x-8),e.lineTo(P+c*.3,x)),e.closePath(),e.fill();const Z=F>=0?O-c*.35:P+c*.35,ce=4,pe=x-ce-2,Ce=8,ge=6;e.fillStyle="#ffd180",e.beginPath(),e.arc(Z,pe,ce,0,Math.PI*2),e.fill(),e.fillStyle="#0f2034",e.fillRect(Z-ge/2,pe+ce-1,ge,Ce);const se=x+2,Me=10;e.strokeStyle="#cfd8dc",e.lineWidth=2,e.beginPath(),F>=0?(e.moveTo(Z-2,se),e.lineTo(Z-2-Me,se-2)):(e.moveTo(Z+2,se),e.lineTo(Z+2+Me,se-2)),e.stroke(),e.restore()}function Ae(a){const s=[];n.segmentsByAtv.forEach((m,l)=>{const u=T[l]??1,{position:v,phase:c,loadId:S,direction:w,progress:g}=G(m,a,u);T[l]=w||u||1;const B=Se[l%Se.length],F=Math.max(0,Math.min(r,v/n.beachLength*r)),P=p-30-l*18,x=.001,O=c==="loading"&&g>=1-x||c==="return"||c==="hold"||c==="approach"||c==="transfer"&&g<1-x;ke(F,P,B,T[l],O),e.fillStyle=B,e.font='12px "Inter", sans-serif',e.fillText(`ATV ${l+1}`,F-20,P+22);const W=(S?n.loadStates.find(R=>R.loadId===S):void 0)?.crew??"Crew",V=C(M.trailerCapacityM3,{minimumFractionDigits:1,maximumFractionDigits:1});s.push(`ATV ${l+1}: ${c} load ${S??"—"} (${W}, capacity ${V} m³)`)}),o.textContent=s.join("  •  ")}function ve(a){if(K()){A=null;return}H===null&&(H=a);const s=Math.max((a-H)/1e3,0);H=a;const m=Math.max(n.totalMinutes,1);L+=s*f,L>m&&(L=m);const l=L;if(ne(),_(l),Te(),Ae(l),ie(l),J(l),U(l),L>=m){I=!0,A=null,z();return}A=requestAnimationFrame(ve)}return te(),{update:oe,updateSpeed:de,toggleManualPause:N,isPaused:K,onStateChange:re}}function $e(t,h,o){if(h.atvSpeedKmh<=0){t.textContent="Increase ATV speed above zero to animate the transport cycle.";return}if(o.trailersPerDay<=0||o.requiredAtvs<=0){t.textContent="Adjust inputs to produce a non-zero workload for ATVs.";return}t.textContent=""}function Ge(){const t={...me},h={...Ie},{canvas:o,derivedList:e,status:r,timeLabel:i,toggleButton:n,detailsLabel:M,derivedSection:f,derivedToggle:T,atvOverrideInput:k,atvOverrideHint:I}=Re(),L=Be(o,i,M);let H=!1;function A(){const b=He(t),D=h.atvOverrideCount>0?h.atvOverrideCount:null,E=qe(t,b,{overrideAtvCount:D}),q={totalMinutes:E.totalMinutes,integerAtvs:E.numAtvs,overrideAtvs:E.overrideAtvCount!=null,computedIntegerAtvs:b.integerAtvs};if(Ve(e,b,q),$e(r,t,b),L.update(E,t),I){const d=C(b.integerAtvs,{maximumFractionDigits:0});if(E.overrideAtvCount!=null){const y=C(E.overrideAtvCount,{maximumFractionDigits:0});I.textContent=`Manual override active (${y} ATVs, computed ${d}).`}else I.textContent=`Using computed requirement (${d} ATVs).`}}if(Ne(t,(b,D)=>{t[b]=D,A()}),Oe(h,b=>{L.updateSpeed(b)}),n){const b=({paused:D})=>{n.textContent=D?"Run":"Pause"};L.onStateChange(b),n.addEventListener("click",()=>{const D=L.isPaused();L.toggleManualPause(!D)})}We(h,A,{input:k}),T.addEventListener("click",()=>{H=!H,f.classList.toggle("collapsed",H),T.textContent=H?"Show metrics":"Hide metrics"}),A()}Ge();
