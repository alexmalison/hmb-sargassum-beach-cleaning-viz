(function(){const m=document.createElement("link").relList;if(m&&m.supports&&m.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))e(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&e(n)}).observe(document,{childList:!0,subtree:!0});function a(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function e(s){if(s.ep)return;s.ep=!0;const r=a(s);fetch(s.href,r)}})();const De=52/12,Le=1,Se=["#64ffda","#90caf9","#ffd54f","#ff8a80","#ce93d8","#80cbc4"],me={seasonLengthMonths:5,sargassumVolumeM3:7183.15,workDaysPerWeek:6,workHoursPerDay:5,trailerCapacityM3:2,timePerWorkerLoadM3Minutes:25,atvSpeedKmh:3,beachLengthM:600,loadTransferTimeMinutes:11,loadingMode:"single"},Ee={minutesPerSecond:Le,atvOverrideCount:0},Ie=[{key:"seasonLengthMonths",label:"Length of season (months)",min:1,max:12,step:.1,section:"season"},{key:"sargassumVolumeM3",label:"Estimated Sargassum volume (m³)",min:0,max:2e4,step:10,section:"season"},{key:"workDaysPerWeek",label:"Working days per week",min:1,max:7,step:1,section:"season"},{key:"workHoursPerDay",label:"Working hours per day",min:1,max:24,step:.5,section:"season"},{key:"trailerCapacityM3",label:"Trailer capacity (m³)",min:.1,max:5,step:.1,section:"labor"},{key:"timePerWorkerLoadM3Minutes",label:"Time to load 1 m³ per worker (minutes)",min:1,max:60,step:1,section:"labor"},{key:"atvSpeedKmh",label:"ATV speed (km/h)",min:0,max:15,step:.1,section:"atv"},{key:"beachLengthM",label:"Beach length (m)",min:60,max:1500,step:10,section:"atv"},{key:"loadTransferTimeMinutes",label:"Load transfer wait (minutes)",min:0,max:60,step:1,section:"atv"},{key:"loadingMode",label:"Loading mode",type:"select",options:[{value:"single",label:"Whole crew from west"},{value:"split",label:"Split crews west/east"}],section:"labor"}],Fe=[{key:"avgDailyRemoval",label:"Average daily removal (m³)",format:t=>P(t,{maximumFractionDigits:2})},{key:"avgHourlyRemoval",label:"Average hourly removal (m³)",format:t=>P(t,{maximumFractionDigits:2})},{key:"trailersPerDay",label:"Trailer loads per day",format:t=>P(t,{maximumFractionDigits:2})},{key:"timeWorkerLoadHours",label:"Worker hours to load trailers (per day)",format:t=>P(t,{maximumFractionDigits:2})},{key:"requiredBeachWorkers",label:"Beach workers required (load crew)",format:t=>P(t,{maximumFractionDigits:2})},{key:"timeToLoadTrailerMinutes",label:"Time to load trailer (minutes)",format:t=>P(t,{maximumFractionDigits:2})},{key:"timeToLoadingAreaMinutes",label:"Travel to loading area (minutes)",format:t=>P(t,{maximumFractionDigits:2})},{key:"totalAtvTimePerLoadMinutes",label:"ATV cycle time per load (minutes)",format:t=>P(t,{maximumFractionDigits:2})},{key:"timePerAtvHours",label:"ATV duty time (hours/day)",format:t=>P(t,{maximumFractionDigits:2})},{key:"requiredAtvs",label:"Required # of ATVs",format:t=>P(t,{maximumFractionDigits:2})},{key:"requiredAtvDrivers",label:"Required # of ATV drivers",format:t=>P(t,{maximumFractionDigits:2})},{key:"requiredUnloadWorkers",label:"Required # of unload workers",format:t=>P(t,{maximumFractionDigits:2})},{key:"integerLoads",label:"Loads simulated today",format:t=>P(t,{maximumFractionDigits:0})},{key:"integerAtvs",label:"ATVs in rotation",format:t=>P(t,{maximumFractionDigits:0})},{key:"totalMinutes",label:"Day cycle duration (minutes)",format:t=>P(t,{maximumFractionDigits:1}),note:"Full rotation for busiest ATV within the day"}];function P(t,m={}){return Number.isFinite(t)?new Intl.NumberFormat("en-US",{maximumFractionDigits:2,minimumFractionDigits:0,...m}).format(t):"—"}function He(t){const m=t.seasonLengthMonths*De,a=m*t.workDaysPerWeek,e=a>0?t.sargassumVolumeM3/a:0,s=t.workHoursPerDay>0?e/t.workHoursPerDay:0,r=t.trailerCapacityM3>0?e/t.trailerCapacityM3:0,c=t.timePerWorkerLoadM3Minutes*e/60,v=t.workHoursPerDay>0?c/t.workHoursPerDay:0,x=v>0?t.trailerCapacityM3*t.timePerWorkerLoadM3Minutes/v:0,D=t.atvSpeedKmh*1e3/60,C=t.beachLengthM/2,L=D>0?C/D:0,w=L,T=L+x+w,M=T*r/60,A=t.workHoursPerDay>0?M/t.workHoursPerDay:0,E=A,F=t.workHoursPerDay>0?r*x/60/t.workHoursPerDay:0,h=Math.max(1,Math.round(r)),g=Math.max(1,Math.ceil(A));return{workingWeeks:m,workingDaysSeason:a,avgDailyRemoval:e,avgHourlyRemoval:s,trailersPerDay:r,timeWorkerLoadHours:c,requiredBeachWorkers:v,timeToLoadTrailerMinutes:x,timeToLoadingAreaMinutes:L,totalAtvTimePerLoadMinutes:T,timePerAtvHours:M,requiredAtvs:A,requiredAtvDrivers:E,requiredUnloadWorkers:F,integerLoads:h,integerAtvs:g}}function qe(t,m,a={}){const e=m.integerLoads,s=Number(a.overrideAtvCount),r=Number.isFinite(s)&&s>0?Math.max(1,Math.round(s)):null,n=r??m.integerAtvs,c=[],v=[],x=Array.from({length:n},()=>[]),D=Array.from({length:n},()=>0),C=Math.max(0,t.loadTransferTimeMinutes??0);if(e<=0||n<=0)return{loadMarkers:c,segmentsByAtv:x,totalMinutes:0,numLoads:0,numAtvs:n,loadStates:v};const L=t.beachLengthM/e,w=m.timeToLoadTrailerMinutes,T=t.atvSpeedKmh>0?t.atvSpeedKmh*1e3/60:0;let M=0,A=0;const E=Array.from({length:e},(h,g)=>{const b=g*L,X=(g+1)*L,W=b+L/2;return{loadIndex:g+1,startPosM:b,endPosM:X,centerPosM:W}});c.push(...E.map(h=>h.centerPosM).sort((h,g)=>h-g));let F;if((t.loadingMode??"single")==="split"){F=[];let h=0,g=e-1,b=!0;for(;h<=g;)b?(F.push({...E[h],crew:"West crew"}),h+=1):(F.push({...E[g],crew:"East crew"}),g-=1),b=!b;F.length&&e%2===1&&(F[F.length-1].crew="Both crews")}else F=E.map(h=>({...h,crew:"Main crew"}));return F.forEach(h=>{const g=h.centerPosM,b=h.startPosM,X=h.endPosM,W=Math.min(g,5),Z=T>0?g/T:0,ne=T>0?Math.max(g-W,0)/T:0,se=T>0?W/T:0;let N=0,_=D[0];for(let V=1;V<n;V+=1)D[V]<_-Number.EPSILON&&(_=D[V],N=V);const oe=D[N],z=oe+Z,K=z+w,G=K+ne,ae=G+se;let j=0,B=ae;B<M&&(j=M-B,B=M);const ee=B+C,$=V=>{x[N].push(V),A=Math.max(A,V.endMin)};$({atvId:N,loadId:h.loadIndex,phase:"outbound",startMin:oe,endMin:z,startPosM:0,endPosM:g}),$({atvId:N,loadId:h.loadIndex,phase:"loading",startMin:z,endMin:K,startPosM:g,endPosM:g}),ne>0?$({atvId:N,loadId:h.loadIndex,phase:"return",startMin:K,endMin:G,startPosM:g,endPosM:W}):$({atvId:N,loadId:h.loadIndex,phase:"return",startMin:K,endMin:K,startPosM:g,endPosM:W}),j>0&&$({atvId:N,loadId:h.loadIndex,phase:"hold",startMin:G,endMin:G+j,startPosM:W,endPosM:W}),$({atvId:N,loadId:h.loadIndex,phase:"approach",startMin:G+j,endMin:B,startPosM:W,endPosM:0}),$({atvId:N,loadId:h.loadIndex,phase:"transfer",startMin:B,endMin:ee,startPosM:0,endPosM:0}),D[N]=ee,M=ee,v.push({startPosM:b,endPosM:X,arrivalMin:z,cleanedAtMinute:K,crew:h.crew,loadId:h.loadIndex})}),{loadMarkers:c,segmentsByAtv:x.map(h=>h.sort((g,b)=>g.startMin-b.startMin)),totalMinutes:A,numLoads:e,numAtvs:n,loadStates:v,overrideAtvCount:r}}function Ne(){const t=document.querySelector("#app");return t.innerHTML=`
    <section class="controls">
      <div class="control-header">
        <h1>HMB Beach Cleanup Model</h1>
        <p>Set the season-scale inputs from the spreadsheet; the animation shows how one workday plays out with those assumptions.</p>
      </div>
      <div class="controls-groups">
        <div class="control-group">
          <h2>Season Parameters</h2>
          <div class="input-grid" data-section="season"></div>
        </div>
        <div class="control-group">
          <h2>Trailer &amp; Labor</h2>
          <div class="input-grid" data-section="labor"></div>
        </div>
        <div class="control-group">
          <h2>ATV Operations</h2>
          <div class="input-grid" data-section="atv"></div>
          <div class="field override-field">
            <label for="atvOverrideInput">Override # of ATVs</label>
            <input
              type="number"
              id="atvOverrideInput"
              min="0"
              step="1"
              placeholder="0 for auto"
            />
            <span class="field-note" id="atvOverrideHint"></span>
          </div>
        </div>
      </div>
      <div class="derived-section" id="derivedSection">
        <div class="derived-header">
          <h2>Derived Metrics</h2>
          <button type="button" class="toggle-derived" id="toggleDerived">Hide metrics</button>
        </div>
        <ul class="metrics-list" id="derivedMetrics"></ul>
      </div>
      <div class="status" id="status"></div>
    </section>
    <section class="simulation">
      <div class="canvas-container">
        <canvas id="beachCanvas" width="960" height="520"></canvas>
        <div class="canvas-overlay canvas-overlay-top">
          <div class="sim-controls">
            <button type="button" id="toggleRun" class="toggle-run">Pause</button>
            <span id="timeLabel" class="sim-stat">Sim time 00:00:00</span>
            <div class="speed-slider">
              <input type="range" id="speedSlider" min="1" max="60" step="1" />
              <span id="speedValue">1 s → 1 min</span>
            </div>
          </div>
        </div>
        <div class="canvas-overlay canvas-overlay-bottom">
          <span id="detailsLabel"></span>
        </div>
      </div>
    </section>
  `,{canvas:document.querySelector("#beachCanvas"),derivedList:document.querySelector("#derivedMetrics"),status:document.querySelector("#status"),timeLabel:document.querySelector("#timeLabel"),toggleButton:document.querySelector("#toggleRun"),detailsLabel:document.querySelector("#detailsLabel"),derivedSection:document.querySelector("#derivedSection"),derivedToggle:document.querySelector("#toggleDerived"),speedSlider:document.querySelector("#speedSlider"),speedValue:document.querySelector("#speedValue"),atvOverrideInput:document.querySelector("#atvOverrideInput"),atvOverrideHint:document.querySelector("#atvOverrideHint")}}function Oe(t,m){Ie.forEach(a=>{const e=document.querySelector(`[data-section="${a.section}"]`);if(!e)return;const s=document.createElement("div");s.className="field";const r=document.createElement("label");r.textContent=a.label;let n;if(a.type==="select"&&Array.isArray(a.options))n=document.createElement("select"),a.options.forEach(c=>{const v=document.createElement("option");v.value=String(c.value),v.textContent=c.label,n.append(v)}),n.value=String(t[a.key]),n.addEventListener("change",()=>{const c=n.value,v=Number(c),D=a.options.every(C=>typeof C.value=="number")&&Number.isFinite(v)?v:c;m(a.key,D)});else{n=document.createElement("input");const c=a.type==="text"?"text":"number";if(n.type=c,a.key==="trailerCapacityM3"?n.value=Number(t[a.key]??0).toFixed(1):n.value=String(t[a.key]??""),a.placeholder&&(n.placeholder=a.placeholder),c==="number"){a.min!==void 0&&(n.min=String(a.min)),a.max!==void 0&&(n.max=String(a.max)),a.step!==void 0&&(n.step=String(a.step));const v=()=>{const x=Number(n.value);Number.isFinite(x)&&(m(a.key,x),a.key==="trailerCapacityM3"&&(n.value=x.toFixed(1)))};a.key==="trailerCapacityM3"?(n.addEventListener("change",v),n.addEventListener("blur",v)):n.addEventListener("input",v)}else n.addEventListener("input",()=>{m(a.key,n.value)})}s.append(r,n),e.append(s)})}function Re(t,m){const a=document.querySelector("#speedSlider"),e=document.querySelector("#speedValue");if(!a||!e)return;const s=r=>{const n=Math.max(1,Math.round(r));e.textContent=`1 s → ${n} min`,m(r)};a.value=String(t.minutesPerSecond),s(t.minutesPerSecond),a.addEventListener("input",()=>{const r=Number(a.value);!Number.isFinite(r)||r<=0||(t.minutesPerSecond=r,s(r))})}function We(t,m,a={}){const e=a.input??document.querySelector("#atvOverrideInput");if(!e)return;const s=r=>{const n=Number(r);!Number.isFinite(n)||n<=0?(t.atvOverrideCount=0,e.value="0"):(t.atvOverrideCount=Math.round(n),e.value=String(t.atvOverrideCount)),m()};e.value=t.atvOverrideCount>0?String(t.atvOverrideCount):"0",e.addEventListener("change",()=>{s(e.value)}),e.addEventListener("blur",()=>{s(e.value)}),e.addEventListener("keydown",r=>{r.key==="Enter"&&(r.preventDefault(),s(e.value))})}function Ve(t,m,a){t.innerHTML="",Fe.forEach(e=>{let s;e.key==="totalMinutes"?s=a.totalMinutes:e.key==="integerAtvs"?s=a.integerAtvs??m.integerAtvs:s=m[e.key];const r=document.createElement("li");r.className="metric-card";const n=document.createElement("span");n.className="label",n.textContent=e.label;const c=document.createElement("span");if(c.className="value",c.textContent=e.format?e.format(s):String(s),r.append(n,c),e.key==="integerAtvs"&&a.overrideAtvs){const v=document.createElement("span");v.className="note";const x=P(a.computedIntegerAtvs,{maximumFractionDigits:0});v.textContent=`Manual override active (computed ${x})`,r.append(v)}else if(e.note){const v=document.createElement("span");v.className="note",v.textContent=e.note,r.append(v)}t.append(r)})}function Be(t,m,a){const e=t.getContext("2d"),s=t.width,r=t.height,n=70;let c={loadMarkers:[],loadStates:[],segmentsByAtv:[],totalMinutes:1,numAtvs:0,beachLength:me.beachLengthM},v={...me},x=Le,D=[],C=!1,L=!1,w=0,T=null,M=null,A=[];const E=new Set;let F="Loaded 0.0 m³",h="Crew idle time 00:00:00";const g=r*.3,b=r*.7;function X(){const o={paused:_(),manuallyPaused:C,autoPaused:L};E.forEach(i=>{try{i(o)}catch{}})}function W(){M!==null&&(cancelAnimationFrame(M),M=null)}function Z(){M===null&&!_()&&(M=requestAnimationFrame(ve))}function ne(o,i){c={...o,beachLength:i.beachLengthM},v={...i},D=new Array(c.numAtvs).fill(1),w=0,T=null,L=!1,A=z(c.loadStates??[]),ae(w),j(w),B(w),X(),Z()}function se(o){x=o,T=null}function N(o){const i=C;return typeof o=="boolean"?C=o:C=!C,C?i||W():(L&&(L=!1,w=0),T=null,Z()),X(),C}function _(){return C||L}function oe(o){return typeof o!="function"?()=>{}:(E.add(o),o({paused:_(),manuallyPaused:C,autoPaused:L}),()=>{E.delete(o)})}function z(o){const i=o.map(l=>{const p=Math.min(l.arrivalMin,l.cleanedAtMinute),u=Math.max(l.arrivalMin,l.cleanedAtMinute);return u>p?{start:p,end:u}:null}).filter(Boolean).sort((l,p)=>l.start-p.start);if(!i.length)return[];const f=[i[0]];for(let l=1;l<i.length;l+=1){const p=i[l],u=f[f.length-1];p.start<=u.end?u.end=Math.max(u.end,p.end):f.push({...p})}return f}function K(o){if(!A.length||o<=A[0].start)return 0;let i=0;for(let f=0;f<A.length;f+=1){const{start:l,end:p}=A[f];if(o<=l)break;const u=Math.min(p,o);if(i+=Math.max(0,u-l),o<=p)break}return Math.min(i,Math.max(0,o))}function G(o){const i=Math.max(0,Math.floor(o*60)),f=Math.floor(i/3600),l=Math.floor(i%3600/60),p=i%60;return`${String(f).padStart(2,"0")}:${String(l).padStart(2,"0")}:${String(p).padStart(2,"0")}`}function ae(o){m&&(m.textContent=`Sim time ${G(o)}`)}function j(o){const i=Number(v.trailerCapacityM3)||0;if(i<=0||!Array.isArray(c.loadStates)){F="Loaded 0.0 m³";return}let f=0;c.loadStates.forEach(p=>{const u=p.arrivalMin,d=p.cleanedAtMinute;if(!(!Number.isFinite(u)||!Number.isFinite(d)||d<=u)){if(o>=d)f+=i;else if(o>u){const I=Math.max(0,Math.min((o-u)/(d-u),1));f+=i*I}}}),F=`Loaded ${P(f,{minimumFractionDigits:1,maximumFractionDigits:1})} m³`}function B(o){const i=K(o),f=Math.max(0,o-i);h=`Crew idle time ${G(f)}`}function ee(){e.fillStyle="#0f2034",e.fillRect(0,0,s,r);const o=e.createLinearGradient(0,g,0,b);o.addColorStop(0,"rgba(230, 254, 255, 0.08)"),o.addColorStop(.5,"rgba(110, 192, 230, 0.18)"),o.addColorStop(1,"rgba(255, 255, 255, 0.05)"),e.fillStyle=o,e.fillRect(n,g,s-n*2,b-g);const i=e.createLinearGradient(0,b,0,r);i.addColorStop(0,"rgba(12, 97, 141, 0.85)"),i.addColorStop(1,"rgba(9, 128, 164, 0.9)"),e.fillStyle=i,e.fillRect(n,b,s-n*2,r-b),e.strokeStyle="rgba(255, 255, 255, 0.25)",e.lineWidth=2,e.beginPath(),e.moveTo(n,b),e.lineTo(s-n,b),e.stroke(),e.save(),e.textAlign="center",e.fillStyle="rgba(255, 255, 255, 0.7)",e.font='16px "Inter", sans-serif';const f=Math.min(r-12,b+28),p=[`Beach length = ${P(v.beachLengthM,{maximumFractionDigits:0})} m`,F,h];e.fillText(p.join("   •   "),s/2,f),e.restore()}function $(o){const i=s-n*2,l=(b-g)*.25,p=b-l;c.loadStates.forEach(u=>{const d=n+u.startPosM/c.beachLength*i,I=n+u.endPosM/c.beachLength*i,H=u.arrivalMin,y=u.cleanedAtMinute;if(y<=0)return;const R=e.createLinearGradient(d,p,I,b);if(R.addColorStop(0,"rgba(194, 178, 128, 0.65)"),R.addColorStop(1,"rgba(214, 198, 148, 0.7)"),e.save(),e.fillStyle=R,e.fillRect(d,p,I-d,l),e.restore(),o>=y)return;let q=1;if(o>H){const k=Math.max(y-H,.01),O=Math.min(Math.max((o-H)/k,0),1);q=Math.max(0,1-O)}if(q<=0)return;e.save(),e.globalAlpha=q;const S=e.createLinearGradient(d,p,I,b);S.addColorStop(0,"rgba(121, 85, 72, 0.92)"),S.addColorStop(.5,"rgba(93, 64, 55, 0.95)"),S.addColorStop(1,"rgba(121, 85, 72, 0.92)"),e.fillStyle=S,e.fillRect(d,p,I-d,l),e.restore()})}function V(o,i,f=1){if(!o.length)return{position:0,phase:"idle",loadId:null,direction:f,progress:0};const l=o[o.length-1].endMin;if(l===0)return{position:0,phase:"idle",loadId:null,direction:f,progress:0};let p=i%l,u=f;for(let H=0;H<o.length;H+=1){const y=o[H];if(p<y.startMin)return{position:y.startPosM,phase:"idle",loadId:y.loadId,direction:u,progress:0};if(p<=y.endMin||y.endMin===y.startMin){const R=y.endMin-y.startMin,q=R>0?(p-y.startMin)/R:1,S=y.startPosM+(y.endPosM-y.startPosM)*q,k=Math.sign(y.endPosM-y.startPosM);return k!==0&&(u=k),{position:S,phase:y.phase,loadId:y.loadId,direction:u,progress:q}}}const d=o[o.length-1],I=Math.sign(d.endPosM-d.startPosM);return I!==0&&(u=I),{position:d.endPosM,phase:"idle",loadId:d.loadId,direction:u,progress:0}}function Te(){e.strokeStyle="rgba(255, 255, 255, 0.12)",e.lineWidth=1,e.setLineDash([6,8]),c.loadMarkers.forEach(o=>{const i=n+o/c.beachLength*(s-n*2);e.beginPath(),e.moveTo(i,g),e.lineTo(i,b),e.stroke()}),e.setLineDash([])}function Ae(o,i,f,l=1,p=!1){e.save();const u=5,d=28,I=12,H=36,y=14,R=8,q=l>=0?1:-1,S=o-d/2,k=i-u-I,O=S+d,le=i-u-y+2;let U,Y,te,de;if(q>=0?(Y=S-R,U=Y-H,te=S,de=Y):(U=O+R,Y=U+H,te=O,de=U),e.fillStyle=f,e.fillRect(S,k,d,I),e.fillStyle="rgba(255, 255, 255, 0.2)",e.fillRect(S+6,k+3,12,I-6),e.fillStyle=f,e.fillRect(U,le,H,y),p){const Q=y*.9,ye=H*.08,ue=U+ye,be=Y-ye,ie=le+2,we=ie-Q;e.fillStyle="#8d6e63",e.beginPath(),e.moveTo(ue,ie),e.quadraticCurveTo((ue+be)/2,we,be,ie),e.lineTo(ue,ie),e.closePath(),e.fill()}e.strokeStyle="rgba(255, 255, 255, 0.4)",e.lineWidth=2,e.beginPath(),e.moveTo(te,i-u-2),e.lineTo(de,i-u+1),e.stroke();const he="rgba(15, 32, 52, 0.85)",Pe=[{x:S+d*.25,y:i},{x:O-d*.25,y:i},{x:U+H*.2,y:i+1},{x:Y-H*.2,y:i+1}];e.fillStyle=he,Pe.forEach(Q=>{e.beginPath(),e.arc(Q.x,Q.y,u,0,Math.PI*2),e.fill(),e.fillStyle="rgba(255, 255, 255, 0.25)",e.beginPath(),e.arc(Q.x,Q.y,u*.4,0,Math.PI*2),e.fill(),e.fillStyle=he}),e.fillStyle="rgba(15, 32, 52, 0.85)";const fe=12,xe=q>=0?O-fe+2:S-2;e.fillRect(xe,k-6,fe,6),e.beginPath(),q>=0?(e.moveTo(O-d*.7,k),e.lineTo(O-d*.4,k-8),e.lineTo(O-d*.15,k-8),e.lineTo(O-d*.3,k)):(e.moveTo(S+d*.7,k),e.lineTo(S+d*.4,k-8),e.lineTo(S+d*.15,k-8),e.lineTo(S+d*.3,k)),e.closePath(),e.fill();const J=q>=0?O-d*.35:S+d*.35,ce=4,pe=k-ce-2,Ce=8,ge=6;e.fillStyle="#ffd180",e.beginPath(),e.arc(J,pe,ce,0,Math.PI*2),e.fill(),e.fillStyle="#0f2034",e.fillRect(J-ge/2,pe+ce-1,ge,Ce);const re=k+2,Me=10;e.strokeStyle="#cfd8dc",e.lineWidth=2,e.beginPath(),q>=0?(e.moveTo(J-2,re),e.lineTo(J-2-Me,re-2)):(e.moveTo(J+2,re),e.lineTo(J+2+Me,re-2)),e.stroke(),e.restore()}function ke(o){const i=[];c.segmentsByAtv.forEach((f,l)=>{const p=D[l]??1,{position:u,phase:d,loadId:I,direction:H,progress:y}=V(f,o,p);D[l]=H||p||1;const R=Se[l%Se.length],q=n+u/c.beachLength*(s-n*2),S=b-30-l*18,k=.001,O=d==="loading"&&y>=1-k||d==="return"||d==="hold"||d==="approach"||d==="transfer"&&y<1-k;Ae(q,S,R,D[l],O),e.fillStyle=R,e.font='12px "Inter", sans-serif',e.fillText(`ATV ${l+1}`,q-20,S+22);const U=(I?c.loadStates.find(te=>te.loadId===I):void 0)?.crew??"Crew",Y=P(v.trailerCapacityM3,{minimumFractionDigits:1,maximumFractionDigits:1});i.push(`ATV ${l+1}: ${d} load ${I??"—"} (${U}, capacity ${Y} m³)`)}),a.textContent=i.join("  •  ")}function ve(o){if(_()){M=null;return}T===null&&(T=o);const i=Math.max((o-T)/1e3,0);T=o;const f=Math.max(c.totalMinutes,1);w+=i*x,w>f&&(w=f);const l=w;if(ee(),$(l),Te(),ke(l),ae(l),j(l),B(l),w>=f){L=!0,M=null,X();return}M=requestAnimationFrame(ve)}return Z(),{update:ne,updateSpeed:se,toggleManualPause:N,isPaused:_,onStateChange:oe}}function $e(t,m,a){if(m.atvSpeedKmh<=0){t.textContent="Increase ATV speed above zero to animate the transport cycle.";return}if(a.trailersPerDay<=0||a.requiredAtvs<=0){t.textContent="Adjust inputs to produce a non-zero workload for ATVs.";return}t.textContent=""}function Ue(){const t={...me},m={...Ee},{canvas:a,derivedList:e,status:s,timeLabel:r,toggleButton:n,detailsLabel:c,derivedSection:v,derivedToggle:x,atvOverrideInput:D,atvOverrideHint:C}=Ne(),L=Be(a,r,c);let w=!1;function T(){const M=He(t),A=m.atvOverrideCount>0?m.atvOverrideCount:null,E=qe(t,M,{overrideAtvCount:A}),F={totalMinutes:E.totalMinutes,integerAtvs:E.numAtvs,overrideAtvs:E.overrideAtvCount!=null,computedIntegerAtvs:M.integerAtvs};if(Ve(e,M,F),$e(s,t,M),L.update(E,t),C){const h=P(M.integerAtvs,{maximumFractionDigits:0});if(E.overrideAtvCount!=null){const g=P(E.overrideAtvCount,{maximumFractionDigits:0});C.textContent=`Manual override active (${g} ATVs, computed ${h}).`}else C.textContent=`Using computed requirement (${h} ATVs).`}}if(Oe(t,(M,A)=>{t[M]=A,T()}),Re(m,M=>{L.updateSpeed(M)}),n){const M=({paused:A})=>{n.textContent=A?"Run":"Pause"};L.onStateChange(M),n.addEventListener("click",()=>{const A=L.isPaused();L.toggleManualPause(!A)})}We(m,T,{input:D}),x.addEventListener("click",()=>{w=!w,v.classList.toggle("collapsed",w),x.textContent=w?"Show metrics":"Hide metrics"}),T()}Ue();
