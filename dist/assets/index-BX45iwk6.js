(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))e(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&e(o)}).observe(document,{childList:!0,subtree:!0});function a(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function e(n){if(n.ep)return;n.ep=!0;const i=a(n);fetch(n.href,i)}})();const Y=52/12,K=1,U=["#64ffda","#90caf9","#ffd54f","#ff8a80","#ce93d8","#80cbc4"],_={seasonLengthMonths:5,sargassumVolumeM3:7183.15,workDaysPerWeek:6,workHoursPerDay:5,trailerCapacityM3:2,timePerWorkerLoadM3Minutes:25,atvSpeedKmh:3,beachLengthM:600,loadTransferTimeMinutes:11},G={minutesPerSecond:K,atvOverrideEnabled:!1,atvOverrideCount:null},j=[{key:"seasonLengthMonths",label:"Length of season (months)",min:1,max:12,step:.1,section:"season"},{key:"sargassumVolumeM3",label:"Estimated Sargassum volume (m³)",min:0,max:2e4,step:10,section:"season"},{key:"workDaysPerWeek",label:"Working days per week",min:1,max:7,step:1,section:"season"},{key:"workHoursPerDay",label:"Working hours per day",min:1,max:24,step:.5,section:"season"},{key:"trailerCapacityM3",label:"Trailer capacity (m³)",min:.1,max:5,step:.1,section:"labor"},{key:"timePerWorkerLoadM3Minutes",label:"Time to load 1 m³ per worker (minutes)",min:1,max:60,step:1,section:"labor"},{key:"atvSpeedKmh",label:"ATV speed (km/h)",min:0,max:15,step:.1,section:"atv"},{key:"beachLengthM",label:"Beach length (m)",min:60,max:1500,step:10,section:"atv"},{key:"loadTransferTimeMinutes",label:"Load transfer wait (minutes)",min:0,max:60,step:1,section:"atv"}],z=[{key:"avgDailyRemoval",label:"Average daily removal (m³)",format:t=>M(t,{maximumFractionDigits:2})},{key:"avgHourlyRemoval",label:"Average hourly removal (m³)",format:t=>M(t,{maximumFractionDigits:2})},{key:"trailersPerDay",label:"Trailer loads per day",format:t=>M(t,{maximumFractionDigits:2})},{key:"timeWorkerLoadHours",label:"Worker hours to load trailers (per day)",format:t=>M(t,{maximumFractionDigits:2})},{key:"requiredBeachWorkers",label:"Beach workers required (load crew)",format:t=>M(t,{maximumFractionDigits:2})},{key:"timeToLoadTrailerMinutes",label:"Time to load trailer (minutes)",format:t=>M(t,{maximumFractionDigits:2})},{key:"timeToLoadingAreaMinutes",label:"Travel to loading area (minutes)",format:t=>M(t,{maximumFractionDigits:2})},{key:"totalAtvTimePerLoadMinutes",label:"ATV cycle time per load (minutes)",format:t=>M(t,{maximumFractionDigits:2})},{key:"timePerAtvHours",label:"ATV duty time (hours/day)",format:t=>M(t,{maximumFractionDigits:2})},{key:"requiredAtvs",label:"Required # of ATVs",format:t=>M(t,{maximumFractionDigits:2})},{key:"requiredAtvDrivers",label:"Required # of ATV drivers",format:t=>M(t,{maximumFractionDigits:2})},{key:"requiredUnloadWorkers",label:"Required # of unload workers",format:t=>M(t,{maximumFractionDigits:2})},{key:"integerLoads",label:"Loads simulated today",format:t=>M(t,{maximumFractionDigits:0})},{key:"integerAtvs",label:"ATVs in rotation",format:t=>M(t,{maximumFractionDigits:0})},{key:"totalMinutes",label:"Day cycle duration (minutes)",format:t=>M(t,{maximumFractionDigits:1}),note:"Full rotation for busiest ATV within the day"}];function M(t,l={}){return Number.isFinite(t)?new Intl.NumberFormat("en-US",{maximumFractionDigits:2,minimumFractionDigits:0,...l}).format(t):"—"}function X(t){const l=t.seasonLengthMonths*Y,a=l*t.workDaysPerWeek,e=a>0?t.sargassumVolumeM3/a:0,n=t.workHoursPerDay>0?e/t.workHoursPerDay:0,i=t.trailerCapacityM3>0?e/t.trailerCapacityM3:0,s=t.timePerWorkerLoadM3Minutes*e/60,d=t.workHoursPerDay>0?s/t.workHoursPerDay:0,h=d>0?t.trailerCapacityM3*t.timePerWorkerLoadM3Minutes/d:0,k=t.atvSpeedKmh*1e3/60,P=t.beachLengthM/2,g=k>0?P/k:0,N=g,D=g+h+N,y=D*i/60,C=t.workHoursPerDay>0?y/t.workHoursPerDay:0,I=C,w=t.workHoursPerDay>0?i*h/60/t.workHoursPerDay:0,O=Math.max(1,Math.round(i)),W=Math.max(1,Math.ceil(C));return{workingWeeks:l,workingDaysSeason:a,avgDailyRemoval:e,avgHourlyRemoval:n,trailersPerDay:i,timeWorkerLoadHours:s,requiredBeachWorkers:d,timeToLoadTrailerMinutes:h,timeToLoadingAreaMinutes:g,totalAtvTimePerLoadMinutes:D,timePerAtvHours:y,requiredAtvs:C,requiredAtvDrivers:I,requiredUnloadWorkers:w,integerLoads:O,integerAtvs:W}}function J(t,l,a={}){const e=l.integerLoads,n=Number(a.overrideAtvCount),i=Number.isFinite(n)&&n>0?Math.max(1,Math.round(n)):null,o=i??l.integerAtvs,s=[],d=[],h=Array.from({length:o},()=>[]),k=Array.from({length:o},()=>0),P=Math.max(0,t.loadTransferTimeMinutes??0);if(e<=0||o<=0)return{loadMarkers:s,segmentsByAtv:h,totalMinutes:0,numLoads:0,numAtvs:o,loadStates:d};const g=t.beachLengthM/e,N=l.timeToLoadTrailerMinutes,D=t.atvSpeedKmh>0?t.atvSpeedKmh*1e3/60:0;let y=0,C=0;const I=Array.from({length:e},(f,r)=>{const c=r*g,A=(r+1)*g,u=c+g/2;return{loadIndex:r+1,startPosM:c,endPosM:A,centerPosM:u}});s.push(...I.map(f=>f.centerPosM).sort((f,r)=>f-r));const w=[];let O=0,W=e-1,B=!0;for(;O<=W;)B?(w.push({...I[O],crew:"West crew"}),O+=1):(w.push({...I[W],crew:"East crew"}),W-=1),B=!B;return w.length&&e%2===1&&(w[w.length-1].crew="Both crews"),w.forEach(f=>{const r=f.centerPosM,c=f.startPosM,A=f.endPosM,u=Math.min(r,5),L=D>0?r/D:0,b=D>0?Math.max(r-u,0)/D:0,m=D>0?u/D:0;let v=0,E=k[0];for(let V=1;V<o;V+=1)k[V]<E-Number.EPSILON&&(E=k[V],v=V);const p=k[v],S=p+L,x=S+N,T=x+b,q=T+m;let H=0,R=q;R<y&&(H=y-R,R=y);const $=R+P,F=V=>{h[v].push(V),C=Math.max(C,V.endMin)};F({atvId:v,loadId:f.loadIndex,phase:"outbound",startMin:p,endMin:S,startPosM:0,endPosM:r}),F({atvId:v,loadId:f.loadIndex,phase:"loading",startMin:S,endMin:x,startPosM:r,endPosM:r}),b>0?F({atvId:v,loadId:f.loadIndex,phase:"return",startMin:x,endMin:T,startPosM:r,endPosM:u}):F({atvId:v,loadId:f.loadIndex,phase:"return",startMin:x,endMin:x,startPosM:r,endPosM:u}),H>0&&F({atvId:v,loadId:f.loadIndex,phase:"hold",startMin:T,endMin:T+H,startPosM:u,endPosM:u}),F({atvId:v,loadId:f.loadIndex,phase:"approach",startMin:T+H,endMin:R,startPosM:u,endPosM:0}),F({atvId:v,loadId:f.loadIndex,phase:"transfer",startMin:R,endMin:$,startPosM:0,endPosM:0}),k[v]=$,y=$,d.push({startPosM:c,endPosM:A,arrivalMin:S,cleanedAtMinute:x,crew:f.crew,loadId:f.loadIndex})}),{loadMarkers:s,segmentsByAtv:h.map(f=>f.sort((r,c)=>r.startMin-c.startMin)),totalMinutes:C,numLoads:e,numAtvs:o,loadStates:d,overrideAtvCount:i}}function Q(){const t=document.querySelector("#app");return t.innerHTML=`
    <section class="controls">
      <div class="control-header">
        <h1>HMB Beach Cleanup Model</h1>
        <p>Set the season-scale inputs from the spreadsheet; the animation shows how one workday plays out with those assumptions.</p>
      </div>
      <div class="controls-groups">
        <div class="control-group">
          <h2>Season Parameters</h2>
          <div class="input-grid" data-section="season"></div>
        </div>
        <div class="control-group">
          <h2>Trailer &amp; Labor</h2>
          <div class="input-grid" data-section="labor"></div>
        </div>
        <div class="control-group">
          <h2>ATV Operations</h2>
          <div class="input-grid" data-section="atv"></div>
          <div class="field override-field">
            <label for="atvOverrideToggle">Override # of ATVs</label>
            <div class="override-controls">
              <select id="atvOverrideToggle">
                <option value="no">No</option>
                <option value="yes">Yes</option>
              </select>
              <input
                type="number"
                id="atvOverrideInput"
                min="1"
                step="1"
                placeholder="Manual count"
              />
            </div>
            <span class="field-note" id="atvOverrideHint"></span>
          </div>
        </div>
      </div>
      <div class="speed-control">
        <label for="speedSlider">Simulation speed (1 s real = ? min sim)</label>
        <div class="speed-slider">
          <input type="range" id="speedSlider" min="1" max="60" step="1" />
          <span id="speedValue"></span>
        </div>
      </div>
      <div class="derived-section" id="derivedSection">
        <div class="derived-header">
          <h2>Derived Metrics</h2>
          <button type="button" class="toggle-derived" id="toggleDerived">Hide metrics</button>
        </div>
        <ul class="metrics-list" id="derivedMetrics"></ul>
      </div>
      <div class="status" id="status"></div>
    </section>
    <section class="simulation">
      <div class="canvas-container">
        <canvas id="beachCanvas" width="960" height="520"></canvas>
        <div class="overlay">
          <span id="timeLabel">00:00</span>
          <span id="detailsLabel"></span>
        </div>
      </div>
    </section>
  `,{canvas:document.querySelector("#beachCanvas"),derivedList:document.querySelector("#derivedMetrics"),status:document.querySelector("#status"),timeLabel:document.querySelector("#timeLabel"),detailsLabel:document.querySelector("#detailsLabel"),derivedSection:document.querySelector("#derivedSection"),derivedToggle:document.querySelector("#toggleDerived"),speedSlider:document.querySelector("#speedSlider"),speedValue:document.querySelector("#speedValue"),atvOverrideToggle:document.querySelector("#atvOverrideToggle"),atvOverrideInput:document.querySelector("#atvOverrideInput"),atvOverrideHint:document.querySelector("#atvOverrideHint")}}function Z(t,l){j.forEach(a=>{const e=document.querySelector(`[data-section="${a.section}"]`);if(!e)return;const n=document.createElement("div");n.className="field";const i=document.createElement("label");i.textContent=a.label;let o;if(a.type==="select"&&Array.isArray(a.options))o=document.createElement("select"),a.options.forEach(s=>{const d=document.createElement("option");d.value=String(s.value),d.textContent=s.label,o.append(d)}),o.value=String(t[a.key]),o.addEventListener("change",()=>{const s=o.value,d=Number(s),k=a.options.every(P=>typeof P.value=="number")&&Number.isFinite(d)?d:s;l(a.key,k)});else{o=document.createElement("input");const s=a.type==="text"?"text":"number";if(o.type=s,a.key==="trailerCapacityM3"?o.value=Number(t[a.key]??0).toFixed(1):o.value=String(t[a.key]??""),a.placeholder&&(o.placeholder=a.placeholder),s==="number"){a.min!==void 0&&(o.min=String(a.min)),a.max!==void 0&&(o.max=String(a.max)),a.step!==void 0&&(o.step=String(a.step));const d=()=>{const h=Number(o.value);Number.isFinite(h)&&(l(a.key,h),a.key==="trailerCapacityM3"&&(o.value=h.toFixed(1)))};a.key==="trailerCapacityM3"?(o.addEventListener("change",d),o.addEventListener("blur",d)):o.addEventListener("input",d)}else o.addEventListener("input",()=>{l(a.key,o.value)})}n.append(i,o),e.append(n)})}function ee(t,l){const a=document.querySelector("#speedSlider"),e=document.querySelector("#speedValue");if(!a||!e)return;const n=i=>{const o=Math.max(1,Math.round(i));e.textContent=`1 s → ${o} min`,l(i)};a.value=String(t.minutesPerSecond),n(t.minutesPerSecond),a.addEventListener("input",()=>{const i=Number(a.value);!Number.isFinite(i)||i<=0||(t.minutesPerSecond=i,n(i))})}function te(t,l,a={}){const e=a.toggle??document.querySelector("#atvOverrideToggle"),n=a.input??document.querySelector("#atvOverrideInput");if(!e||!n)return;const i=s=>{n.disabled=!s,s||(t.atvOverrideCount=null,n.value="")};e.value=t.atvOverrideEnabled?"yes":"no",t.atvOverrideCount!=null&&(n.value=String(t.atvOverrideCount)),i(t.atvOverrideEnabled),e.addEventListener("change",()=>{const s=e.value==="yes";if(t.atvOverrideEnabled=s,s&&!n.value){const d=Number(e.dataset.computedAtvs);Number.isFinite(d)&&d>0&&(t.atvOverrideCount=Math.max(1,Math.round(d)),n.value=String(t.atvOverrideCount))}i(s),l()});const o=()=>{if(!t.atvOverrideEnabled)return;const s=Number(n.value);if(!Number.isFinite(s)||s<=0){t.atvOverrideCount=null,n.value="",l();return}t.atvOverrideCount=Math.round(s),n.value=String(t.atvOverrideCount),l()};n.addEventListener("blur",o),n.addEventListener("keydown",s=>{s.key==="Enter"&&o()})}function oe(t,l,a){t.innerHTML="",z.forEach(e=>{let n;e.key==="totalMinutes"?n=a.totalMinutes:e.key==="integerAtvs"?n=a.integerAtvs??l.integerAtvs:n=l[e.key];const i=document.createElement("li");i.className="metric-card";const o=document.createElement("span");o.className="label",o.textContent=e.label;const s=document.createElement("span");if(s.className="value",s.textContent=e.format?e.format(n):String(n),i.append(o,s),e.key==="integerAtvs"&&a.overrideAtvs){const d=document.createElement("span");d.className="note";const h=M(a.computedIntegerAtvs,{maximumFractionDigits:0});d.textContent=`Manual override active (computed ${h})`,i.append(d)}else if(e.note){const d=document.createElement("span");d.className="note",d.textContent=e.note,i.append(d)}t.append(i)})}function ne(t,l,a){const e=t.getContext("2d"),n=t.width,i=t.height,o=70;let s={loadMarkers:[],loadStates:[],segmentsByAtv:[],totalMinutes:1,beachLength:_.beachLengthM},d={..._},h=null,k=K;const P=i*.3,g=i*.7;function N(r,c){s={...r,beachLength:c.beachLengthM},d={...c},h=null}function D(r){k=r}function y(r){const c=Math.floor(r/60),A=Math.floor(r%60),u=Math.floor(r%1*60),b=`Sim time ${`${String(c).padStart(2,"0")}:${String(A).padStart(2,"0")}:${String(u).padStart(2,"0")}`}`;l&&(l.textContent=b),e.save(),e.font='18px "Inter", sans-serif',e.textBaseline="top",e.textAlign="left";const m=e.measureText(b),v=m.width,E=(m.actualBoundingBoxAscent??0)+(m.actualBoundingBoxDescent??0),p=12,S=6,x=v+p*2,T=(E||16)+S*2,q=o,H=Math.max(16,P-T-12);e.fillStyle="rgba(11, 23, 38, 0.78)",e.fillRect(q,H,x,T),e.strokeStyle="rgba(244, 246, 248, 0.18)",e.lineWidth=1,e.strokeRect(q,H,x,T),e.fillStyle="rgba(244, 246, 248, 0.92)",e.fillText(b,q+p,H+S),e.restore()}function C(){e.fillStyle="#0f2034",e.fillRect(0,0,n,i);const r=e.createLinearGradient(0,P,0,g);r.addColorStop(0,"rgba(230, 254, 255, 0.08)"),r.addColorStop(.5,"rgba(110, 192, 230, 0.18)"),r.addColorStop(1,"rgba(255, 255, 255, 0.05)"),e.fillStyle=r,e.fillRect(o,P,n-o*2,g-P),e.strokeStyle="rgba(255, 255, 255, 0.25)",e.lineWidth=2,e.beginPath(),e.moveTo(o,g),e.lineTo(n-o,g),e.stroke(),e.save(),e.textAlign="center",e.fillStyle="rgba(255, 255, 255, 0.7)",e.font='16px "Inter", sans-serif';const c=Math.min(i-12,g+28),A=M(d.beachLengthM,{maximumFractionDigits:0});e.fillText(`Beach length = ${A} m`,n/2,c),e.restore()}function I(r){const c=n-o*2,u=(g-P)*.25,L=g-u;s.loadStates.forEach(b=>{const m=o+b.startPosM/s.beachLength*c,v=o+b.endPosM/s.beachLength*c,E=b.arrivalMin,p=b.cleanedAtMinute;if(p<=0||r>=p)return;let S=1;if(r>E){const T=Math.max(p-E,.01),q=Math.min(Math.max((r-E)/T,0),1);S=Math.max(0,1-q)}e.save(),e.globalAlpha=S;const x=e.createLinearGradient(m,L,v,g);x.addColorStop(0,"rgba(121, 85, 72, 0.92)"),x.addColorStop(.5,"rgba(93, 64, 55, 0.95)"),x.addColorStop(1,"rgba(121, 85, 72, 0.92)"),e.fillStyle=x,e.fillRect(m,L,v-m,u),e.restore()})}function w(r,c){if(!r.length)return{position:0,phase:"idle",loadId:null};const A=r[r.length-1].endMin;if(A===0)return{position:0,phase:"idle",loadId:null};let u=c%A;for(let b=0;b<r.length;b+=1){const m=r[b];if(u<m.startMin)return{position:m.startPosM,phase:"idle",loadId:m.loadId};if(u<=m.endMin||m.endMin===m.startMin){const v=m.endMin-m.startMin,E=v>0?(u-m.startMin)/v:1;return{position:m.startPosM+(m.endPosM-m.startPosM)*E,phase:m.phase,loadId:m.loadId}}}const L=r[r.length-1];return{position:L.endPosM,phase:"idle",loadId:L.loadId}}function O(){e.strokeStyle="rgba(255, 255, 255, 0.12)",e.lineWidth=1,e.setLineDash([6,8]),s.loadMarkers.forEach(r=>{const c=o+r/s.beachLength*(n-o*2);e.beginPath(),e.moveTo(c,P),e.lineTo(c,g),e.stroke()}),e.setLineDash([])}function W(r,c,A){e.save();const u=5,L=36,b=14,m=28,v=12,E=8,p=r-L/2,S=c-u-b,x=p+L,T=p-E-m,q=c-u-v+2,H=T+m;e.fillStyle=A,e.fillRect(p,S,L,b),e.fillStyle="rgba(255, 255, 255, 0.2)",e.fillRect(p+6,S+3,12,b-6),e.fillStyle=A,e.fillRect(T,q,m,v),e.strokeStyle="rgba(255, 255, 255, 0.4)",e.lineWidth=2,e.beginPath(),e.moveTo(p,c-u-2),e.lineTo(H,c-u+1),e.stroke();const R="rgba(15, 32, 52, 0.85)",$=[{x:p+8,y:c},{x:x-8,y:c},{x:T+m*.25,y:c+1},{x:H-m*.2,y:c+1}];e.fillStyle=R,$.forEach(F=>{e.beginPath(),e.arc(F.x,F.y,u,0,Math.PI*2),e.fill(),e.fillStyle="rgba(255, 255, 255, 0.25)",e.beginPath(),e.arc(F.x,F.y,u*.4,0,Math.PI*2),e.fill(),e.fillStyle=R}),e.fillStyle="rgba(15, 32, 52, 0.85)",e.fillRect(x-10,S-6,12,6),e.beginPath(),e.moveTo(p+L*.4,S),e.lineTo(p+L*.7,S-8),e.lineTo(p+L*.85,S-8),e.lineTo(p+L*.7,S),e.closePath(),e.fill(),e.restore()}function B(r){const c=[];s.segmentsByAtv.forEach((A,u)=>{const{position:L,phase:b,loadId:m}=w(A,r),v=U[u%U.length],E=o+L/s.beachLength*(n-o*2),p=g-30-u*18;W(E,p,v),e.fillStyle=v,e.font='12px "Inter", sans-serif',e.fillText(`ATV ${u+1}`,E-20,p+22);const x=(m?s.loadStates.find(q=>q.loadId===m):void 0)?.crew??"Crew",T=M(d.trailerCapacityM3,{minimumFractionDigits:1,maximumFractionDigits:1});c.push(`ATV ${u+1}: ${b} load ${m??"—"} (${x}, capacity ${T} m³)`)}),a.textContent=c.join("  •  ")}function f(r){h||(h=r);const c=(r-h)/1e3,A=Math.max(s.totalMinutes,1),u=c*k%A;C(),I(u),O(),B(u),y(u),requestAnimationFrame(f)}return requestAnimationFrame(f),{update:N,updateSpeed:D}}function ae(t,l,a){if(l.atvSpeedKmh<=0){t.textContent="Increase ATV speed above zero to animate the transport cycle.";return}if(a.trailersPerDay<=0||a.requiredAtvs<=0){t.textContent="Adjust inputs to produce a non-zero workload for ATVs.";return}t.textContent=""}function re(){const t={..._},l={...G},{canvas:a,derivedList:e,status:n,timeLabel:i,detailsLabel:o,derivedSection:s,derivedToggle:d,atvOverrideToggle:h,atvOverrideInput:k,atvOverrideHint:P}=Q(),g=ne(a,i,o);let N=!1;function D(){const y=X(t),C=l.atvOverrideEnabled?l.atvOverrideCount:null,I=J(t,y,{overrideAtvCount:C}),w={totalMinutes:I.totalMinutes,integerAtvs:I.numAtvs,overrideAtvs:I.overrideAtvCount!=null,computedIntegerAtvs:y.integerAtvs};if(oe(e,y,w),ae(n,t,y),g.update(I,t),P){const O=M(y.integerAtvs,{maximumFractionDigits:0});if(I.overrideAtvCount!=null){const W=M(I.overrideAtvCount,{maximumFractionDigits:0});P.textContent=`Manual override active (${W} ATVs, computed ${O}).`}else P.textContent=`Using computed requirement (${O} ATVs).`}if(h&&(h.dataset.computedAtvs=String(y.integerAtvs)),k){const O=M(y.integerAtvs,{maximumFractionDigits:0});(!l.atvOverrideEnabled||l.atvOverrideCount==null)&&(k.placeholder=`Computed ${O}`)}}Z(t,(y,C)=>{t[y]=C,D()}),ee(l,y=>{g.updateSpeed(y)}),te(l,D,{toggle:h,input:k}),d.addEventListener("click",()=>{N=!N,s.classList.toggle("collapsed",N),d.textContent=N?"Show metrics":"Hide metrics"}),D()}re();
