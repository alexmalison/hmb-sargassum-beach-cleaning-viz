(function(){const h=document.createElement("link").relList;if(h&&h.supports&&h.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))e(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&e(n)}).observe(document,{childList:!0,subtree:!0});function o(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function e(r){if(r.ep)return;r.ep=!0;const i=o(r);fetch(r.href,i)}})();const Ie=52/12,Le=1,Se=["#64ffda","#90caf9","#ffd54f","#ff8a80","#ce93d8","#80cbc4"],me={seasonLengthMonths:5,sargassumVolumeM3:7183.15,workDaysPerWeek:6,workHoursPerDay:5,trailerCapacityM3:2,timePerWorkerLoadM3Minutes:25,atvSpeedKmh:3,beachLengthM:600,loadTransferTimeMinutes:11,loadingMode:"single"},Ee={minutesPerSecond:Le,atvOverrideCount:0},Fe=[{key:"seasonLengthMonths",label:"Length of season (months)",min:1,max:12,step:.1,section:"season"},{key:"sargassumVolumeM3",label:"Estimated Sargassum volume (m³)",min:0,max:2e4,step:10,section:"season"},{key:"workDaysPerWeek",label:"Working days per week",min:1,max:7,step:1,section:"season"},{key:"workHoursPerDay",label:"Working hours per day",min:1,max:24,step:.5,section:"season"},{key:"trailerCapacityM3",label:"Trailer capacity (m³)",min:.1,max:5,step:.1,section:"labor"},{key:"timePerWorkerLoadM3Minutes",label:"Time to load 1 m³ per worker (minutes)",min:1,max:60,step:1,section:"labor"},{key:"atvSpeedKmh",label:"ATV speed (km/h)",min:0,max:15,step:.1,section:"atv"},{key:"beachLengthM",label:"Beach length (m)",min:60,max:1500,step:10,section:"atv"},{key:"loadTransferTimeMinutes",label:"Load transfer wait (minutes)",min:0,max:60,step:1,section:"atv"},{key:"loadingMode",label:"Loading mode",type:"select",options:[{value:"single",label:"Whole crew from west"},{value:"split",label:"Split crews west/east"}],section:"labor"}],He=[{key:"avgDailyRemoval",label:"Average daily removal (m³)",format:t=>P(t,{maximumFractionDigits:2})},{key:"avgHourlyRemoval",label:"Average hourly removal (m³)",format:t=>P(t,{maximumFractionDigits:2})},{key:"trailersPerDay",label:"Trailer loads per day",format:t=>P(t,{maximumFractionDigits:2})},{key:"timeWorkerLoadHours",label:"Worker hours to load trailers (per day)",format:t=>P(t,{maximumFractionDigits:2})},{key:"requiredBeachWorkers",label:"Beach workers required (load crew)",format:t=>P(t,{maximumFractionDigits:2})},{key:"timeToLoadTrailerMinutes",label:"Time to load trailer (minutes)",format:t=>P(t,{maximumFractionDigits:2})},{key:"timeToLoadingAreaMinutes",label:"Travel to loading area (minutes)",format:t=>P(t,{maximumFractionDigits:2})},{key:"totalAtvTimePerLoadMinutes",label:"ATV cycle time per load (minutes)",format:t=>P(t,{maximumFractionDigits:2})},{key:"timePerAtvHours",label:"ATV duty time (hours/day)",format:t=>P(t,{maximumFractionDigits:2})},{key:"requiredAtvs",label:"Required # of ATVs",format:t=>P(t,{maximumFractionDigits:2})},{key:"requiredAtvDrivers",label:"Required # of ATV drivers",format:t=>P(t,{maximumFractionDigits:2})},{key:"requiredUnloadWorkers",label:"Required # of unload workers",format:t=>P(t,{maximumFractionDigits:2})},{key:"integerLoads",label:"Loads simulated today",format:t=>P(t,{maximumFractionDigits:0})},{key:"integerAtvs",label:"ATVs in rotation",format:t=>P(t,{maximumFractionDigits:0})},{key:"totalMinutes",label:"Day cycle duration (minutes)",format:t=>P(t,{maximumFractionDigits:1}),note:"Full rotation for busiest ATV within the day"}];function P(t,h={}){return Number.isFinite(t)?new Intl.NumberFormat("en-US",{maximumFractionDigits:2,minimumFractionDigits:0,...h}).format(t):"—"}function qe(t){const h=t.seasonLengthMonths*Ie,o=h*t.workDaysPerWeek,e=o>0?t.sargassumVolumeM3/o:0,r=t.workHoursPerDay>0?e/t.workHoursPerDay:0,i=t.trailerCapacityM3>0?e/t.trailerCapacityM3:0,c=t.timePerWorkerLoadM3Minutes*e/60,f=t.workHoursPerDay>0?c/t.workHoursPerDay:0,x=f>0?t.trailerCapacityM3*t.timePerWorkerLoadM3Minutes/f:0,E=t.atvSpeedKmh*1e3/60,D=t.beachLengthM/2,S=E>0?D/E:0,I=S,L=S+x+I,M=L*i/60,T=t.workHoursPerDay>0?M/t.workHoursPerDay:0,F=T,q=t.workHoursPerDay>0?i*x/60/t.workHoursPerDay:0,p=Math.max(1,Math.round(i)),g=Math.max(1,Math.ceil(T));return{workingWeeks:h,workingDaysSeason:o,avgDailyRemoval:e,avgHourlyRemoval:r,trailersPerDay:i,timeWorkerLoadHours:c,requiredBeachWorkers:f,timeToLoadTrailerMinutes:x,timeToLoadingAreaMinutes:S,totalAtvTimePerLoadMinutes:L,timePerAtvHours:M,requiredAtvs:T,requiredAtvDrivers:F,requiredUnloadWorkers:q,integerLoads:p,integerAtvs:g}}function Re(t,h,o={}){const e=h.integerLoads,r=Number(o.overrideAtvCount),i=Number.isFinite(r)&&r>0?Math.max(1,Math.round(r)):null,n=i??h.integerAtvs,c=[],f=[],x=Array.from({length:n},()=>[]),E=Array.from({length:n},()=>0),D=Math.max(0,t.loadTransferTimeMinutes??0);if(e<=0||n<=0)return{loadMarkers:c,segmentsByAtv:x,totalMinutes:0,numLoads:0,numAtvs:n,loadStates:f};const S=t.beachLengthM/e,I=h.timeToLoadTrailerMinutes,L=t.atvSpeedKmh>0?t.atvSpeedKmh*1e3/60:0;let M=0,T=0;const F=Array.from({length:e},(p,g)=>{const $=g*S,C=(g+1)*S,N=$+S/2;return{loadIndex:g+1,startPosM:$,endPosM:C,centerPosM:N}});c.push(...F.map(p=>p.centerPosM).sort((p,g)=>p-g));let q;if((t.loadingMode??"single")==="split"){q=[];let p=0,g=e-1,$=!0;for(;p<=g;)$?(q.push({...F[p],crew:"West crew"}),p+=1):(q.push({...F[g],crew:"East crew"}),g-=1),$=!$;q.length&&e%2===1&&(q[q.length-1].crew="Both crews")}else q=F.map(p=>({...p,crew:"Main crew"}));return q.forEach(p=>{const g=p.centerPosM,$=p.startPosM,C=p.endPosM,N=Math.min(g,5),le=L>0?g/L:0,Q=L>0?Math.max(g-N,0)/L:0,de=L>0?N/L:0;let O=0,oe=E[0];for(let U=1;U<n;U+=1)E[U]<oe-Number.EPSILON&&(oe=E[U],O=U);const Y=E[O],Z=Y+le,X=Z+I,z=X+Q,re=z+de;let J=0,_=re;_<M&&(J=M-_,_=M);const ee=_+D,K=U=>{x[O].push(U),T=Math.max(T,U.endMin)};K({atvId:O,loadId:p.loadIndex,phase:"outbound",startMin:Y,endMin:Z,startPosM:0,endPosM:g}),K({atvId:O,loadId:p.loadIndex,phase:"loading",startMin:Z,endMin:X,startPosM:g,endPosM:g}),Q>0?K({atvId:O,loadId:p.loadIndex,phase:"return",startMin:X,endMin:z,startPosM:g,endPosM:N}):K({atvId:O,loadId:p.loadIndex,phase:"return",startMin:X,endMin:X,startPosM:g,endPosM:N}),J>0&&K({atvId:O,loadId:p.loadIndex,phase:"hold",startMin:z,endMin:z+J,startPosM:N,endPosM:N}),K({atvId:O,loadId:p.loadIndex,phase:"approach",startMin:z+J,endMin:_,startPosM:N,endPosM:0}),K({atvId:O,loadId:p.loadIndex,phase:"transfer",startMin:_,endMin:ee,startPosM:0,endPosM:0}),E[O]=ee,M=ee,f.push({startPosM:$,endPosM:C,arrivalMin:Z,cleanedAtMinute:X,crew:p.crew,loadId:p.loadIndex})}),{loadMarkers:c,segmentsByAtv:x.map(p=>p.sort((g,$)=>g.startMin-$.startMin)),totalMinutes:T,numLoads:e,numAtvs:n,loadStates:f,overrideAtvCount:i}}function Ne(){const t=document.querySelector("#app");return t.innerHTML=`
    <section class="controls">
      <div class="control-header">
        <h1>HMB Beach Cleanup Model</h1>
        <p>Set the season-scale inputs from the spreadsheet; the animation shows how one workday plays out with those assumptions.</p>
      </div>
      <div class="controls-groups">
        <div class="control-group">
          <h2>Season Parameters</h2>
          <div class="input-grid" data-section="season"></div>
        </div>
        <div class="control-group">
          <h2>Trailer &amp; Labor</h2>
          <div class="input-grid" data-section="labor"></div>
        </div>
        <div class="control-group">
          <h2>ATV Operations</h2>
          <div class="input-grid" data-section="atv"></div>
          <div class="field override-field">
            <label for="atvOverrideInput">Override # of ATVs</label>
            <input
              type="number"
              id="atvOverrideInput"
              min="0"
              step="1"
              placeholder="0 for auto"
            />
            <span class="field-note" id="atvOverrideHint"></span>
          </div>
        </div>
      </div>
      <div class="derived-section" id="derivedSection">
        <div class="derived-header">
          <h2>Derived Metrics</h2>
          <button type="button" class="toggle-derived" id="toggleDerived">Hide metrics</button>
        </div>
        <ul class="metrics-list" id="derivedMetrics"></ul>
      </div>
      <div class="status" id="status"></div>
    </section>
    <section class="simulation">
      <div class="canvas-container">
        <canvas id="beachCanvas" width="720" height="420"></canvas>
        <div class="canvas-overlay canvas-overlay-top">
          <div class="sim-controls">
            <button type="button" id="toggleRun" class="toggle-run">Pause</button>
            <span id="timeLabel" class="sim-stat">Sim time 00:00:00</span>
            <div class="speed-slider">
              <input type="range" id="speedSlider" min="1" max="60" step="1" />
              <span id="speedValue">1 s → 1 min</span>
            </div>
          </div>
        </div>
        <div class="canvas-overlay canvas-overlay-bottom">
          <span id="detailsLabel"></span>
        </div>
      </div>
    </section>
  `,{canvas:document.querySelector("#beachCanvas"),derivedList:document.querySelector("#derivedMetrics"),status:document.querySelector("#status"),timeLabel:document.querySelector("#timeLabel"),toggleButton:document.querySelector("#toggleRun"),detailsLabel:document.querySelector("#detailsLabel"),derivedSection:document.querySelector("#derivedSection"),derivedToggle:document.querySelector("#toggleDerived"),speedSlider:document.querySelector("#speedSlider"),speedValue:document.querySelector("#speedValue"),atvOverrideInput:document.querySelector("#atvOverrideInput"),atvOverrideHint:document.querySelector("#atvOverrideHint")}}function Oe(t,h){Fe.forEach(o=>{const e=document.querySelector(`[data-section="${o.section}"]`);if(!e)return;const r=document.createElement("div");r.className="field";const i=document.createElement("label");i.textContent=o.label;let n;if(o.type==="select"&&Array.isArray(o.options))n=document.createElement("select"),o.options.forEach(c=>{const f=document.createElement("option");f.value=String(c.value),f.textContent=c.label,n.append(f)}),n.value=String(t[o.key]),n.addEventListener("change",()=>{const c=n.value,f=Number(c),E=o.options.every(D=>typeof D.value=="number")&&Number.isFinite(f)?f:c;h(o.key,E)});else{n=document.createElement("input");const c=o.type==="text"?"text":"number";if(n.type=c,o.key==="trailerCapacityM3"?n.value=Number(t[o.key]??0).toFixed(1):n.value=String(t[o.key]??""),o.placeholder&&(n.placeholder=o.placeholder),c==="number"){o.min!==void 0&&(n.min=String(o.min)),o.max!==void 0&&(n.max=String(o.max)),o.step!==void 0&&(n.step=String(o.step));const f=()=>{const x=Number(n.value);Number.isFinite(x)&&(h(o.key,x),o.key==="trailerCapacityM3"&&(n.value=x.toFixed(1)))};o.key==="trailerCapacityM3"?(n.addEventListener("change",f),n.addEventListener("blur",f)):n.addEventListener("input",f)}else n.addEventListener("input",()=>{h(o.key,n.value)})}r.append(i,n),e.append(r)})}function We(t,h){const o=document.querySelector("#speedSlider"),e=document.querySelector("#speedValue");if(!o||!e)return;const r=i=>{const n=Math.max(1,Math.round(i));e.textContent=`1 s → ${n} min`,h(i)};o.value=String(t.minutesPerSecond),r(t.minutesPerSecond),o.addEventListener("input",()=>{const i=Number(o.value);!Number.isFinite(i)||i<=0||(t.minutesPerSecond=i,r(i))})}function Ve(t,h,o={}){const e=o.input??document.querySelector("#atvOverrideInput");if(!e)return;const r=i=>{const n=Number(i);!Number.isFinite(n)||n<=0?(t.atvOverrideCount=0,e.value="0"):(t.atvOverrideCount=Math.round(n),e.value=String(t.atvOverrideCount)),h()};e.value=t.atvOverrideCount>0?String(t.atvOverrideCount):"0",e.addEventListener("change",()=>{r(e.value)}),e.addEventListener("blur",()=>{r(e.value)}),e.addEventListener("keydown",i=>{i.key==="Enter"&&(i.preventDefault(),r(e.value))})}function Be(t,h,o){t.innerHTML="",He.forEach(e=>{let r;e.key==="totalMinutes"?r=o.totalMinutes:e.key==="integerAtvs"?r=o.integerAtvs??h.integerAtvs:r=h[e.key];const i=document.createElement("li");i.className="metric-card";const n=document.createElement("span");n.className="label",n.textContent=e.label;const c=document.createElement("span");if(c.className="value",c.textContent=e.format?e.format(r):String(r),i.append(n,c),e.key==="integerAtvs"&&o.overrideAtvs){const f=document.createElement("span");f.className="note";const x=P(o.computedIntegerAtvs,{maximumFractionDigits:0});f.textContent=`Manual override active (computed ${x})`,i.append(f)}else if(e.note){const f=document.createElement("span");f.className="note",f.textContent=e.note,i.append(f)}t.append(i)})}function $e(t,h,o){const e=t.getContext("2d"),r=t.width,i=t.height,n=70;let c={loadMarkers:[],loadStates:[],segmentsByAtv:[],totalMinutes:1,numAtvs:0,beachLength:me.beachLengthM},f={...me},x=Le,E=[],D=!1,S=!1,I=0,L=null,M=null,T=[];const F=new Set;let q="Loaded 0.0 m³",p="Crew idle time 00:00:00";const g=i*.3,$=i*.4,C=g+$;function N(){const a={paused:Y(),manuallyPaused:D,autoPaused:S};F.forEach(s=>{try{s(a)}catch{}})}function le(){M!==null&&(cancelAnimationFrame(M),M=null)}function Q(){M===null&&!Y()&&(M=requestAnimationFrame(ve))}function de(a,s){c={...a,beachLength:s.beachLengthM},f={...s},E=new Array(c.numAtvs).fill(1),I=0,L=null,S=!1,T=X(c.loadStates??[]),J(I),_(I),ee(I),N(),Q()}function O(a){x=a,L=null}function oe(a){const s=D;return typeof a=="boolean"?D=a:D=!D,D?s||le():(S&&(S=!1,I=0),L=null,Q()),N(),D}function Y(){return D||S}function Z(a){return typeof a!="function"?()=>{}:(F.add(a),a({paused:Y(),manuallyPaused:D,autoPaused:S}),()=>{F.delete(a)})}function X(a){const s=a.map(l=>{const u=Math.min(l.arrivalMin,l.cleanedAtMinute),v=Math.max(l.arrivalMin,l.cleanedAtMinute);return v>u?{start:u,end:v}:null}).filter(Boolean).sort((l,u)=>l.start-u.start);if(!s.length)return[];const m=[s[0]];for(let l=1;l<s.length;l+=1){const u=s[l],v=m[m.length-1];u.start<=v.end?v.end=Math.max(v.end,u.end):m.push({...u})}return m}function z(a){if(!T.length||a<=T[0].start)return 0;let s=0;for(let m=0;m<T.length;m+=1){const{start:l,end:u}=T[m];if(a<=l)break;const v=Math.min(u,a);if(s+=Math.max(0,v-l),a<=u)break}return Math.min(s,Math.max(0,a))}function re(a){const s=Math.max(0,Math.floor(a*60)),m=Math.floor(s/3600),l=Math.floor(s%3600/60),u=s%60;return`${String(m).padStart(2,"0")}:${String(l).padStart(2,"0")}:${String(u).padStart(2,"0")}`}function J(a){h&&(h.textContent=`Sim time ${re(a)}`)}function _(a){const s=Number(f.trailerCapacityM3)||0;if(s<=0||!Array.isArray(c.loadStates)){q="Loaded 0.0 m³";return}let m=0;c.loadStates.forEach(u=>{const v=u.arrivalMin,d=u.cleanedAtMinute;if(!(!Number.isFinite(v)||!Number.isFinite(d)||d<=v)){if(a>=d)m+=s;else if(a>v){const b=Math.max(0,Math.min((a-v)/(d-v),1));m+=s*b}}}),q=`Loaded ${P(m,{minimumFractionDigits:1,maximumFractionDigits:1})} m³`}function ee(a){const s=z(a),m=Math.max(0,a-s);p=`Crew idle time ${re(m)}`}function K(){e.fillStyle="#0f2034",e.fillRect(0,0,r,i);const a=e.createLinearGradient(0,0,0,g);a.addColorStop(0,"rgba(236, 221, 180, 0.92)"),a.addColorStop(.6,"rgba(226, 205, 156, 0.9)"),a.addColorStop(1,"rgba(212, 186, 134, 0.88)"),e.fillStyle=a,e.fillRect(0,0,r,g);const s=e.createLinearGradient(0,C,0,i);s.addColorStop(0,"rgba(118, 213, 237, 0.85)"),s.addColorStop(1,"rgba(64, 191, 255, 0.9)"),e.fillStyle=s,e.fillRect(0,C,r,i-C);const m=e.createLinearGradient(0,g,0,C);m.addColorStop(0,"rgba(214, 196, 148, 0.82)"),m.addColorStop(1,"rgba(198, 174, 122, 0.78)"),e.fillStyle=m,e.fillRect(0,g,r,C-g),e.strokeStyle="rgba(255, 255, 255, 0.25)",e.lineWidth=2,e.beginPath(),e.moveTo(n,C),e.lineTo(r-n,C),e.stroke(),e.save(),e.textAlign="center",e.fillStyle="rgba(255, 255, 255, 0.7)",e.font='16px "Inter", sans-serif';const l=Math.min(i-12,C+28),v=[`Beach length = ${P(f.beachLengthM,{maximumFractionDigits:0})} m`,q,p];e.fillText(v.join("   •   "),r/2,l),e.restore()}function U(a){const s=r-n*2,l=(C-g)*.25,u=C-l;e.save();const v=e.createLinearGradient(0,u,0,u+l);v.addColorStop(0,"rgba(214, 196, 148, 0.84)"),v.addColorStop(1,"rgba(198, 174, 122, 0.82)"),e.fillStyle=v,e.fillRect(n,u,r-n*2,l),e.restore(),c.loadStates.forEach(d=>{const b=n+d.startPosM/c.beachLength*s,w=n+d.endPosM/c.beachLength*s,y=d.arrivalMin,G=d.cleanedAtMinute;if(G<=0)return;const H=e.createLinearGradient(b,u,w,C);H.addColorStop(0,"rgba(214, 196, 148, 0.82)"),H.addColorStop(.45,"rgba(200, 178, 130, 0.82)"),H.addColorStop(.65,"rgba(170, 198, 188, 0.65)"),H.addColorStop(1,"rgba(118, 213, 237, 0.78)"),e.save(),e.fillStyle=H,e.fillRect(b,u,w-b,l);const k=e.createLinearGradient(0,u+l*.45,0,C);k.addColorStop(0,"rgba(118, 213, 237, 0.35)"),k.addColorStop(1,"rgba(64, 191, 255, 0.55)"),e.fillStyle=k,e.fillRect(b,u+l*.45,w-b,l*.55);const A=C-l*.35,W=l*.12,ae=Math.max(40,(w-b)/4);e.strokeStyle="rgba(255, 255, 255, 0.45)",e.lineWidth=1.4,e.beginPath();for(let R=b;R<=w;R+=4){const j=A+Math.sin((R-b)/ae*Math.PI*2)*W;R===b?e.moveTo(R,j):e.lineTo(R,j)}if(e.stroke(),e.restore(),a>=G)return;let V=1;if(a>y){const R=Math.max(G-y,.01),j=Math.min(Math.max((a-y)/R,0),1);V=Math.max(0,1-j)}if(V<=0)return;e.save(),e.globalAlpha=V;const B=e.createLinearGradient(b,u,w,C);B.addColorStop(0,"rgba(121, 85, 72, 0.92)"),B.addColorStop(.5,"rgba(93, 64, 55, 0.95)"),B.addColorStop(1,"rgba(121, 85, 72, 0.92)"),e.fillStyle=B,e.fillRect(b,u,w-b,l),e.restore()})}function Te(a,s,m=1){if(!a.length)return{position:0,phase:"idle",loadId:null,direction:m,progress:0};const l=a[a.length-1].endMin;if(l===0)return{position:0,phase:"idle",loadId:null,direction:m,progress:0};let u=s%l,v=m;for(let w=0;w<a.length;w+=1){const y=a[w];if(u<y.startMin)return{position:y.startPosM,phase:"idle",loadId:y.loadId,direction:v,progress:0};if(u<=y.endMin||y.endMin===y.startMin){const G=y.endMin-y.startMin,H=G>0?(u-y.startMin)/G:1,k=y.startPosM+(y.endPosM-y.startPosM)*H,A=Math.sign(y.endPosM-y.startPosM);return A!==0&&(v=A),{position:k,phase:y.phase,loadId:y.loadId,direction:v,progress:H}}}const d=a[a.length-1],b=Math.sign(d.endPosM-d.startPosM);return b!==0&&(v=b),{position:d.endPosM,phase:"idle",loadId:d.loadId,direction:v,progress:0}}function ke(){e.strokeStyle="rgba(255, 255, 255, 0.12)",e.lineWidth=1,e.setLineDash([6,8]),c.loadMarkers.forEach(a=>{const s=n+a/c.beachLength*(r-n*2);e.beginPath(),e.moveTo(s,g),e.lineTo(s,C),e.stroke()}),e.setLineDash([])}function Ae(a,s,m,l=1,u=!1){e.save();const v=5,d=28,b=12,w=36,y=14,G=8,H=l>=0?1:-1,k=a-d/2,A=s-v-b,W=k+d,ae=s-v-y+2;let V,B,R,j;if(H>=0?(B=k-G,V=B-w,R=k,j=B):(V=W+G,B=V+w,R=W,j=V),e.fillStyle=m,e.fillRect(k,A,d,b),e.fillStyle="rgba(255, 255, 255, 0.2)",e.fillRect(k+6,A+3,12,b-6),e.fillStyle=m,e.fillRect(V,ae,w,y),u){const ne=y*.9,ye=w*.08,ue=V+ye,be=B-ye,se=ae+2,De=se-ne;e.fillStyle="#8d6e63",e.beginPath(),e.moveTo(ue,se),e.quadraticCurveTo((ue+be)/2,De,be,se),e.lineTo(ue,se),e.closePath(),e.fill()}e.strokeStyle="rgba(255, 255, 255, 0.4)",e.lineWidth=2,e.beginPath(),e.moveTo(R,s-v-2),e.lineTo(j,s-v+1),e.stroke();const he="rgba(15, 32, 52, 0.85)",xe=[{x:k+d*.25,y:s},{x:W-d*.25,y:s},{x:V+w*.2,y:s+1},{x:B-w*.2,y:s+1}];e.fillStyle=he,xe.forEach(ne=>{e.beginPath(),e.arc(ne.x,ne.y,v,0,Math.PI*2),e.fill(),e.fillStyle="rgba(255, 255, 255, 0.25)",e.beginPath(),e.arc(ne.x,ne.y,v*.4,0,Math.PI*2),e.fill(),e.fillStyle=he}),e.fillStyle="rgba(15, 32, 52, 0.85)";const fe=12,Ce=H>=0?W-fe+2:k-2;e.fillRect(Ce,A-6,fe,6),e.beginPath(),H>=0?(e.moveTo(W-d*.7,A),e.lineTo(W-d*.4,A-8),e.lineTo(W-d*.15,A-8),e.lineTo(W-d*.3,A)):(e.moveTo(k+d*.7,A),e.lineTo(k+d*.4,A-8),e.lineTo(k+d*.15,A-8),e.lineTo(k+d*.3,A)),e.closePath(),e.fill();const te=H>=0?W-d*.35:k+d*.35,ce=4,pe=A-ce-2,we=8,ge=6;e.fillStyle="#ffd180",e.beginPath(),e.arc(te,pe,ce,0,Math.PI*2),e.fill(),e.fillStyle="#0f2034",e.fillRect(te-ge/2,pe+ce-1,ge,we);const ie=A+2,Me=10;e.strokeStyle="#cfd8dc",e.lineWidth=2,e.beginPath(),H>=0?(e.moveTo(te-2,ie),e.lineTo(te-2-Me,ie-2)):(e.moveTo(te+2,ie),e.lineTo(te+2+Me,ie-2)),e.stroke(),e.restore()}function Pe(a){const s=[];c.segmentsByAtv.forEach((m,l)=>{const u=E[l]??1,{position:v,phase:d,loadId:b,direction:w,progress:y}=Te(m,a,u);E[l]=w||u||1;const G=Se[l%Se.length],H=n+v/c.beachLength*(r-n*2),k=C-30-l*18,A=.001,W=d==="loading"&&y>=1-A||d==="return"||d==="hold"||d==="approach"||d==="transfer"&&y<1-A;Ae(H,k,G,E[l],W),e.fillStyle=G,e.font='12px "Inter", sans-serif',e.fillText(`ATV ${l+1}`,H-20,k+22);const V=(b?c.loadStates.find(R=>R.loadId===b):void 0)?.crew??"Crew",B=P(f.trailerCapacityM3,{minimumFractionDigits:1,maximumFractionDigits:1});s.push(`ATV ${l+1}: ${d} load ${b??"—"} (${V}, capacity ${B} m³)`)}),o.textContent=s.join("  •  ")}function ve(a){if(Y()){M=null;return}L===null&&(L=a);const s=Math.max((a-L)/1e3,0);L=a;const m=Math.max(c.totalMinutes,1);I+=s*x,I>m&&(I=m);const l=I;if(K(),U(l),ke(),Pe(l),J(l),_(l),ee(l),I>=m){S=!0,M=null,N();return}M=requestAnimationFrame(ve)}return Q(),{update:de,updateSpeed:O,toggleManualPause:oe,isPaused:Y,onStateChange:Z}}function Ge(t,h,o){if(h.atvSpeedKmh<=0){t.textContent="Increase ATV speed above zero to animate the transport cycle.";return}if(o.trailersPerDay<=0||o.requiredAtvs<=0){t.textContent="Adjust inputs to produce a non-zero workload for ATVs.";return}t.textContent=""}function Ue(){const t={...me},h={...Ee},{canvas:o,derivedList:e,status:r,timeLabel:i,toggleButton:n,detailsLabel:c,derivedSection:f,derivedToggle:x,atvOverrideInput:E,atvOverrideHint:D}=Ne(),S=$e(o,i,c);let I=!1;function L(){const M=qe(t),T=h.atvOverrideCount>0?h.atvOverrideCount:null,F=Re(t,M,{overrideAtvCount:T}),q={totalMinutes:F.totalMinutes,integerAtvs:F.numAtvs,overrideAtvs:F.overrideAtvCount!=null,computedIntegerAtvs:M.integerAtvs};if(Be(e,M,q),Ge(r,t,M),S.update(F,t),D){const p=P(M.integerAtvs,{maximumFractionDigits:0});if(F.overrideAtvCount!=null){const g=P(F.overrideAtvCount,{maximumFractionDigits:0});D.textContent=`Manual override active (${g} ATVs, computed ${p}).`}else D.textContent=`Using computed requirement (${p} ATVs).`}}if(Oe(t,(M,T)=>{t[M]=T,L()}),We(h,M=>{S.updateSpeed(M)}),n){const M=({paused:T})=>{n.textContent=T?"Run":"Pause"};S.onStateChange(M),n.addEventListener("click",()=>{const T=S.isPaused();S.toggleManualPause(!T)})}Ve(h,L,{input:E}),x.addEventListener("click",()=>{I=!I,f.classList.toggle("collapsed",I),x.textContent=I?"Show metrics":"Hide metrics"}),L()}Ue();
