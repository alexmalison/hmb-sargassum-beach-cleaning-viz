(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))e(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&e(n)}).observe(document,{childList:!0,subtree:!0});function a(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function e(o){if(o.ep)return;o.ep=!0;const r=a(o);fetch(o.href,r)}})();const ae=52/12,ee=1,Z=["#64ffda","#90caf9","#ffd54f","#ff8a80","#ce93d8","#80cbc4"],X={seasonLengthMonths:5,sargassumVolumeM3:7183.15,workDaysPerWeek:6,workHoursPerDay:5,trailerCapacityM3:2,timePerWorkerLoadM3Minutes:25,atvSpeedKmh:3,beachLengthM:600,loadTransferTimeMinutes:11,loadingMode:"single"},re={minutesPerSecond:ee,atvOverrideEnabled:!1,atvOverrideCount:null},ie=[{key:"seasonLengthMonths",label:"Length of season (months)",min:1,max:12,step:.1,section:"season"},{key:"sargassumVolumeM3",label:"Estimated Sargassum volume (m³)",min:0,max:2e4,step:10,section:"season"},{key:"workDaysPerWeek",label:"Working days per week",min:1,max:7,step:1,section:"season"},{key:"workHoursPerDay",label:"Working hours per day",min:1,max:24,step:.5,section:"season"},{key:"trailerCapacityM3",label:"Trailer capacity (m³)",min:.1,max:5,step:.1,section:"labor"},{key:"timePerWorkerLoadM3Minutes",label:"Time to load 1 m³ per worker (minutes)",min:1,max:60,step:1,section:"labor"},{key:"atvSpeedKmh",label:"ATV speed (km/h)",min:0,max:15,step:.1,section:"atv"},{key:"beachLengthM",label:"Beach length (m)",min:60,max:1500,step:10,section:"atv"},{key:"loadTransferTimeMinutes",label:"Load transfer wait (minutes)",min:0,max:60,step:1,section:"atv"},{key:"loadingMode",label:"Loading mode",type:"select",options:[{value:"single",label:"Whole crew from west"},{value:"split",label:"Split crews west/east"}],section:"labor"}],se=[{key:"avgDailyRemoval",label:"Average daily removal (m³)",format:t=>A(t,{maximumFractionDigits:2})},{key:"avgHourlyRemoval",label:"Average hourly removal (m³)",format:t=>A(t,{maximumFractionDigits:2})},{key:"trailersPerDay",label:"Trailer loads per day",format:t=>A(t,{maximumFractionDigits:2})},{key:"timeWorkerLoadHours",label:"Worker hours to load trailers (per day)",format:t=>A(t,{maximumFractionDigits:2})},{key:"requiredBeachWorkers",label:"Beach workers required (load crew)",format:t=>A(t,{maximumFractionDigits:2})},{key:"timeToLoadTrailerMinutes",label:"Time to load trailer (minutes)",format:t=>A(t,{maximumFractionDigits:2})},{key:"timeToLoadingAreaMinutes",label:"Travel to loading area (minutes)",format:t=>A(t,{maximumFractionDigits:2})},{key:"totalAtvTimePerLoadMinutes",label:"ATV cycle time per load (minutes)",format:t=>A(t,{maximumFractionDigits:2})},{key:"timePerAtvHours",label:"ATV duty time (hours/day)",format:t=>A(t,{maximumFractionDigits:2})},{key:"requiredAtvs",label:"Required # of ATVs",format:t=>A(t,{maximumFractionDigits:2})},{key:"requiredAtvDrivers",label:"Required # of ATV drivers",format:t=>A(t,{maximumFractionDigits:2})},{key:"requiredUnloadWorkers",label:"Required # of unload workers",format:t=>A(t,{maximumFractionDigits:2})},{key:"integerLoads",label:"Loads simulated today",format:t=>A(t,{maximumFractionDigits:0})},{key:"integerAtvs",label:"ATVs in rotation",format:t=>A(t,{maximumFractionDigits:0})},{key:"totalMinutes",label:"Day cycle duration (minutes)",format:t=>A(t,{maximumFractionDigits:1}),note:"Full rotation for busiest ATV within the day"}];function A(t,s={}){return Number.isFinite(t)?new Intl.NumberFormat("en-US",{maximumFractionDigits:2,minimumFractionDigits:0,...s}).format(t):"—"}function le(t){const s=t.seasonLengthMonths*ae,a=s*t.workDaysPerWeek,e=a>0?t.sargassumVolumeM3/a:0,o=t.workHoursPerDay>0?e/t.workHoursPerDay:0,r=t.trailerCapacityM3>0?e/t.trailerCapacityM3:0,i=t.timePerWorkerLoadM3Minutes*e/60,l=t.workHoursPerDay>0?i/t.workHoursPerDay:0,g=l>0?t.trailerCapacityM3*t.timePerWorkerLoadM3Minutes/l:0,P=t.atvSpeedKmh*1e3/60,F=t.beachLengthM/2,D=P>0?F/P:0,k=D,I=D+g+k,S=I*r/60,N=t.workHoursPerDay>0?S/t.workHoursPerDay:0,O=N,q=t.workHoursPerDay>0?r*g/60/t.workHoursPerDay:0,c=Math.max(1,Math.round(r)),f=Math.max(1,Math.ceil(N));return{workingWeeks:s,workingDaysSeason:a,avgDailyRemoval:e,avgHourlyRemoval:o,trailersPerDay:r,timeWorkerLoadHours:i,requiredBeachWorkers:l,timeToLoadTrailerMinutes:g,timeToLoadingAreaMinutes:D,totalAtvTimePerLoadMinutes:I,timePerAtvHours:S,requiredAtvs:N,requiredAtvDrivers:O,requiredUnloadWorkers:q,integerLoads:c,integerAtvs:f}}function de(t,s,a={}){const e=s.integerLoads,o=Number(a.overrideAtvCount),r=Number.isFinite(o)&&o>0?Math.max(1,Math.round(o)):null,n=r??s.integerAtvs,i=[],l=[],g=Array.from({length:n},()=>[]),P=Array.from({length:n},()=>0),F=Math.max(0,t.loadTransferTimeMinutes??0);if(e<=0||n<=0)return{loadMarkers:i,segmentsByAtv:g,totalMinutes:0,numLoads:0,numAtvs:n,loadStates:l};const D=t.beachLengthM/e,k=s.timeToLoadTrailerMinutes,I=t.atvSpeedKmh>0?t.atvSpeedKmh*1e3/60:0;let S=0,N=0;const O=Array.from({length:e},(c,f)=>{const H=f*D,B=(f+1)*D,W=H+D/2;return{loadIndex:f+1,startPosM:H,endPosM:B,centerPosM:W}});i.push(...O.map(c=>c.centerPosM).sort((c,f)=>c-f));let q;if((t.loadingMode??"single")==="split"){q=[];let c=0,f=e-1,H=!0;for(;c<=f;)H?(q.push({...O[c],crew:"West crew"}),c+=1):(q.push({...O[f],crew:"East crew"}),f-=1),H=!H;q.length&&e%2===1&&(q[q.length-1].crew="Both crews")}else q=O.map(c=>({...c,crew:"Main crew"}));return q.forEach(c=>{const f=c.centerPosM,H=c.startPosM,B=c.endPosM,W=Math.min(f,5),d=I>0?f/I:0,v=I>0?Math.max(f-W,0)/I:0,w=I>0?W/I:0;let m=0,E=P[0];for(let x=1;x<n;x+=1)P[x]<E-Number.EPSILON&&(E=P[x],m=x);const y=P[m],u=y+d,T=u+k,M=T+v,p=M+w;let C=0,L=p;L<S&&(C=S-L,L=S);const b=L+F,h=x=>{g[m].push(x),N=Math.max(N,x.endMin)};h({atvId:m,loadId:c.loadIndex,phase:"outbound",startMin:y,endMin:u,startPosM:0,endPosM:f}),h({atvId:m,loadId:c.loadIndex,phase:"loading",startMin:u,endMin:T,startPosM:f,endPosM:f}),v>0?h({atvId:m,loadId:c.loadIndex,phase:"return",startMin:T,endMin:M,startPosM:f,endPosM:W}):h({atvId:m,loadId:c.loadIndex,phase:"return",startMin:T,endMin:T,startPosM:f,endPosM:W}),C>0&&h({atvId:m,loadId:c.loadIndex,phase:"hold",startMin:M,endMin:M+C,startPosM:W,endPosM:W}),h({atvId:m,loadId:c.loadIndex,phase:"approach",startMin:M+C,endMin:L,startPosM:W,endPosM:0}),h({atvId:m,loadId:c.loadIndex,phase:"transfer",startMin:L,endMin:b,startPosM:0,endPosM:0}),P[m]=b,S=b,l.push({startPosM:H,endPosM:B,arrivalMin:u,cleanedAtMinute:T,crew:c.crew,loadId:c.loadIndex})}),{loadMarkers:i,segmentsByAtv:g.map(c=>c.sort((f,H)=>f.startMin-H.startMin)),totalMinutes:N,numLoads:e,numAtvs:n,loadStates:l,overrideAtvCount:r}}function ce(){const t=document.querySelector("#app");return t.innerHTML=`
    <section class="controls">
      <div class="control-header">
        <h1>HMB Beach Cleanup Model</h1>
        <p>Set the season-scale inputs from the spreadsheet; the animation shows how one workday plays out with those assumptions.</p>
      </div>
      <div class="controls-groups">
        <div class="control-group">
          <h2>Season Parameters</h2>
          <div class="input-grid" data-section="season"></div>
        </div>
        <div class="control-group">
          <h2>Trailer &amp; Labor</h2>
          <div class="input-grid" data-section="labor"></div>
        </div>
        <div class="control-group">
          <h2>ATV Operations</h2>
          <div class="input-grid" data-section="atv"></div>
          <div class="field override-field">
            <label for="atvOverrideToggle">Override # of ATVs</label>
            <div class="override-controls">
              <select id="atvOverrideToggle">
                <option value="no">No</option>
                <option value="yes">Yes</option>
              </select>
              <input
                type="number"
                id="atvOverrideInput"
                min="1"
                step="1"
                placeholder="Manual count"
              />
            </div>
            <span class="field-note" id="atvOverrideHint"></span>
          </div>
        </div>
      </div>
      <div class="derived-section" id="derivedSection">
        <div class="derived-header">
          <h2>Derived Metrics</h2>
          <button type="button" class="toggle-derived" id="toggleDerived">Hide metrics</button>
        </div>
        <ul class="metrics-list" id="derivedMetrics"></ul>
      </div>
      <div class="status" id="status"></div>
    </section>
    <section class="simulation">
      <div class="canvas-container">
        <canvas id="beachCanvas" width="960" height="520"></canvas>
        <div class="canvas-overlay canvas-overlay-top">
          <span id="timeLabel" class="sim-time">Sim time 00:00</span>
          <div class="speed-slider">
            <input type="range" id="speedSlider" min="1" max="60" step="1" />
            <span id="speedValue"></span>
          </div>
        </div>
        <div class="canvas-overlay canvas-overlay-bottom">
          <span id="detailsLabel"></span>
        </div>
      </div>
    </section>
  `,{canvas:document.querySelector("#beachCanvas"),derivedList:document.querySelector("#derivedMetrics"),status:document.querySelector("#status"),timeLabel:document.querySelector("#timeLabel"),detailsLabel:document.querySelector("#detailsLabel"),derivedSection:document.querySelector("#derivedSection"),derivedToggle:document.querySelector("#toggleDerived"),speedSlider:document.querySelector("#speedSlider"),speedValue:document.querySelector("#speedValue"),atvOverrideToggle:document.querySelector("#atvOverrideToggle"),atvOverrideInput:document.querySelector("#atvOverrideInput"),atvOverrideHint:document.querySelector("#atvOverrideHint")}}function ue(t,s){ie.forEach(a=>{const e=document.querySelector(`[data-section="${a.section}"]`);if(!e)return;const o=document.createElement("div");o.className="field";const r=document.createElement("label");r.textContent=a.label;let n;if(a.type==="select"&&Array.isArray(a.options))n=document.createElement("select"),a.options.forEach(i=>{const l=document.createElement("option");l.value=String(i.value),l.textContent=i.label,n.append(l)}),n.value=String(t[a.key]),n.addEventListener("change",()=>{const i=n.value,l=Number(i),P=a.options.every(F=>typeof F.value=="number")&&Number.isFinite(l)?l:i;s(a.key,P)});else{n=document.createElement("input");const i=a.type==="text"?"text":"number";if(n.type=i,a.key==="trailerCapacityM3"?n.value=Number(t[a.key]??0).toFixed(1):n.value=String(t[a.key]??""),a.placeholder&&(n.placeholder=a.placeholder),i==="number"){a.min!==void 0&&(n.min=String(a.min)),a.max!==void 0&&(n.max=String(a.max)),a.step!==void 0&&(n.step=String(a.step));const l=()=>{const g=Number(n.value);Number.isFinite(g)&&(s(a.key,g),a.key==="trailerCapacityM3"&&(n.value=g.toFixed(1)))};a.key==="trailerCapacityM3"?(n.addEventListener("change",l),n.addEventListener("blur",l)):n.addEventListener("input",l)}else n.addEventListener("input",()=>{s(a.key,n.value)})}o.append(r,n),e.append(o)})}function me(t,s){const a=document.querySelector("#speedSlider"),e=document.querySelector("#speedValue");if(!a||!e)return;const o=r=>{const n=Math.max(1,Math.round(r));e.textContent=`1 s → ${n} min`,s(r)};a.value=String(t.minutesPerSecond),o(t.minutesPerSecond),a.addEventListener("input",()=>{const r=Number(a.value);!Number.isFinite(r)||r<=0||(t.minutesPerSecond=r,o(r))})}function ve(t,s,a={}){const e=a.toggle??document.querySelector("#atvOverrideToggle"),o=a.input??document.querySelector("#atvOverrideInput");if(!e||!o)return;const r=i=>{o.disabled=!i,i||(t.atvOverrideCount=null,o.value="")};e.value=t.atvOverrideEnabled?"yes":"no",t.atvOverrideCount!=null&&(o.value=String(t.atvOverrideCount)),r(t.atvOverrideEnabled),e.addEventListener("change",()=>{const i=e.value==="yes";if(t.atvOverrideEnabled=i,i&&!o.value){const l=Number(e.dataset.computedAtvs);Number.isFinite(l)&&l>0&&(t.atvOverrideCount=Math.max(1,Math.round(l)),o.value=String(t.atvOverrideCount))}r(i),s()});const n=()=>{if(!t.atvOverrideEnabled)return;const i=Number(o.value);if(!Number.isFinite(i)||i<=0){t.atvOverrideCount=null,o.value="",s();return}t.atvOverrideCount=Math.round(i),o.value=String(t.atvOverrideCount),s()};o.addEventListener("blur",n),o.addEventListener("keydown",i=>{i.key==="Enter"&&n()})}function pe(t,s,a){t.innerHTML="",se.forEach(e=>{let o;e.key==="totalMinutes"?o=a.totalMinutes:e.key==="integerAtvs"?o=a.integerAtvs??s.integerAtvs:o=s[e.key];const r=document.createElement("li");r.className="metric-card";const n=document.createElement("span");n.className="label",n.textContent=e.label;const i=document.createElement("span");if(i.className="value",i.textContent=e.format?e.format(o):String(o),r.append(n,i),e.key==="integerAtvs"&&a.overrideAtvs){const l=document.createElement("span");l.className="note";const g=A(a.computedIntegerAtvs,{maximumFractionDigits:0});l.textContent=`Manual override active (computed ${g})`,r.append(l)}else if(e.note){const l=document.createElement("span");l.className="note",l.textContent=e.note,r.append(l)}t.append(r)})}function he(t,s,a){const e=t.getContext("2d"),o=t.width,r=t.height,n=70;let i={loadMarkers:[],loadStates:[],segmentsByAtv:[],totalMinutes:1,numAtvs:0,beachLength:X.beachLengthM},l={...X},g=null,P=ee,F=[];const D=r*.3,k=r*.7;function I(d,v){i={...d,beachLength:v.beachLengthM},l={...v},g=null,F=new Array(i.numAtvs).fill(1)}function S(d){P=d}function N(d){const v=Math.floor(d/60),w=Math.floor(d%60),m=Math.floor(d%1*60),E=`${String(v).padStart(2,"0")}:${String(w).padStart(2,"0")}:${String(m).padStart(2,"0")}`;s&&(s.textContent=`Sim time ${E}`)}function O(){e.fillStyle="#0f2034",e.fillRect(0,0,o,r);const d=e.createLinearGradient(0,D,0,k);d.addColorStop(0,"rgba(230, 254, 255, 0.08)"),d.addColorStop(.5,"rgba(110, 192, 230, 0.18)"),d.addColorStop(1,"rgba(255, 255, 255, 0.05)"),e.fillStyle=d,e.fillRect(n,D,o-n*2,k-D),e.strokeStyle="rgba(255, 255, 255, 0.25)",e.lineWidth=2,e.beginPath(),e.moveTo(n,k),e.lineTo(o-n,k),e.stroke(),e.save(),e.textAlign="center",e.fillStyle="rgba(255, 255, 255, 0.7)",e.font='16px "Inter", sans-serif';const v=Math.min(r-12,k+28),w=A(l.beachLengthM,{maximumFractionDigits:0});e.fillText(`Beach length = ${w} m`,o/2,v),e.restore()}function q(d){const v=o-n*2,m=(k-D)*.25,E=k-m;i.loadStates.forEach(y=>{const u=n+y.startPosM/i.beachLength*v,T=n+y.endPosM/i.beachLength*v,M=y.arrivalMin,p=y.cleanedAtMinute;if(p<=0||d>=p)return;let C=1;if(d>M){const b=Math.max(p-M,.01),h=Math.min(Math.max((d-M)/b,0),1);C=Math.max(0,1-h)}e.save(),e.globalAlpha=C;const L=e.createLinearGradient(u,E,T,k);L.addColorStop(0,"rgba(121, 85, 72, 0.92)"),L.addColorStop(.5,"rgba(93, 64, 55, 0.95)"),L.addColorStop(1,"rgba(121, 85, 72, 0.92)"),e.fillStyle=L,e.fillRect(u,E,T-u,m),e.restore()})}function c(d,v,w=1){if(!d.length)return{position:0,phase:"idle",loadId:null,direction:w,progress:0};const m=d[d.length-1].endMin;if(m===0)return{position:0,phase:"idle",loadId:null,direction:w,progress:0};let E=v%m,y=w;for(let M=0;M<d.length;M+=1){const p=d[M];if(E<p.startMin)return{position:p.startPosM,phase:"idle",loadId:p.loadId,direction:y,progress:0};if(E<=p.endMin||p.endMin===p.startMin){const C=p.endMin-p.startMin,L=C>0?(E-p.startMin)/C:1,b=p.startPosM+(p.endPosM-p.startPosM)*L,h=Math.sign(p.endPosM-p.startPosM);return h!==0&&(y=h),{position:b,phase:p.phase,loadId:p.loadId,direction:y,progress:L}}}const u=d[d.length-1],T=Math.sign(u.endPosM-u.startPosM);return T!==0&&(y=T),{position:u.endPosM,phase:"idle",loadId:u.loadId,direction:y,progress:0}}function f(){e.strokeStyle="rgba(255, 255, 255, 0.12)",e.lineWidth=1,e.setLineDash([6,8]),i.loadMarkers.forEach(d=>{const v=n+d/i.beachLength*(o-n*2);e.beginPath(),e.moveTo(v,D),e.lineTo(v,k),e.stroke()}),e.setLineDash([])}function H(d,v,w,m=1,E=!1){e.save();const y=5,u=28,T=12,M=36,p=14,C=8,L=m>=0?1:-1,b=d-u/2,h=v-y-T,x=b+u,K=v-y-p+2;let V,R,_,Y;if(L>=0?(R=b-C,V=R-M,_=b,Y=R):(V=x+C,R=V+M,_=x,Y=V),e.fillStyle=w,e.fillRect(b,h,u,T),e.fillStyle="rgba(255, 255, 255, 0.2)",e.fillRect(b+6,h+3,12,T-6),e.fillStyle=w,e.fillRect(V,K,M,p),E){const $=p*.9,J=M*.08,G=V+J,Q=R-J,U=K+2,ne=U-$;e.fillStyle="#8d6e63",e.beginPath(),e.moveTo(G,U),e.quadraticCurveTo((G+Q)/2,ne,Q,U),e.lineTo(G,U),e.closePath(),e.fill()}e.strokeStyle="rgba(255, 255, 255, 0.4)",e.lineWidth=2,e.beginPath(),e.moveTo(_,v-y-2),e.lineTo(Y,v-y+1),e.stroke();const j="rgba(15, 32, 52, 0.85)",te=[{x:b+u*.25,y:v},{x:x-u*.25,y:v},{x:V+M*.2,y:v+1},{x:R-M*.2,y:v+1}];e.fillStyle=j,te.forEach($=>{e.beginPath(),e.arc($.x,$.y,y,0,Math.PI*2),e.fill(),e.fillStyle="rgba(255, 255, 255, 0.25)",e.beginPath(),e.arc($.x,$.y,y*.4,0,Math.PI*2),e.fill(),e.fillStyle=j}),e.fillStyle="rgba(15, 32, 52, 0.85)";const z=12,oe=L>=0?x-z+2:b-2;e.fillRect(oe,h-6,z,6),e.beginPath(),L>=0?(e.moveTo(x-u*.7,h),e.lineTo(x-u*.4,h-8),e.lineTo(x-u*.15,h-8),e.lineTo(x-u*.3,h)):(e.moveTo(b+u*.7,h),e.lineTo(b+u*.4,h-8),e.lineTo(b+u*.15,h-8),e.lineTo(b+u*.3,h)),e.closePath(),e.fill(),e.restore()}function B(d){const v=[];i.segmentsByAtv.forEach((w,m)=>{const E=F[m]??1,{position:y,phase:u,loadId:T,direction:M,progress:p}=c(w,d,E);F[m]=M||E||1;const C=Z[m%Z.length],L=n+y/i.beachLength*(o-n*2),b=k-30-m*18,h=.001,x=u==="loading"&&p>=1-h||u==="return"||u==="hold"||u==="approach"||u==="transfer"&&p<1-h;H(L,b,C,F[m],x),e.fillStyle=C,e.font='12px "Inter", sans-serif',e.fillText(`ATV ${m+1}`,L-20,b+22);const V=(T?i.loadStates.find(_=>_.loadId===T):void 0)?.crew??"Crew",R=A(l.trailerCapacityM3,{minimumFractionDigits:1,maximumFractionDigits:1});v.push(`ATV ${m+1}: ${u} load ${T??"—"} (${V}, capacity ${R} m³)`)}),a.textContent=v.join("  •  ")}function W(d){g||(g=d);const v=(d-g)/1e3,w=Math.max(i.totalMinutes,1),m=v*P%w;O(),q(m),f(),B(m),N(m),requestAnimationFrame(W)}return requestAnimationFrame(W),{update:I,updateSpeed:S}}function fe(t,s,a){if(s.atvSpeedKmh<=0){t.textContent="Increase ATV speed above zero to animate the transport cycle.";return}if(a.trailersPerDay<=0||a.requiredAtvs<=0){t.textContent="Adjust inputs to produce a non-zero workload for ATVs.";return}t.textContent=""}function ge(){const t={...X},s={...re},{canvas:a,derivedList:e,status:o,timeLabel:r,detailsLabel:n,derivedSection:i,derivedToggle:l,atvOverrideToggle:g,atvOverrideInput:P,atvOverrideHint:F}=ce(),D=he(a,r,n);let k=!1;function I(){const S=le(t),N=s.atvOverrideEnabled?s.atvOverrideCount:null,O=de(t,S,{overrideAtvCount:N}),q={totalMinutes:O.totalMinutes,integerAtvs:O.numAtvs,overrideAtvs:O.overrideAtvCount!=null,computedIntegerAtvs:S.integerAtvs};if(pe(e,S,q),fe(o,t,S),D.update(O,t),F){const c=A(S.integerAtvs,{maximumFractionDigits:0});if(O.overrideAtvCount!=null){const f=A(O.overrideAtvCount,{maximumFractionDigits:0});F.textContent=`Manual override active (${f} ATVs, computed ${c}).`}else F.textContent=`Using computed requirement (${c} ATVs).`}if(g&&(g.dataset.computedAtvs=String(S.integerAtvs)),P){const c=A(S.integerAtvs,{maximumFractionDigits:0});(!s.atvOverrideEnabled||s.atvOverrideCount==null)&&(P.placeholder=`Computed ${c}`)}}ue(t,(S,N)=>{t[S]=N,I()}),me(s,S=>{D.updateSpeed(S)}),ve(s,I,{toggle:g,input:P}),l.addEventListener("click",()=>{k=!k,i.classList.toggle("collapsed",k),l.textContent=k?"Show metrics":"Hide metrics"}),I()}ge();
