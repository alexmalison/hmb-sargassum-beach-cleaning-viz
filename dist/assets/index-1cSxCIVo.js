(function(){const v=document.createElement("link").relList;if(v&&v.supports&&v.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const e of s)if(e.type==="childList")for(const a of e.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function o(s){const e={};return s.integrity&&(e.integrity=s.integrity),s.referrerPolicy&&(e.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?e.credentials="include":s.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function i(s){if(s.ep)return;s.ep=!0;const e=o(s);fetch(s.href,e)}})();const De=52/12,Le=1,Se=["#64ffda","#90caf9","#ffd54f","#ff8a80","#ce93d8","#80cbc4"],me={seasonLengthMonths:5,sargassumVolumeM3:7183.15,workDaysPerWeek:6,workHoursPerDay:5,trailerCapacityM3:2,timePerWorkerLoadM3Minutes:25,atvSpeedKmh:3,beachLengthM:600,loadTransferTimeMinutes:11,loadingMode:"single"},Ee={minutesPerSecond:Le,atvOverrideCount:0},Ie=[{key:"seasonLengthMonths",label:"Length of season (months)",min:1,max:12,step:.1,section:"season"},{key:"sargassumVolumeM3",label:"Estimated Sargassum volume (m³)",min:0,max:2e4,step:10,section:"season"},{key:"workDaysPerWeek",label:"Working days per week",min:1,max:7,step:1,section:"season"},{key:"workHoursPerDay",label:"Working hours per day",min:1,max:24,step:.5,section:"season"},{key:"trailerCapacityM3",label:"Trailer capacity (m³)",min:.1,max:5,step:.1,section:"labor"},{key:"timePerWorkerLoadM3Minutes",label:"Time to load 1 m³ per worker (minutes)",min:1,max:60,step:1,section:"labor"},{key:"atvSpeedKmh",label:"ATV speed (km/h)",min:0,max:15,step:.1,section:"atv"},{key:"beachLengthM",label:"Beach length (m)",min:60,max:1500,step:10,section:"atv"},{key:"loadTransferTimeMinutes",label:"Load transfer wait (minutes)",min:0,max:60,step:1,section:"atv"},{key:"loadingMode",label:"Loading mode",type:"select",options:[{value:"single",label:"Whole crew from west"},{value:"split",label:"Split crews west/east"}],section:"labor"}],Fe=[{key:"avgDailyRemoval",label:"Average daily removal (m³)",format:t=>x(t,{maximumFractionDigits:2})},{key:"avgHourlyRemoval",label:"Average hourly removal (m³)",format:t=>x(t,{maximumFractionDigits:2})},{key:"trailersPerDay",label:"Trailer loads per day",format:t=>x(t,{maximumFractionDigits:2})},{key:"timeWorkerLoadHours",label:"Worker hours to load trailers (per day)",format:t=>x(t,{maximumFractionDigits:2})},{key:"requiredBeachWorkers",label:"Beach workers required (load crew)",format:t=>x(t,{maximumFractionDigits:2})},{key:"timeToLoadTrailerMinutes",label:"Time to load trailer (minutes)",format:t=>x(t,{maximumFractionDigits:2})},{key:"timeToLoadingAreaMinutes",label:"Travel to loading area (minutes)",format:t=>x(t,{maximumFractionDigits:2})},{key:"totalAtvTimePerLoadMinutes",label:"ATV cycle time per load (minutes)",format:t=>x(t,{maximumFractionDigits:2})},{key:"timePerAtvHours",label:"ATV duty time (hours/day)",format:t=>x(t,{maximumFractionDigits:2})},{key:"requiredAtvs",label:"Required # of ATVs",format:t=>x(t,{maximumFractionDigits:2})},{key:"requiredAtvDrivers",label:"Required # of ATV drivers",format:t=>x(t,{maximumFractionDigits:2})},{key:"requiredUnloadWorkers",label:"Required # of unload workers",format:t=>x(t,{maximumFractionDigits:2})},{key:"integerLoads",label:"Loads simulated today",format:t=>x(t,{maximumFractionDigits:0})},{key:"integerAtvs",label:"ATVs in rotation",format:t=>x(t,{maximumFractionDigits:0})},{key:"totalMinutes",label:"Day cycle duration (minutes)",format:t=>x(t,{maximumFractionDigits:1}),note:"Full rotation for busiest ATV within the day"}];function x(t,v={}){return Number.isFinite(t)?new Intl.NumberFormat("en-US",{maximumFractionDigits:2,minimumFractionDigits:0,...v}).format(t):"—"}function He(t){const v=t.seasonLengthMonths*De,o=v*t.workDaysPerWeek,i=o>0?t.sargassumVolumeM3/o:0,s=t.workHoursPerDay>0?i/t.workHoursPerDay:0,e=t.trailerCapacityM3>0?i/t.trailerCapacityM3:0,b=t.timePerWorkerLoadM3Minutes*i/60,l=t.workHoursPerDay>0?b/t.workHoursPerDay:0,f=l>0?t.trailerCapacityM3*t.timePerWorkerLoadM3Minutes/l:0,C=t.atvSpeedKmh*1e3/60,N=t.beachLengthM/2,H=C>0?N/C:0,D=H,T=H+f+D,A=T*e/60,P=t.workHoursPerDay>0?A/t.workHoursPerDay:0,M=P,S=t.workHoursPerDay>0?e*f/60/t.workHoursPerDay:0,c=Math.max(1,Math.round(e)),p=Math.max(1,Math.ceil(P));return{workingWeeks:v,workingDaysSeason:o,avgDailyRemoval:i,avgHourlyRemoval:s,trailersPerDay:e,timeWorkerLoadHours:b,requiredBeachWorkers:l,timeToLoadTrailerMinutes:f,timeToLoadingAreaMinutes:H,totalAtvTimePerLoadMinutes:T,timePerAtvHours:A,requiredAtvs:P,requiredAtvDrivers:M,requiredUnloadWorkers:S,integerLoads:c,integerAtvs:p}}function qe(t,v,o={}){const i=v.integerLoads,s=Number(o.overrideAtvCount),e=Number.isFinite(s)&&s>0?Math.max(1,Math.round(s)):null,a=e??v.integerAtvs,b=[],l=[],f=Array.from({length:a},()=>[]),C=Array.from({length:a},()=>0),N=Math.max(0,t.loadTransferTimeMinutes??0);if(i<=0||a<=0)return{loadMarkers:b,segmentsByAtv:f,totalMinutes:0,numLoads:0,numAtvs:a,loadStates:l};const H=t.beachLengthM/i,D=v.timeToLoadTrailerMinutes,T=t.atvSpeedKmh>0?t.atvSpeedKmh*1e3/60:0;let A=0,P=0;const M=Array.from({length:i},(c,p)=>{const L=p*H,B=(p+1)*H,O=L+H/2;return{loadIndex:p+1,startPosM:L,endPosM:B,centerPosM:O}});b.push(...M.map(c=>c.centerPosM).sort((c,p)=>c-p));let S;if((t.loadingMode??"single")==="split"){S=[];let c=0,p=i-1,L=!0;for(;c<=p;)L?(S.push({...M[c],crew:"West crew"}),c+=1):(S.push({...M[p],crew:"East crew"}),p-=1),L=!L;S.length&&i%2===1&&(S[S.length-1].crew="Both crews")}else S=M.map(c=>({...c,crew:"Main crew"}));return S.forEach(c=>{const p=c.centerPosM,L=c.startPosM,B=c.endPosM,O=Math.min(p,5),Z=T>0?p/T:0,ne=T>0?Math.max(p-O,0)/T:0,se=T>0?O/T:0;let q=0,K=C[0];for(let V=1;V<a;V+=1)C[V]<K-Number.EPSILON&&(K=C[V],q=V);const oe=C[q],z=oe+Z,Y=z+D,X=Y+ne,ae=X+se;let j=0,$=ae;$<A&&(j=A-$,$=A);const ee=$+N,U=V=>{f[q].push(V),P=Math.max(P,V.endMin)};U({atvId:q,loadId:c.loadIndex,phase:"outbound",startMin:oe,endMin:z,startPosM:0,endPosM:p}),U({atvId:q,loadId:c.loadIndex,phase:"loading",startMin:z,endMin:Y,startPosM:p,endPosM:p}),ne>0?U({atvId:q,loadId:c.loadIndex,phase:"return",startMin:Y,endMin:X,startPosM:p,endPosM:O}):U({atvId:q,loadId:c.loadIndex,phase:"return",startMin:Y,endMin:Y,startPosM:p,endPosM:O}),j>0&&U({atvId:q,loadId:c.loadIndex,phase:"hold",startMin:X,endMin:X+j,startPosM:O,endPosM:O}),U({atvId:q,loadId:c.loadIndex,phase:"approach",startMin:X+j,endMin:$,startPosM:O,endPosM:0}),U({atvId:q,loadId:c.loadIndex,phase:"transfer",startMin:$,endMin:ee,startPosM:0,endPosM:0}),C[q]=ee,A=ee,l.push({startPosM:L,endPosM:B,arrivalMin:z,cleanedAtMinute:Y,crew:c.crew,loadId:c.loadIndex})}),{loadMarkers:b,segmentsByAtv:f.map(c=>c.sort((p,L)=>p.startMin-L.startMin)),totalMinutes:P,numLoads:i,numAtvs:a,loadStates:l,overrideAtvCount:e}}function Ne(){const t=document.querySelector("#app");return t.innerHTML=`
    <section class="controls">
      <div class="control-header">
        <h1>HMB Beach Cleanup Model</h1>
        <p>Set the season-scale inputs from the spreadsheet; the animation shows how one workday plays out with those assumptions.</p>
      </div>
      <div class="controls-groups">
        <div class="control-group">
          <h2>Season Parameters</h2>
          <div class="input-grid" data-section="season"></div>
        </div>
        <div class="control-group">
          <h2>Trailer &amp; Labor</h2>
          <div class="input-grid" data-section="labor"></div>
        </div>
        <div class="control-group">
          <h2>ATV Operations</h2>
          <div class="input-grid" data-section="atv"></div>
          <div class="field override-field">
            <label for="atvOverrideInput">Override # of ATVs</label>
            <input
              type="number"
              id="atvOverrideInput"
              min="0"
              step="1"
              placeholder="0 for auto"
            />
            <span class="field-note" id="atvOverrideHint"></span>
          </div>
        </div>
      </div>
      <div class="derived-section" id="derivedSection">
        <div class="derived-header">
          <h2>Derived Metrics</h2>
          <button type="button" class="toggle-derived" id="toggleDerived">Hide metrics</button>
        </div>
        <ul class="metrics-list" id="derivedMetrics"></ul>
      </div>
      <div class="status" id="status"></div>
    </section>
    <section class="simulation">
      <div class="canvas-container">
        <canvas id="beachCanvas" width="960" height="520"></canvas>
        <div class="canvas-overlay canvas-overlay-top">
          <div class="sim-controls">
            <button type="button" id="toggleRun" class="toggle-run">Pause</button>
            <span id="timeLabel" class="sim-stat">Sim time 00:00:00</span>
            <span id="loadedLabel" class="sim-stat">Loaded 0.0 m³</span>
            <span id="idleLabel" class="sim-stat">Crew idle time 00:00:00</span>
          </div>
          <div class="speed-slider">
            <input type="range" id="speedSlider" min="1" max="60" step="1" />
            <span id="speedValue"></span>
          </div>
        </div>
        <div class="canvas-overlay canvas-overlay-bottom">
          <span id="detailsLabel"></span>
        </div>
      </div>
    </section>
  `,{canvas:document.querySelector("#beachCanvas"),derivedList:document.querySelector("#derivedMetrics"),status:document.querySelector("#status"),timeLabel:document.querySelector("#timeLabel"),loadedLabel:document.querySelector("#loadedLabel"),idleLabel:document.querySelector("#idleLabel"),toggleButton:document.querySelector("#toggleRun"),detailsLabel:document.querySelector("#detailsLabel"),derivedSection:document.querySelector("#derivedSection"),derivedToggle:document.querySelector("#toggleDerived"),speedSlider:document.querySelector("#speedSlider"),speedValue:document.querySelector("#speedValue"),atvOverrideInput:document.querySelector("#atvOverrideInput"),atvOverrideHint:document.querySelector("#atvOverrideHint")}}function Oe(t,v){Ie.forEach(o=>{const i=document.querySelector(`[data-section="${o.section}"]`);if(!i)return;const s=document.createElement("div");s.className="field";const e=document.createElement("label");e.textContent=o.label;let a;if(o.type==="select"&&Array.isArray(o.options))a=document.createElement("select"),o.options.forEach(b=>{const l=document.createElement("option");l.value=String(b.value),l.textContent=b.label,a.append(l)}),a.value=String(t[o.key]),a.addEventListener("change",()=>{const b=a.value,l=Number(b),C=o.options.every(N=>typeof N.value=="number")&&Number.isFinite(l)?l:b;v(o.key,C)});else{a=document.createElement("input");const b=o.type==="text"?"text":"number";if(a.type=b,o.key==="trailerCapacityM3"?a.value=Number(t[o.key]??0).toFixed(1):a.value=String(t[o.key]??""),o.placeholder&&(a.placeholder=o.placeholder),b==="number"){o.min!==void 0&&(a.min=String(o.min)),o.max!==void 0&&(a.max=String(o.max)),o.step!==void 0&&(a.step=String(o.step));const l=()=>{const f=Number(a.value);Number.isFinite(f)&&(v(o.key,f),o.key==="trailerCapacityM3"&&(a.value=f.toFixed(1)))};o.key==="trailerCapacityM3"?(a.addEventListener("change",l),a.addEventListener("blur",l)):a.addEventListener("input",l)}else a.addEventListener("input",()=>{v(o.key,a.value)})}s.append(e,a),i.append(s)})}function Re(t,v){const o=document.querySelector("#speedSlider"),i=document.querySelector("#speedValue");if(!o||!i)return;const s=e=>{const a=Math.max(1,Math.round(e));i.textContent=`1 s → ${a} min`,v(e)};o.value=String(t.minutesPerSecond),s(t.minutesPerSecond),o.addEventListener("input",()=>{const e=Number(o.value);!Number.isFinite(e)||e<=0||(t.minutesPerSecond=e,s(e))})}function We(t,v,o={}){const i=o.input??document.querySelector("#atvOverrideInput");if(!i)return;const s=e=>{const a=Number(e);!Number.isFinite(a)||a<=0?(t.atvOverrideCount=0,i.value="0"):(t.atvOverrideCount=Math.round(a),i.value=String(t.atvOverrideCount)),v()};i.value=t.atvOverrideCount>0?String(t.atvOverrideCount):"0",i.addEventListener("change",()=>{s(i.value)}),i.addEventListener("blur",()=>{s(i.value)}),i.addEventListener("keydown",e=>{e.key==="Enter"&&(e.preventDefault(),s(i.value))})}function Ve(t,v,o){t.innerHTML="",Fe.forEach(i=>{let s;i.key==="totalMinutes"?s=o.totalMinutes:i.key==="integerAtvs"?s=o.integerAtvs??v.integerAtvs:s=v[i.key];const e=document.createElement("li");e.className="metric-card";const a=document.createElement("span");a.className="label",a.textContent=i.label;const b=document.createElement("span");if(b.className="value",b.textContent=i.format?i.format(s):String(s),e.append(a,b),i.key==="integerAtvs"&&o.overrideAtvs){const l=document.createElement("span");l.className="note";const f=x(o.computedIntegerAtvs,{maximumFractionDigits:0});l.textContent=`Manual override active (computed ${f})`,e.append(l)}else if(i.note){const l=document.createElement("span");l.className="note",l.textContent=i.note,e.append(l)}t.append(e)})}function Be(t,v,o,i,s){const e=t.getContext("2d"),a=t.width,b=t.height,l=70;let f={loadMarkers:[],loadStates:[],segmentsByAtv:[],totalMinutes:1,numAtvs:0,beachLength:me.beachLengthM},C={...me},N=Le,H=[],D=!1,T=!1,A=0,P=null,M=null,S=[];const c=new Set,p=b*.3,L=b*.7;function B(){const n={paused:K(),manuallyPaused:D,autoPaused:T};c.forEach(r=>{try{r(n)}catch{}})}function O(){M!==null&&(cancelAnimationFrame(M),M=null)}function Z(){M===null&&!K()&&(M=requestAnimationFrame(ve))}function ne(n,r){f={...n,beachLength:r.beachLengthM},C={...r},H=new Array(f.numAtvs).fill(1),A=0,P=null,T=!1,S=z(f.loadStates??[]),ae(A),j(A),$(A),B(),Z()}function se(n){N=n,P=null}function q(n){const r=D;return typeof n=="boolean"?D=n:D=!D,D?r||O():(T&&(T=!1,A=0),P=null,Z()),B(),D}function K(){return D||T}function oe(n){return typeof n!="function"?()=>{}:(c.add(n),n({paused:K(),manuallyPaused:D,autoPaused:T}),()=>{c.delete(n)})}function z(n){const r=n.map(d=>{const g=Math.min(d.arrivalMin,d.cleanedAtMinute),m=Math.max(d.arrivalMin,d.cleanedAtMinute);return m>g?{start:g,end:m}:null}).filter(Boolean).sort((d,g)=>d.start-g.start);if(!r.length)return[];const h=[r[0]];for(let d=1;d<r.length;d+=1){const g=r[d],m=h[h.length-1];g.start<=m.end?m.end=Math.max(m.end,g.end):h.push({...g})}return h}function Y(n){if(!S.length||n<=S[0].start)return 0;let r=0;for(let h=0;h<S.length;h+=1){const{start:d,end:g}=S[h];if(n<=d)break;const m=Math.min(g,n);if(r+=Math.max(0,m-d),n<=g)break}return Math.min(r,Math.max(0,n))}function X(n){const r=Math.max(0,Math.floor(n*60)),h=Math.floor(r/3600),d=Math.floor(r%3600/60),g=r%60;return`${String(h).padStart(2,"0")}:${String(d).padStart(2,"0")}:${String(g).padStart(2,"0")}`}function ae(n){v&&(v.textContent=`Sim time ${X(n)}`)}function j(n){if(!o)return;const r=Number(C.trailerCapacityM3)||0;if(r<=0||!Array.isArray(f.loadStates)){o.textContent="Loaded 0.0 m³";return}let h=0;f.loadStates.forEach(g=>{const m=g.arrivalMin,u=g.cleanedAtMinute;if(!(!Number.isFinite(m)||!Number.isFinite(u)||u<=m)){if(n>=u)h+=r;else if(n>m){const F=Math.max(0,Math.min((n-m)/(u-m),1));h+=r*F}}});const d=x(h,{minimumFractionDigits:1,maximumFractionDigits:1});o.textContent=`Loaded ${d} m³`}function $(n){if(!i)return;const r=Y(n),h=Math.max(0,n-r);i.textContent=`Crew idle time ${X(h)}`}function ee(){e.fillStyle="#0f2034",e.fillRect(0,0,a,b);const n=e.createLinearGradient(0,p,0,L);n.addColorStop(0,"rgba(230, 254, 255, 0.08)"),n.addColorStop(.5,"rgba(110, 192, 230, 0.18)"),n.addColorStop(1,"rgba(255, 255, 255, 0.05)"),e.fillStyle=n,e.fillRect(l,p,a-l*2,L-p),e.strokeStyle="rgba(255, 255, 255, 0.25)",e.lineWidth=2,e.beginPath(),e.moveTo(l,L),e.lineTo(a-l,L),e.stroke(),e.save(),e.textAlign="center",e.fillStyle="rgba(255, 255, 255, 0.7)",e.font='16px "Inter", sans-serif';const r=Math.min(b-12,L+28),h=x(C.beachLengthM,{maximumFractionDigits:0});e.fillText(`Beach length = ${h} m`,a/2,r),e.restore()}function U(n){const r=a-l*2,d=(L-p)*.25,g=L-d;f.loadStates.forEach(m=>{const u=l+m.startPosM/f.beachLength*r,F=l+m.endPosM/f.beachLength*r,E=m.arrivalMin,y=m.cleanedAtMinute;if(y<=0||n>=y)return;let R=1;if(n>E){const w=Math.max(y-E,.01),k=Math.min(Math.max((n-E)/w,0),1);R=Math.max(0,1-k)}e.save(),e.globalAlpha=R;const I=e.createLinearGradient(u,g,F,L);I.addColorStop(0,"rgba(121, 85, 72, 0.92)"),I.addColorStop(.5,"rgba(93, 64, 55, 0.95)"),I.addColorStop(1,"rgba(121, 85, 72, 0.92)"),e.fillStyle=I,e.fillRect(u,g,F-u,d),e.restore()})}function V(n,r,h=1){if(!n.length)return{position:0,phase:"idle",loadId:null,direction:h,progress:0};const d=n[n.length-1].endMin;if(d===0)return{position:0,phase:"idle",loadId:null,direction:h,progress:0};let g=r%d,m=h;for(let E=0;E<n.length;E+=1){const y=n[E];if(g<y.startMin)return{position:y.startPosM,phase:"idle",loadId:y.loadId,direction:m,progress:0};if(g<=y.endMin||y.endMin===y.startMin){const R=y.endMin-y.startMin,I=R>0?(g-y.startMin)/R:1,w=y.startPosM+(y.endPosM-y.startPosM)*I,k=Math.sign(y.endPosM-y.startPosM);return k!==0&&(m=k),{position:w,phase:y.phase,loadId:y.loadId,direction:m,progress:I}}}const u=n[n.length-1],F=Math.sign(u.endPosM-u.startPosM);return F!==0&&(m=F),{position:u.endPosM,phase:"idle",loadId:u.loadId,direction:m,progress:0}}function Te(){e.strokeStyle="rgba(255, 255, 255, 0.12)",e.lineWidth=1,e.setLineDash([6,8]),f.loadMarkers.forEach(n=>{const r=l+n/f.beachLength*(a-l*2);e.beginPath(),e.moveTo(r,p),e.lineTo(r,L),e.stroke()}),e.setLineDash([])}function Ae(n,r,h,d=1,g=!1){e.save();const m=5,u=28,F=12,E=36,y=14,R=8,I=d>=0?1:-1,w=n-u/2,k=r-m-F,W=w+u,le=r-m-y+2;let _,G,te,de;if(I>=0?(G=w-R,_=G-E,te=w,de=G):(_=W+R,G=_+E,te=W,de=_),e.fillStyle=h,e.fillRect(w,k,u,F),e.fillStyle="rgba(255, 255, 255, 0.2)",e.fillRect(w+6,k+3,12,F-6),e.fillStyle=h,e.fillRect(_,le,E,y),g){const Q=y*.9,ye=E*.08,ue=_+ye,be=G-ye,ie=le+2,Ce=ie-Q;e.fillStyle="#8d6e63",e.beginPath(),e.moveTo(ue,ie),e.quadraticCurveTo((ue+be)/2,Ce,be,ie),e.lineTo(ue,ie),e.closePath(),e.fill()}e.strokeStyle="rgba(255, 255, 255, 0.4)",e.lineWidth=2,e.beginPath(),e.moveTo(te,r-m-2),e.lineTo(de,r-m+1),e.stroke();const he="rgba(15, 32, 52, 0.85)",xe=[{x:w+u*.25,y:r},{x:W-u*.25,y:r},{x:_+E*.2,y:r+1},{x:G-E*.2,y:r+1}];e.fillStyle=he,xe.forEach(Q=>{e.beginPath(),e.arc(Q.x,Q.y,m,0,Math.PI*2),e.fill(),e.fillStyle="rgba(255, 255, 255, 0.25)",e.beginPath(),e.arc(Q.x,Q.y,m*.4,0,Math.PI*2),e.fill(),e.fillStyle=he}),e.fillStyle="rgba(15, 32, 52, 0.85)";const fe=12,Pe=I>=0?W-fe+2:w-2;e.fillRect(Pe,k-6,fe,6),e.beginPath(),I>=0?(e.moveTo(W-u*.7,k),e.lineTo(W-u*.4,k-8),e.lineTo(W-u*.15,k-8),e.lineTo(W-u*.3,k)):(e.moveTo(w+u*.7,k),e.lineTo(w+u*.4,k-8),e.lineTo(w+u*.15,k-8),e.lineTo(w+u*.3,k)),e.closePath(),e.fill();const J=I>=0?W-u*.35:w+u*.35,ce=4,pe=k-ce-2,we=8,ge=6;e.fillStyle="#ffd180",e.beginPath(),e.arc(J,pe,ce,0,Math.PI*2),e.fill(),e.fillStyle="#0f2034",e.fillRect(J-ge/2,pe+ce-1,ge,we);const re=k+2,Me=10;e.strokeStyle="#cfd8dc",e.lineWidth=2,e.beginPath(),I>=0?(e.moveTo(J-2,re),e.lineTo(J-2-Me,re-2)):(e.moveTo(J+2,re),e.lineTo(J+2+Me,re-2)),e.stroke(),e.restore()}function ke(n){const r=[];f.segmentsByAtv.forEach((h,d)=>{const g=H[d]??1,{position:m,phase:u,loadId:F,direction:E,progress:y}=V(h,n,g);H[d]=E||g||1;const R=Se[d%Se.length],I=l+m/f.beachLength*(a-l*2),w=L-30-d*18,k=.001,W=u==="loading"&&y>=1-k||u==="return"||u==="hold"||u==="approach"||u==="transfer"&&y<1-k;Ae(I,w,R,H[d],W),e.fillStyle=R,e.font='12px "Inter", sans-serif',e.fillText(`ATV ${d+1}`,I-20,w+22);const _=(F?f.loadStates.find(te=>te.loadId===F):void 0)?.crew??"Crew",G=x(C.trailerCapacityM3,{minimumFractionDigits:1,maximumFractionDigits:1});r.push(`ATV ${d+1}: ${u} load ${F??"—"} (${_}, capacity ${G} m³)`)}),s.textContent=r.join("  •  ")}function ve(n){if(K()){M=null;return}P===null&&(P=n);const r=Math.max((n-P)/1e3,0);P=n;const h=Math.max(f.totalMinutes,1);A+=r*N,A>h&&(A=h);const d=A;if(ee(),U(d),Te(),ke(d),ae(d),j(d),$(d),A>=h){T=!0,M=null,B();return}M=requestAnimationFrame(ve)}return Z(),{update:ne,updateSpeed:se,toggleManualPause:q,isPaused:K,onStateChange:oe}}function $e(t,v,o){if(v.atvSpeedKmh<=0){t.textContent="Increase ATV speed above zero to animate the transport cycle.";return}if(o.trailersPerDay<=0||o.requiredAtvs<=0){t.textContent="Adjust inputs to produce a non-zero workload for ATVs.";return}t.textContent=""}function Ue(){const t={...me},v={...Ee},{canvas:o,derivedList:i,status:s,timeLabel:e,loadedLabel:a,idleLabel:b,toggleButton:l,detailsLabel:f,derivedSection:C,derivedToggle:N,atvOverrideInput:H,atvOverrideHint:D}=Ne(),T=Be(o,e,a,b,f);let A=!1;function P(){const M=He(t),S=v.atvOverrideCount>0?v.atvOverrideCount:null,c=qe(t,M,{overrideAtvCount:S}),p={totalMinutes:c.totalMinutes,integerAtvs:c.numAtvs,overrideAtvs:c.overrideAtvCount!=null,computedIntegerAtvs:M.integerAtvs};if(Ve(i,M,p),$e(s,t,M),T.update(c,t),D){const L=x(M.integerAtvs,{maximumFractionDigits:0});if(c.overrideAtvCount!=null){const B=x(c.overrideAtvCount,{maximumFractionDigits:0});D.textContent=`Manual override active (${B} ATVs, computed ${L}).`}else D.textContent=`Using computed requirement (${L} ATVs).`}}if(Oe(t,(M,S)=>{t[M]=S,P()}),Re(v,M=>{T.updateSpeed(M)}),l){const M=({paused:S})=>{l.textContent=S?"Run":"Pause"};T.onStateChange(M),l.addEventListener("click",()=>{const S=T.isPaused();T.toggleManualPause(!S)})}We(v,P,{input:H}),N.addEventListener("click",()=>{A=!A,C.classList.toggle("collapsed",A),N.textContent=A?"Show metrics":"Hide metrics"}),P()}Ue();
