(function(){const m=document.createElement("link").relList;if(m&&m.supports&&m.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))l(r);new MutationObserver(r=>{for(const e of r)if(e.type==="childList")for(const o of e.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&l(o)}).observe(document,{childList:!0,subtree:!0});function a(r){const e={};return r.integrity&&(e.integrity=r.integrity),r.referrerPolicy&&(e.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?e.credentials="include":r.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function l(r){if(r.ep)return;r.ep=!0;const e=a(r);fetch(r.href,e)}})();const Ae=52/12,fe=1,he=["#64ffda","#90caf9","#ffd54f","#ff8a80","#ce93d8","#80cbc4"],de={seasonLengthMonths:5,sargassumVolumeM3:7183.15,workDaysPerWeek:6,workHoursPerDay:5,trailerCapacityM3:2,timePerWorkerLoadM3Minutes:25,atvSpeedKmh:3,beachLengthM:600,loadTransferTimeMinutes:11,loadingMode:"single"},Te={minutesPerSecond:fe,atvOverrideEnabled:!1,atvOverrideCount:null},xe=[{key:"seasonLengthMonths",label:"Length of season (months)",min:1,max:12,step:.1,section:"season"},{key:"sargassumVolumeM3",label:"Estimated Sargassum volume (m³)",min:0,max:2e4,step:10,section:"season"},{key:"workDaysPerWeek",label:"Working days per week",min:1,max:7,step:1,section:"season"},{key:"workHoursPerDay",label:"Working hours per day",min:1,max:24,step:.5,section:"season"},{key:"trailerCapacityM3",label:"Trailer capacity (m³)",min:.1,max:5,step:.1,section:"labor"},{key:"timePerWorkerLoadM3Minutes",label:"Time to load 1 m³ per worker (minutes)",min:1,max:60,step:1,section:"labor"},{key:"atvSpeedKmh",label:"ATV speed (km/h)",min:0,max:15,step:.1,section:"atv"},{key:"beachLengthM",label:"Beach length (m)",min:60,max:1500,step:10,section:"atv"},{key:"loadTransferTimeMinutes",label:"Load transfer wait (minutes)",min:0,max:60,step:1,section:"atv"},{key:"loadingMode",label:"Loading mode",type:"select",options:[{value:"single",label:"Whole crew from west"},{value:"split",label:"Split crews west/east"}],section:"labor"}],ke=[{key:"avgDailyRemoval",label:"Average daily removal (m³)",format:t=>A(t,{maximumFractionDigits:2})},{key:"avgHourlyRemoval",label:"Average hourly removal (m³)",format:t=>A(t,{maximumFractionDigits:2})},{key:"trailersPerDay",label:"Trailer loads per day",format:t=>A(t,{maximumFractionDigits:2})},{key:"timeWorkerLoadHours",label:"Worker hours to load trailers (per day)",format:t=>A(t,{maximumFractionDigits:2})},{key:"requiredBeachWorkers",label:"Beach workers required (load crew)",format:t=>A(t,{maximumFractionDigits:2})},{key:"timeToLoadTrailerMinutes",label:"Time to load trailer (minutes)",format:t=>A(t,{maximumFractionDigits:2})},{key:"timeToLoadingAreaMinutes",label:"Travel to loading area (minutes)",format:t=>A(t,{maximumFractionDigits:2})},{key:"totalAtvTimePerLoadMinutes",label:"ATV cycle time per load (minutes)",format:t=>A(t,{maximumFractionDigits:2})},{key:"timePerAtvHours",label:"ATV duty time (hours/day)",format:t=>A(t,{maximumFractionDigits:2})},{key:"requiredAtvs",label:"Required # of ATVs",format:t=>A(t,{maximumFractionDigits:2})},{key:"requiredAtvDrivers",label:"Required # of ATV drivers",format:t=>A(t,{maximumFractionDigits:2})},{key:"requiredUnloadWorkers",label:"Required # of unload workers",format:t=>A(t,{maximumFractionDigits:2})},{key:"integerLoads",label:"Loads simulated today",format:t=>A(t,{maximumFractionDigits:0})},{key:"integerAtvs",label:"ATVs in rotation",format:t=>A(t,{maximumFractionDigits:0})},{key:"totalMinutes",label:"Day cycle duration (minutes)",format:t=>A(t,{maximumFractionDigits:1}),note:"Full rotation for busiest ATV within the day"}];function A(t,m={}){return Number.isFinite(t)?new Intl.NumberFormat("en-US",{maximumFractionDigits:2,minimumFractionDigits:0,...m}).format(t):"—"}function Pe(t){const m=t.seasonLengthMonths*Ae,a=m*t.workDaysPerWeek,l=a>0?t.sargassumVolumeM3/a:0,r=t.workHoursPerDay>0?l/t.workHoursPerDay:0,e=t.trailerCapacityM3>0?l/t.trailerCapacityM3:0,d=t.timePerWorkerLoadM3Minutes*l/60,s=t.workHoursPerDay>0?d/t.workHoursPerDay:0,g=s>0?t.trailerCapacityM3*t.timePerWorkerLoadM3Minutes/s:0,w=t.atvSpeedKmh*1e3/60,R=t.beachLengthM/2,D=w>0?R/w:0,E=D,T=D+g+E,S=T*e/60,x=t.workHoursPerDay>0?S/t.workHoursPerDay:0,k=x,M=t.workHoursPerDay>0?e*g/60/t.workHoursPerDay:0,c=Math.max(1,Math.round(e)),v=Math.max(1,Math.ceil(x));return{workingWeeks:m,workingDaysSeason:a,avgDailyRemoval:l,avgHourlyRemoval:r,trailersPerDay:e,timeWorkerLoadHours:d,requiredBeachWorkers:s,timeToLoadTrailerMinutes:g,timeToLoadingAreaMinutes:D,totalAtvTimePerLoadMinutes:T,timePerAtvHours:S,requiredAtvs:x,requiredAtvDrivers:k,requiredUnloadWorkers:M,integerLoads:c,integerAtvs:v}}function Ce(t,m,a={}){const l=m.integerLoads,r=Number(a.overrideAtvCount),e=Number.isFinite(r)&&r>0?Math.max(1,Math.round(r)):null,o=e??m.integerAtvs,d=[],s=[],g=Array.from({length:o},()=>[]),w=Array.from({length:o},()=>0),R=Math.max(0,t.loadTransferTimeMinutes??0);if(l<=0||o<=0)return{loadMarkers:d,segmentsByAtv:g,totalMinutes:0,numLoads:0,numAtvs:o,loadStates:s};const D=t.beachLengthM/l,E=m.timeToLoadTrailerMinutes,T=t.atvSpeedKmh>0?t.atvSpeedKmh*1e3/60:0;let S=0,x=0;const k=Array.from({length:l},(c,v)=>{const L=v*D,H=(v+1)*D,q=L+D/2;return{loadIndex:v+1,startPosM:L,endPosM:H,centerPosM:q}});d.push(...k.map(c=>c.centerPosM).sort((c,v)=>c-v));let M;if((t.loadingMode??"single")==="split"){M=[];let c=0,v=l-1,L=!0;for(;c<=v;)L?(M.push({...k[c],crew:"West crew"}),c+=1):(M.push({...k[v],crew:"East crew"}),v-=1),L=!L;M.length&&l%2===1&&(M[M.length-1].crew="Both crews")}else M=k.map(c=>({...c,crew:"Main crew"}));return M.forEach(c=>{const v=c.centerPosM,L=c.startPosM,H=c.endPosM,q=Math.min(v,5),Q=T>0?v/T:0,te=T>0?Math.max(v-q,0)/T:0,re=T>0?q/T:0;let N=0,K=w[0];for(let V=1;V<o;V+=1)w[V]<K-Number.EPSILON&&(K=w[V],N=V);const ne=w[N],z=ne+Q,Y=z+E,G=Y+te,ae=G+re;let j=0,$=ae;$<S&&(j=S-$,$=S);const Z=$+R,U=V=>{g[N].push(V),x=Math.max(x,V.endMin)};U({atvId:N,loadId:c.loadIndex,phase:"outbound",startMin:ne,endMin:z,startPosM:0,endPosM:v}),U({atvId:N,loadId:c.loadIndex,phase:"loading",startMin:z,endMin:Y,startPosM:v,endPosM:v}),te>0?U({atvId:N,loadId:c.loadIndex,phase:"return",startMin:Y,endMin:G,startPosM:v,endPosM:q}):U({atvId:N,loadId:c.loadIndex,phase:"return",startMin:Y,endMin:Y,startPosM:v,endPosM:q}),j>0&&U({atvId:N,loadId:c.loadIndex,phase:"hold",startMin:G,endMin:G+j,startPosM:q,endPosM:q}),U({atvId:N,loadId:c.loadIndex,phase:"approach",startMin:G+j,endMin:$,startPosM:q,endPosM:0}),U({atvId:N,loadId:c.loadIndex,phase:"transfer",startMin:$,endMin:Z,startPosM:0,endPosM:0}),w[N]=Z,S=Z,s.push({startPosM:L,endPosM:H,arrivalMin:z,cleanedAtMinute:Y,crew:c.crew,loadId:c.loadIndex})}),{loadMarkers:d,segmentsByAtv:g.map(c=>c.sort((v,L)=>v.startMin-L.startMin)),totalMinutes:x,numLoads:l,numAtvs:o,loadStates:s,overrideAtvCount:e}}function we(){const t=document.querySelector("#app");return t.innerHTML=`
    <section class="controls">
      <div class="control-header">
        <h1>HMB Beach Cleanup Model</h1>
        <p>Set the season-scale inputs from the spreadsheet; the animation shows how one workday plays out with those assumptions.</p>
      </div>
      <div class="controls-groups">
        <div class="control-group">
          <h2>Season Parameters</h2>
          <div class="input-grid" data-section="season"></div>
        </div>
        <div class="control-group">
          <h2>Trailer &amp; Labor</h2>
          <div class="input-grid" data-section="labor"></div>
        </div>
        <div class="control-group">
          <h2>ATV Operations</h2>
          <div class="input-grid" data-section="atv"></div>
          <div class="field override-field">
            <label for="atvOverrideToggle">Override # of ATVs</label>
            <div class="override-controls">
              <select id="atvOverrideToggle">
                <option value="no">No</option>
                <option value="yes">Yes</option>
              </select>
              <input
                type="number"
                id="atvOverrideInput"
                min="1"
                step="1"
                placeholder="Manual count"
              />
            </div>
            <span class="field-note" id="atvOverrideHint"></span>
          </div>
        </div>
      </div>
      <div class="derived-section" id="derivedSection">
        <div class="derived-header">
          <h2>Derived Metrics</h2>
          <button type="button" class="toggle-derived" id="toggleDerived">Hide metrics</button>
        </div>
        <ul class="metrics-list" id="derivedMetrics"></ul>
      </div>
      <div class="status" id="status"></div>
    </section>
    <section class="simulation">
      <div class="canvas-container">
        <canvas id="beachCanvas" width="960" height="520"></canvas>
        <div class="canvas-overlay canvas-overlay-top">
          <div class="sim-controls">
            <div class="sim-primary">
              <span id="timeLabel" class="sim-time">Sim time 00:00</span>
              <button type="button" id="toggleRun" class="toggle-run">Pause</button>
            </div>
            <span id="loadedLabel" class="sim-loaded">Loaded 0.0 m³</span>
            <span id="idleLabel" class="sim-idle">Crew idle time 00:00:00</span>
          </div>
          <div class="speed-slider">
            <input type="range" id="speedSlider" min="1" max="60" step="1" />
            <span id="speedValue"></span>
          </div>
        </div>
        <div class="canvas-overlay canvas-overlay-bottom">
          <span id="detailsLabel"></span>
        </div>
      </div>
    </section>
  `,{canvas:document.querySelector("#beachCanvas"),derivedList:document.querySelector("#derivedMetrics"),status:document.querySelector("#status"),timeLabel:document.querySelector("#timeLabel"),loadedLabel:document.querySelector("#loadedLabel"),idleLabel:document.querySelector("#idleLabel"),toggleButton:document.querySelector("#toggleRun"),detailsLabel:document.querySelector("#detailsLabel"),derivedSection:document.querySelector("#derivedSection"),derivedToggle:document.querySelector("#toggleDerived"),speedSlider:document.querySelector("#speedSlider"),speedValue:document.querySelector("#speedValue"),atvOverrideToggle:document.querySelector("#atvOverrideToggle"),atvOverrideInput:document.querySelector("#atvOverrideInput"),atvOverrideHint:document.querySelector("#atvOverrideHint")}}function Ee(t,m){xe.forEach(a=>{const l=document.querySelector(`[data-section="${a.section}"]`);if(!l)return;const r=document.createElement("div");r.className="field";const e=document.createElement("label");e.textContent=a.label;let o;if(a.type==="select"&&Array.isArray(a.options))o=document.createElement("select"),a.options.forEach(d=>{const s=document.createElement("option");s.value=String(d.value),s.textContent=d.label,o.append(s)}),o.value=String(t[a.key]),o.addEventListener("change",()=>{const d=o.value,s=Number(d),w=a.options.every(R=>typeof R.value=="number")&&Number.isFinite(s)?s:d;m(a.key,w)});else{o=document.createElement("input");const d=a.type==="text"?"text":"number";if(o.type=d,a.key==="trailerCapacityM3"?o.value=Number(t[a.key]??0).toFixed(1):o.value=String(t[a.key]??""),a.placeholder&&(o.placeholder=a.placeholder),d==="number"){a.min!==void 0&&(o.min=String(a.min)),a.max!==void 0&&(o.max=String(a.max)),a.step!==void 0&&(o.step=String(a.step));const s=()=>{const g=Number(o.value);Number.isFinite(g)&&(m(a.key,g),a.key==="trailerCapacityM3"&&(o.value=g.toFixed(1)))};a.key==="trailerCapacityM3"?(o.addEventListener("change",s),o.addEventListener("blur",s)):o.addEventListener("input",s)}else o.addEventListener("input",()=>{m(a.key,o.value)})}r.append(e,o),l.append(r)})}function De(t,m){const a=document.querySelector("#speedSlider"),l=document.querySelector("#speedValue");if(!a||!l)return;const r=e=>{const o=Math.max(1,Math.round(e));l.textContent=`1 s → ${o} min`,m(e)};a.value=String(t.minutesPerSecond),r(t.minutesPerSecond),a.addEventListener("input",()=>{const e=Number(a.value);!Number.isFinite(e)||e<=0||(t.minutesPerSecond=e,r(e))})}function Ie(t,m,a={}){const l=a.toggle??document.querySelector("#atvOverrideToggle"),r=a.input??document.querySelector("#atvOverrideInput");if(!l||!r)return;const e=d=>{r.disabled=!d,d||(t.atvOverrideCount=null,r.value="")};l.value=t.atvOverrideEnabled?"yes":"no",t.atvOverrideCount!=null&&(r.value=String(t.atvOverrideCount)),e(t.atvOverrideEnabled),l.addEventListener("change",()=>{const d=l.value==="yes";if(t.atvOverrideEnabled=d,d&&!r.value){const s=Number(l.dataset.computedAtvs);Number.isFinite(s)&&s>0&&(t.atvOverrideCount=Math.max(1,Math.round(s)),r.value=String(t.atvOverrideCount))}e(d),m()});const o=()=>{if(!t.atvOverrideEnabled)return;const d=Number(r.value);if(!Number.isFinite(d)||d<=0){t.atvOverrideCount=null,r.value="",m();return}t.atvOverrideCount=Math.round(d),r.value=String(t.atvOverrideCount),m()};r.addEventListener("blur",o),r.addEventListener("keydown",d=>{d.key==="Enter"&&o()})}function Oe(t,m,a){t.innerHTML="",ke.forEach(l=>{let r;l.key==="totalMinutes"?r=a.totalMinutes:l.key==="integerAtvs"?r=a.integerAtvs??m.integerAtvs:r=m[l.key];const e=document.createElement("li");e.className="metric-card";const o=document.createElement("span");o.className="label",o.textContent=l.label;const d=document.createElement("span");if(d.className="value",d.textContent=l.format?l.format(r):String(r),e.append(o,d),l.key==="integerAtvs"&&a.overrideAtvs){const s=document.createElement("span");s.className="note";const g=A(a.computedIntegerAtvs,{maximumFractionDigits:0});s.textContent=`Manual override active (computed ${g})`,e.append(s)}else if(l.note){const s=document.createElement("span");s.className="note",s.textContent=l.note,e.append(s)}t.append(e)})}function Fe(t,m,a,l,r){const e=t.getContext("2d"),o=t.width,d=t.height,s=70;let g={loadMarkers:[],loadStates:[],segmentsByAtv:[],totalMinutes:1,numAtvs:0,beachLength:de.beachLengthM},w={...de},R=fe,D=[],E=!1,T=!1,S=0,x=null,k=null,M=[];const c=new Set,v=d*.3,L=d*.7;function H(){const n={paused:K(),manuallyPaused:E,autoPaused:T};c.forEach(i=>{try{i(n)}catch{}})}function q(){k!==null&&(cancelAnimationFrame(k),k=null)}function Q(){k===null&&!K()&&(k=requestAnimationFrame(ce))}function te(n,i){g={...n,beachLength:i.beachLengthM},w={...i},D=new Array(g.numAtvs).fill(1),S=0,x=null,T=!1,M=z(g.loadStates??[]),ae(S),j(S),$(S),H(),Q()}function re(n){R=n,x=null}function N(n){const i=E;return typeof n=="boolean"?E=n:E=!E,E?i||q():(T&&(T=!1,S=0),x=null,Q()),H(),E}function K(){return E||T}function ne(n){return typeof n!="function"?()=>{}:(c.add(n),n({paused:K(),manuallyPaused:E,autoPaused:T}),()=>{c.delete(n)})}function z(n){const i=n.map(u=>{const y=Math.min(u.arrivalMin,u.cleanedAtMinute),p=Math.max(u.arrivalMin,u.cleanedAtMinute);return p>y?{start:y,end:p}:null}).filter(Boolean).sort((u,y)=>u.start-y.start);if(!i.length)return[];const f=[i[0]];for(let u=1;u<i.length;u+=1){const y=i[u],p=f[f.length-1];y.start<=p.end?p.end=Math.max(p.end,y.end):f.push({...y})}return f}function Y(n){if(!M.length||n<=M[0].start)return 0;let i=0;for(let f=0;f<M.length;f+=1){const{start:u,end:y}=M[f];if(n<=u)break;const p=Math.min(y,n);if(i+=Math.max(0,p-u),n<=y)break}return Math.min(i,Math.max(0,n))}function G(n){const i=Math.max(0,Math.floor(n*60)),f=Math.floor(i/3600),u=Math.floor(i%3600/60),y=i%60;return`${String(f).padStart(2,"0")}:${String(u).padStart(2,"0")}:${String(y).padStart(2,"0")}`}function ae(n){m&&(m.textContent=`Sim time ${G(n)}`)}function j(n){if(!a)return;const i=Number(w.trailerCapacityM3)||0;if(i<=0||!Array.isArray(g.loadStates)){a.textContent="Loaded 0.0 m³";return}let f=0;g.loadStates.forEach(y=>{const p=y.arrivalMin,h=y.cleanedAtMinute;if(!(!Number.isFinite(p)||!Number.isFinite(h)||h<=p)){if(n>=h)f+=i;else if(n>p){const O=Math.max(0,Math.min((n-p)/(h-p),1));f+=i*O}}});const u=A(f,{minimumFractionDigits:1,maximumFractionDigits:1});a.textContent=`Loaded ${u} m³`}function $(n){if(!l)return;const i=Y(n),f=Math.max(0,n-i);l.textContent=`Crew idle time ${G(f)}`}function Z(){e.fillStyle="#0f2034",e.fillRect(0,0,o,d);const n=e.createLinearGradient(0,v,0,L);n.addColorStop(0,"rgba(230, 254, 255, 0.08)"),n.addColorStop(.5,"rgba(110, 192, 230, 0.18)"),n.addColorStop(1,"rgba(255, 255, 255, 0.05)"),e.fillStyle=n,e.fillRect(s,v,o-s*2,L-v),e.strokeStyle="rgba(255, 255, 255, 0.25)",e.lineWidth=2,e.beginPath(),e.moveTo(s,L),e.lineTo(o-s,L),e.stroke(),e.save(),e.textAlign="center",e.fillStyle="rgba(255, 255, 255, 0.7)",e.font='16px "Inter", sans-serif';const i=Math.min(d-12,L+28),f=A(w.beachLengthM,{maximumFractionDigits:0});e.fillText(`Beach length = ${f} m`,o/2,i),e.restore()}function U(n){const i=o-s*2,u=(L-v)*.25,y=L-u;g.loadStates.forEach(p=>{const h=s+p.startPosM/g.beachLength*i,O=s+p.endPosM/g.beachLength*i,I=p.arrivalMin,b=p.cleanedAtMinute;if(b<=0||n>=b)return;let W=1;if(n>I){const C=Math.max(b-I,.01),P=Math.min(Math.max((n-I)/C,0),1);W=Math.max(0,1-P)}e.save(),e.globalAlpha=W;const F=e.createLinearGradient(h,y,O,L);F.addColorStop(0,"rgba(121, 85, 72, 0.92)"),F.addColorStop(.5,"rgba(93, 64, 55, 0.95)"),F.addColorStop(1,"rgba(121, 85, 72, 0.92)"),e.fillStyle=F,e.fillRect(h,y,O-h,u),e.restore()})}function V(n,i,f=1){if(!n.length)return{position:0,phase:"idle",loadId:null,direction:f,progress:0};const u=n[n.length-1].endMin;if(u===0)return{position:0,phase:"idle",loadId:null,direction:f,progress:0};let y=i%u,p=f;for(let I=0;I<n.length;I+=1){const b=n[I];if(y<b.startMin)return{position:b.startPosM,phase:"idle",loadId:b.loadId,direction:p,progress:0};if(y<=b.endMin||b.endMin===b.startMin){const W=b.endMin-b.startMin,F=W>0?(y-b.startMin)/W:1,C=b.startPosM+(b.endPosM-b.startPosM)*F,P=Math.sign(b.endPosM-b.startPosM);return P!==0&&(p=P),{position:C,phase:b.phase,loadId:b.loadId,direction:p,progress:F}}}const h=n[n.length-1],O=Math.sign(h.endPosM-h.startPosM);return O!==0&&(p=O),{position:h.endPosM,phase:"idle",loadId:h.loadId,direction:p,progress:0}}function ge(){e.strokeStyle="rgba(255, 255, 255, 0.12)",e.lineWidth=1,e.setLineDash([6,8]),g.loadMarkers.forEach(n=>{const i=s+n/g.beachLength*(o-s*2);e.beginPath(),e.moveTo(i,v),e.lineTo(i,L),e.stroke()}),e.setLineDash([])}function Me(n,i,f,u=1,y=!1){e.save();const p=5,h=28,O=12,I=36,b=14,W=8,F=u>=0?1:-1,C=n-h/2,P=i-p-O,B=C+h,ie=i-p-b+2;let _,X,ee,se;if(F>=0?(X=C-W,_=X-I,ee=C,se=X):(_=B+W,X=_+I,ee=B,se=_),e.fillStyle=f,e.fillRect(C,P,h,O),e.fillStyle="rgba(255, 255, 255, 0.2)",e.fillRect(C+6,P+3,12,O-6),e.fillStyle=f,e.fillRect(_,ie,I,b),y){const J=b*.9,ve=I*.08,le=_+ve,pe=X-ve,oe=ie+2,Le=oe-J;e.fillStyle="#8d6e63",e.beginPath(),e.moveTo(le,oe),e.quadraticCurveTo((le+pe)/2,Le,pe,oe),e.lineTo(le,oe),e.closePath(),e.fill()}e.strokeStyle="rgba(255, 255, 255, 0.4)",e.lineWidth=2,e.beginPath(),e.moveTo(ee,i-p-2),e.lineTo(se,i-p+1),e.stroke();const ue="rgba(15, 32, 52, 0.85)",be=[{x:C+h*.25,y:i},{x:B-h*.25,y:i},{x:_+I*.2,y:i+1},{x:X-I*.2,y:i+1}];e.fillStyle=ue,be.forEach(J=>{e.beginPath(),e.arc(J.x,J.y,p,0,Math.PI*2),e.fill(),e.fillStyle="rgba(255, 255, 255, 0.25)",e.beginPath(),e.arc(J.x,J.y,p*.4,0,Math.PI*2),e.fill(),e.fillStyle=ue}),e.fillStyle="rgba(15, 32, 52, 0.85)";const me=12,Se=F>=0?B-me+2:C-2;e.fillRect(Se,P-6,me,6),e.beginPath(),F>=0?(e.moveTo(B-h*.7,P),e.lineTo(B-h*.4,P-8),e.lineTo(B-h*.15,P-8),e.lineTo(B-h*.3,P)):(e.moveTo(C+h*.7,P),e.lineTo(C+h*.4,P-8),e.lineTo(C+h*.15,P-8),e.lineTo(C+h*.3,P)),e.closePath(),e.fill(),e.restore()}function ye(n){const i=[];g.segmentsByAtv.forEach((f,u)=>{const y=D[u]??1,{position:p,phase:h,loadId:O,direction:I,progress:b}=V(f,n,y);D[u]=I||y||1;const W=he[u%he.length],F=s+p/g.beachLength*(o-s*2),C=L-30-u*18,P=.001,B=h==="loading"&&b>=1-P||h==="return"||h==="hold"||h==="approach"||h==="transfer"&&b<1-P;Me(F,C,W,D[u],B),e.fillStyle=W,e.font='12px "Inter", sans-serif',e.fillText(`ATV ${u+1}`,F-20,C+22);const _=(O?g.loadStates.find(ee=>ee.loadId===O):void 0)?.crew??"Crew",X=A(w.trailerCapacityM3,{minimumFractionDigits:1,maximumFractionDigits:1});i.push(`ATV ${u+1}: ${h} load ${O??"—"} (${_}, capacity ${X} m³)`)}),r.textContent=i.join("  •  ")}function ce(n){if(K()){k=null;return}x===null&&(x=n);const i=Math.max((n-x)/1e3,0);x=n;const f=Math.max(g.totalMinutes,1);S+=i*R,S>f&&(S=f);const u=S;if(Z(),U(u),ge(),ye(u),ae(u),j(u),$(u),S>=f){T=!0,k=null,H();return}k=requestAnimationFrame(ce)}return Q(),{update:te,updateSpeed:re,toggleManualPause:N,isPaused:K,onStateChange:ne}}function qe(t,m,a){if(m.atvSpeedKmh<=0){t.textContent="Increase ATV speed above zero to animate the transport cycle.";return}if(a.trailersPerDay<=0||a.requiredAtvs<=0){t.textContent="Adjust inputs to produce a non-zero workload for ATVs.";return}t.textContent=""}function Ne(){const t={...de},m={...Te},{canvas:a,derivedList:l,status:r,timeLabel:e,loadedLabel:o,idleLabel:d,toggleButton:s,detailsLabel:g,derivedSection:w,derivedToggle:R,atvOverrideToggle:D,atvOverrideInput:E,atvOverrideHint:T}=we(),S=Fe(a,e,o,d,g);let x=!1;function k(){const M=Pe(t),c=m.atvOverrideEnabled?m.atvOverrideCount:null,v=Ce(t,M,{overrideAtvCount:c}),L={totalMinutes:v.totalMinutes,integerAtvs:v.numAtvs,overrideAtvs:v.overrideAtvCount!=null,computedIntegerAtvs:M.integerAtvs};if(Oe(l,M,L),qe(r,t,M),S.update(v,t),T){const H=A(M.integerAtvs,{maximumFractionDigits:0});if(v.overrideAtvCount!=null){const q=A(v.overrideAtvCount,{maximumFractionDigits:0});T.textContent=`Manual override active (${q} ATVs, computed ${H}).`}else T.textContent=`Using computed requirement (${H} ATVs).`}if(D&&(D.dataset.computedAtvs=String(M.integerAtvs)),E){const H=A(M.integerAtvs,{maximumFractionDigits:0});(!m.atvOverrideEnabled||m.atvOverrideCount==null)&&(E.placeholder=`Computed ${H}`)}}if(Ee(t,(M,c)=>{t[M]=c,k()}),De(m,M=>{S.updateSpeed(M)}),s){const M=({paused:c})=>{s.textContent=c?"Run":"Pause"};S.onStateChange(M),s.addEventListener("click",()=>{const c=S.isPaused();S.toggleManualPause(!c)})}Ie(m,k,{toggle:D,input:E}),R.addEventListener("click",()=>{x=!x,w.classList.toggle("collapsed",x),R.textContent=x?"Show metrics":"Hide metrics"}),k()}Ne();
