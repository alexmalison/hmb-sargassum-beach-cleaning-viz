(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))e(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&e(a)}).observe(document,{childList:!0,subtree:!0});function n(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function e(o){if(o.ep)return;o.ep=!0;const r=n(o);fetch(o.href,r)}})();const Q=52/12,z=1,j=["#64ffda","#90caf9","#ffd54f","#ff8a80","#ce93d8","#80cbc4"],K={seasonLengthMonths:5,sargassumVolumeM3:7183.15,workDaysPerWeek:6,workHoursPerDay:5,trailerCapacityM3:2,timePerWorkerLoadM3Minutes:25,atvSpeedKmh:3,beachLengthM:600,loadTransferTimeMinutes:11},Z={minutesPerSecond:z,atvOverrideEnabled:!1,atvOverrideCount:null},ee=[{key:"seasonLengthMonths",label:"Length of season (months)",min:1,max:12,step:.1,section:"season"},{key:"sargassumVolumeM3",label:"Estimated Sargassum volume (m³)",min:0,max:2e4,step:10,section:"season"},{key:"workDaysPerWeek",label:"Working days per week",min:1,max:7,step:1,section:"season"},{key:"workHoursPerDay",label:"Working hours per day",min:1,max:24,step:.5,section:"season"},{key:"trailerCapacityM3",label:"Trailer capacity (m³)",min:.1,max:5,step:.1,section:"labor"},{key:"timePerWorkerLoadM3Minutes",label:"Time to load 1 m³ per worker (minutes)",min:1,max:60,step:1,section:"labor"},{key:"atvSpeedKmh",label:"ATV speed (km/h)",min:0,max:15,step:.1,section:"atv"},{key:"beachLengthM",label:"Beach length (m)",min:60,max:1500,step:10,section:"atv"},{key:"loadTransferTimeMinutes",label:"Load transfer wait (minutes)",min:0,max:60,step:1,section:"atv"}],te=[{key:"avgDailyRemoval",label:"Average daily removal (m³)",format:t=>S(t,{maximumFractionDigits:2})},{key:"avgHourlyRemoval",label:"Average hourly removal (m³)",format:t=>S(t,{maximumFractionDigits:2})},{key:"trailersPerDay",label:"Trailer loads per day",format:t=>S(t,{maximumFractionDigits:2})},{key:"timeWorkerLoadHours",label:"Worker hours to load trailers (per day)",format:t=>S(t,{maximumFractionDigits:2})},{key:"requiredBeachWorkers",label:"Beach workers required (load crew)",format:t=>S(t,{maximumFractionDigits:2})},{key:"timeToLoadTrailerMinutes",label:"Time to load trailer (minutes)",format:t=>S(t,{maximumFractionDigits:2})},{key:"timeToLoadingAreaMinutes",label:"Travel to loading area (minutes)",format:t=>S(t,{maximumFractionDigits:2})},{key:"totalAtvTimePerLoadMinutes",label:"ATV cycle time per load (minutes)",format:t=>S(t,{maximumFractionDigits:2})},{key:"timePerAtvHours",label:"ATV duty time (hours/day)",format:t=>S(t,{maximumFractionDigits:2})},{key:"requiredAtvs",label:"Required # of ATVs",format:t=>S(t,{maximumFractionDigits:2})},{key:"requiredAtvDrivers",label:"Required # of ATV drivers",format:t=>S(t,{maximumFractionDigits:2})},{key:"requiredUnloadWorkers",label:"Required # of unload workers",format:t=>S(t,{maximumFractionDigits:2})},{key:"integerLoads",label:"Loads simulated today",format:t=>S(t,{maximumFractionDigits:0})},{key:"integerAtvs",label:"ATVs in rotation",format:t=>S(t,{maximumFractionDigits:0})},{key:"totalMinutes",label:"Day cycle duration (minutes)",format:t=>S(t,{maximumFractionDigits:1}),note:"Full rotation for busiest ATV within the day"}];function S(t,l={}){return Number.isFinite(t)?new Intl.NumberFormat("en-US",{maximumFractionDigits:2,minimumFractionDigits:0,...l}).format(t):"—"}function oe(t){const l=t.seasonLengthMonths*Q,n=l*t.workDaysPerWeek,e=n>0?t.sargassumVolumeM3/n:0,o=t.workHoursPerDay>0?e/t.workHoursPerDay:0,r=t.trailerCapacityM3>0?e/t.trailerCapacityM3:0,i=t.timePerWorkerLoadM3Minutes*e/60,d=t.workHoursPerDay>0?i/t.workHoursPerDay:0,f=d>0?t.trailerCapacityM3*t.timePerWorkerLoadM3Minutes/d:0,D=t.atvSpeedKmh*1e3/60,I=t.beachLengthM/2,E=D>0?I/D:0,L=E,w=E+f+L,M=w*r/60,F=t.workHoursPerDay>0?M/t.workHoursPerDay:0,O=F,N=t.workHoursPerDay>0?r*f/60/t.workHoursPerDay:0,H=Math.max(1,Math.round(r)),$=Math.max(1,Math.ceil(F));return{workingWeeks:l,workingDaysSeason:n,avgDailyRemoval:e,avgHourlyRemoval:o,trailersPerDay:r,timeWorkerLoadHours:i,requiredBeachWorkers:d,timeToLoadTrailerMinutes:f,timeToLoadingAreaMinutes:E,totalAtvTimePerLoadMinutes:w,timePerAtvHours:M,requiredAtvs:F,requiredAtvDrivers:O,requiredUnloadWorkers:N,integerLoads:H,integerAtvs:$}}function ae(t,l,n={}){const e=l.integerLoads,o=Number(n.overrideAtvCount),r=Number.isFinite(o)&&o>0?Math.max(1,Math.round(o)):null,a=r??l.integerAtvs,i=[],d=[],f=Array.from({length:a},()=>[]),D=Array.from({length:a},()=>0),I=Math.max(0,t.loadTransferTimeMinutes??0);if(e<=0||a<=0)return{loadMarkers:i,segmentsByAtv:f,totalMinutes:0,numLoads:0,numAtvs:a,loadStates:d};const E=t.beachLengthM/e,L=l.timeToLoadTrailerMinutes,w=t.atvSpeedKmh>0?t.atvSpeedKmh*1e3/60:0;let M=0,F=0;const O=Array.from({length:e},(g,T)=>{const s=T*E,c=(T+1)*E,h=s+E/2;return{loadIndex:T+1,startPosM:s,endPosM:c,centerPosM:h}});i.push(...O.map(g=>g.centerPosM).sort((g,T)=>g-T));const N=[];let H=0,$=e-1,B=!0;for(;H<=$;)B?(N.push({...O[H],crew:"West crew"}),H+=1):(N.push({...O[$],crew:"East crew"}),$-=1),B=!B;return N.length&&e%2===1&&(N[N.length-1].crew="Both crews"),N.forEach(g=>{const T=g.centerPosM,s=g.startPosM,c=g.endPosM,h=Math.min(T,5),y=w>0?T/w:0,b=w>0?Math.max(T-h,0)/w:0,m=w>0?h/w:0;let p=0,x=D[0];for(let V=1;V<a;V+=1)D[V]<x-Number.EPSILON&&(x=D[V],p=V);const C=D[p],u=C+y,k=u+L,v=k+b,P=v+m;let A=0,R=P;R<M&&(A=M-R,R=M);const W=R+I,q=V=>{f[p].push(V),F=Math.max(F,V.endMin)};q({atvId:p,loadId:g.loadIndex,phase:"outbound",startMin:C,endMin:u,startPosM:0,endPosM:T}),q({atvId:p,loadId:g.loadIndex,phase:"loading",startMin:u,endMin:k,startPosM:T,endPosM:T}),b>0?q({atvId:p,loadId:g.loadIndex,phase:"return",startMin:k,endMin:v,startPosM:T,endPosM:h}):q({atvId:p,loadId:g.loadIndex,phase:"return",startMin:k,endMin:k,startPosM:T,endPosM:h}),A>0&&q({atvId:p,loadId:g.loadIndex,phase:"hold",startMin:v,endMin:v+A,startPosM:h,endPosM:h}),q({atvId:p,loadId:g.loadIndex,phase:"approach",startMin:v+A,endMin:R,startPosM:h,endPosM:0}),q({atvId:p,loadId:g.loadIndex,phase:"transfer",startMin:R,endMin:W,startPosM:0,endPosM:0}),D[p]=W,M=W,d.push({startPosM:s,endPosM:c,arrivalMin:u,cleanedAtMinute:k,crew:g.crew,loadId:g.loadIndex})}),{loadMarkers:i,segmentsByAtv:f.map(g=>g.sort((T,s)=>T.startMin-s.startMin)),totalMinutes:F,numLoads:e,numAtvs:a,loadStates:d,overrideAtvCount:r}}function ne(){const t=document.querySelector("#app");return t.innerHTML=`
    <section class="controls">
      <div class="control-header">
        <h1>HMB Beach Cleanup Model</h1>
        <p>Set the season-scale inputs from the spreadsheet; the animation shows how one workday plays out with those assumptions.</p>
      </div>
      <div class="controls-groups">
        <div class="control-group">
          <h2>Season Parameters</h2>
          <div class="input-grid" data-section="season"></div>
        </div>
        <div class="control-group">
          <h2>Trailer &amp; Labor</h2>
          <div class="input-grid" data-section="labor"></div>
        </div>
        <div class="control-group">
          <h2>ATV Operations</h2>
          <div class="input-grid" data-section="atv"></div>
          <div class="field override-field">
            <label for="atvOverrideToggle">Override # of ATVs</label>
            <div class="override-controls">
              <select id="atvOverrideToggle">
                <option value="no">No</option>
                <option value="yes">Yes</option>
              </select>
              <input
                type="number"
                id="atvOverrideInput"
                min="1"
                step="1"
                placeholder="Manual count"
              />
            </div>
            <span class="field-note" id="atvOverrideHint"></span>
          </div>
        </div>
      </div>
      <div class="derived-section" id="derivedSection">
        <div class="derived-header">
          <h2>Derived Metrics</h2>
          <button type="button" class="toggle-derived" id="toggleDerived">Hide metrics</button>
        </div>
        <ul class="metrics-list" id="derivedMetrics"></ul>
      </div>
      <div class="status" id="status"></div>
    </section>
    <section class="simulation">
      <div class="canvas-container">
        <canvas id="beachCanvas" width="960" height="520"></canvas>
        <div class="canvas-overlay canvas-overlay-top">
          <span id="timeLabel" class="sim-time">Sim time 00:00</span>
          <div class="speed-slider">
            <input type="range" id="speedSlider" min="1" max="60" step="1" />
            <span id="speedValue"></span>
          </div>
        </div>
        <div class="canvas-overlay canvas-overlay-bottom">
          <span id="detailsLabel"></span>
        </div>
      </div>
    </section>
  `,{canvas:document.querySelector("#beachCanvas"),derivedList:document.querySelector("#derivedMetrics"),status:document.querySelector("#status"),timeLabel:document.querySelector("#timeLabel"),detailsLabel:document.querySelector("#detailsLabel"),derivedSection:document.querySelector("#derivedSection"),derivedToggle:document.querySelector("#toggleDerived"),speedSlider:document.querySelector("#speedSlider"),speedValue:document.querySelector("#speedValue"),atvOverrideToggle:document.querySelector("#atvOverrideToggle"),atvOverrideInput:document.querySelector("#atvOverrideInput"),atvOverrideHint:document.querySelector("#atvOverrideHint")}}function re(t,l){ee.forEach(n=>{const e=document.querySelector(`[data-section="${n.section}"]`);if(!e)return;const o=document.createElement("div");o.className="field";const r=document.createElement("label");r.textContent=n.label;let a;if(n.type==="select"&&Array.isArray(n.options))a=document.createElement("select"),n.options.forEach(i=>{const d=document.createElement("option");d.value=String(i.value),d.textContent=i.label,a.append(d)}),a.value=String(t[n.key]),a.addEventListener("change",()=>{const i=a.value,d=Number(i),D=n.options.every(I=>typeof I.value=="number")&&Number.isFinite(d)?d:i;l(n.key,D)});else{a=document.createElement("input");const i=n.type==="text"?"text":"number";if(a.type=i,n.key==="trailerCapacityM3"?a.value=Number(t[n.key]??0).toFixed(1):a.value=String(t[n.key]??""),n.placeholder&&(a.placeholder=n.placeholder),i==="number"){n.min!==void 0&&(a.min=String(n.min)),n.max!==void 0&&(a.max=String(n.max)),n.step!==void 0&&(a.step=String(n.step));const d=()=>{const f=Number(a.value);Number.isFinite(f)&&(l(n.key,f),n.key==="trailerCapacityM3"&&(a.value=f.toFixed(1)))};n.key==="trailerCapacityM3"?(a.addEventListener("change",d),a.addEventListener("blur",d)):a.addEventListener("input",d)}else a.addEventListener("input",()=>{l(n.key,a.value)})}o.append(r,a),e.append(o)})}function ie(t,l){const n=document.querySelector("#speedSlider"),e=document.querySelector("#speedValue");if(!n||!e)return;const o=r=>{const a=Math.max(1,Math.round(r));e.textContent=`1 s → ${a} min`,l(r)};n.value=String(t.minutesPerSecond),o(t.minutesPerSecond),n.addEventListener("input",()=>{const r=Number(n.value);!Number.isFinite(r)||r<=0||(t.minutesPerSecond=r,o(r))})}function se(t,l,n={}){const e=n.toggle??document.querySelector("#atvOverrideToggle"),o=n.input??document.querySelector("#atvOverrideInput");if(!e||!o)return;const r=i=>{o.disabled=!i,i||(t.atvOverrideCount=null,o.value="")};e.value=t.atvOverrideEnabled?"yes":"no",t.atvOverrideCount!=null&&(o.value=String(t.atvOverrideCount)),r(t.atvOverrideEnabled),e.addEventListener("change",()=>{const i=e.value==="yes";if(t.atvOverrideEnabled=i,i&&!o.value){const d=Number(e.dataset.computedAtvs);Number.isFinite(d)&&d>0&&(t.atvOverrideCount=Math.max(1,Math.round(d)),o.value=String(t.atvOverrideCount))}r(i),l()});const a=()=>{if(!t.atvOverrideEnabled)return;const i=Number(o.value);if(!Number.isFinite(i)||i<=0){t.atvOverrideCount=null,o.value="",l();return}t.atvOverrideCount=Math.round(i),o.value=String(t.atvOverrideCount),l()};o.addEventListener("blur",a),o.addEventListener("keydown",i=>{i.key==="Enter"&&a()})}function le(t,l,n){t.innerHTML="",te.forEach(e=>{let o;e.key==="totalMinutes"?o=n.totalMinutes:e.key==="integerAtvs"?o=n.integerAtvs??l.integerAtvs:o=l[e.key];const r=document.createElement("li");r.className="metric-card";const a=document.createElement("span");a.className="label",a.textContent=e.label;const i=document.createElement("span");if(i.className="value",i.textContent=e.format?e.format(o):String(o),r.append(a,i),e.key==="integerAtvs"&&n.overrideAtvs){const d=document.createElement("span");d.className="note";const f=S(n.computedIntegerAtvs,{maximumFractionDigits:0});d.textContent=`Manual override active (computed ${f})`,r.append(d)}else if(e.note){const d=document.createElement("span");d.className="note",d.textContent=e.note,r.append(d)}t.append(r)})}function de(t,l,n){const e=t.getContext("2d"),o=t.width,r=t.height,a=70;let i={loadMarkers:[],loadStates:[],segmentsByAtv:[],totalMinutes:1,numAtvs:0,beachLength:K.beachLengthM},d={...K},f=null,D=z,I=[];const E=r*.3,L=r*.7;function w(s,c){i={...s,beachLength:c.beachLengthM},d={...c},f=null,I=new Array(i.numAtvs).fill(1)}function M(s){D=s}function F(s){const c=Math.floor(s/60),h=Math.floor(s%60),y=Math.floor(s%1*60),b=`${String(c).padStart(2,"0")}:${String(h).padStart(2,"0")}:${String(y).padStart(2,"0")}`;l&&(l.textContent=`Sim time ${b}`)}function O(){e.fillStyle="#0f2034",e.fillRect(0,0,o,r);const s=e.createLinearGradient(0,E,0,L);s.addColorStop(0,"rgba(230, 254, 255, 0.08)"),s.addColorStop(.5,"rgba(110, 192, 230, 0.18)"),s.addColorStop(1,"rgba(255, 255, 255, 0.05)"),e.fillStyle=s,e.fillRect(a,E,o-a*2,L-E),e.strokeStyle="rgba(255, 255, 255, 0.25)",e.lineWidth=2,e.beginPath(),e.moveTo(a,L),e.lineTo(o-a,L),e.stroke(),e.save(),e.textAlign="center",e.fillStyle="rgba(255, 255, 255, 0.7)",e.font='16px "Inter", sans-serif';const c=Math.min(r-12,L+28),h=S(d.beachLengthM,{maximumFractionDigits:0});e.fillText(`Beach length = ${h} m`,o/2,c),e.restore()}function N(s){const c=o-a*2,y=(L-E)*.25,b=L-y;i.loadStates.forEach(m=>{const p=a+m.startPosM/i.beachLength*c,x=a+m.endPosM/i.beachLength*c,C=m.arrivalMin,u=m.cleanedAtMinute;if(u<=0||s>=u)return;let k=1;if(s>C){const P=Math.max(u-C,.01),A=Math.min(Math.max((s-C)/P,0),1);k=Math.max(0,1-A)}e.save(),e.globalAlpha=k;const v=e.createLinearGradient(p,b,x,L);v.addColorStop(0,"rgba(121, 85, 72, 0.92)"),v.addColorStop(.5,"rgba(93, 64, 55, 0.95)"),v.addColorStop(1,"rgba(121, 85, 72, 0.92)"),e.fillStyle=v,e.fillRect(p,b,x-p,y),e.restore()})}function H(s,c,h=1){if(!s.length)return{position:0,phase:"idle",loadId:null,direction:h};const y=s[s.length-1].endMin;if(y===0)return{position:0,phase:"idle",loadId:null,direction:h};let b=c%y,m=h;for(let C=0;C<s.length;C+=1){const u=s[C];if(b<u.startMin)return{position:u.startPosM,phase:"idle",loadId:u.loadId,direction:m};if(b<=u.endMin||u.endMin===u.startMin){const k=u.endMin-u.startMin,v=k>0?(b-u.startMin)/k:1,P=u.startPosM+(u.endPosM-u.startPosM)*v,A=Math.sign(u.endPosM-u.startPosM);return A!==0&&(m=A),{position:P,phase:u.phase,loadId:u.loadId,direction:m}}}const p=s[s.length-1],x=Math.sign(p.endPosM-p.startPosM);return x!==0&&(m=x),{position:p.endPosM,phase:"idle",loadId:p.loadId,direction:m}}function $(){e.strokeStyle="rgba(255, 255, 255, 0.12)",e.lineWidth=1,e.setLineDash([6,8]),i.loadMarkers.forEach(s=>{const c=a+s/i.beachLength*(o-a*2);e.beginPath(),e.moveTo(c,E),e.lineTo(c,L),e.stroke()}),e.setLineDash([])}function B(s,c,h,y=1){e.save();const b=5,m=28,p=12,x=36,C=14,u=8,k=y>=0?1:-1,v=s-m/2,P=c-b-p,A=v+m,R=c-b-C+2;let W,q,V,U;k>=0?(q=v-u,W=q-x,V=v,U=q):(W=A+u,q=W+x,V=A,U=W),e.fillStyle=h,e.fillRect(v,P,m,p),e.fillStyle="rgba(255, 255, 255, 0.2)",e.fillRect(v+6,P+3,12,p-6),e.fillStyle=h,e.fillRect(W,R,x,C),e.strokeStyle="rgba(255, 255, 255, 0.4)",e.lineWidth=2,e.beginPath(),e.moveTo(V,c-b-2),e.lineTo(U,c-b+1),e.stroke();const G="rgba(15, 32, 52, 0.85)",Y=[{x:v+m*.25,y:c},{x:A-m*.25,y:c},{x:W+x*.2,y:c+1},{x:q-x*.2,y:c+1}];e.fillStyle=G,Y.forEach(_=>{e.beginPath(),e.arc(_.x,_.y,b,0,Math.PI*2),e.fill(),e.fillStyle="rgba(255, 255, 255, 0.25)",e.beginPath(),e.arc(_.x,_.y,b*.4,0,Math.PI*2),e.fill(),e.fillStyle=G}),e.fillStyle="rgba(15, 32, 52, 0.85)";const X=12,J=k>=0?A-X+2:v-2;e.fillRect(J,P-6,X,6),e.beginPath(),k>=0?(e.moveTo(A-m*.7,P),e.lineTo(A-m*.4,P-8),e.lineTo(A-m*.15,P-8),e.lineTo(A-m*.3,P)):(e.moveTo(v+m*.7,P),e.lineTo(v+m*.4,P-8),e.lineTo(v+m*.15,P-8),e.lineTo(v+m*.3,P)),e.closePath(),e.fill(),e.restore()}function g(s){const c=[];i.segmentsByAtv.forEach((h,y)=>{const b=I[y]??1,{position:m,phase:p,loadId:x,direction:C}=H(h,s,b);I[y]=C||b||1;const u=j[y%j.length],k=a+m/i.beachLength*(o-a*2),v=L-30-y*18;B(k,v,u,I[y]),e.fillStyle=u,e.font='12px "Inter", sans-serif',e.fillText(`ATV ${y+1}`,k-20,v+22);const A=(x?i.loadStates.find(W=>W.loadId===x):void 0)?.crew??"Crew",R=S(d.trailerCapacityM3,{minimumFractionDigits:1,maximumFractionDigits:1});c.push(`ATV ${y+1}: ${p} load ${x??"—"} (${A}, capacity ${R} m³)`)}),n.textContent=c.join("  •  ")}function T(s){f||(f=s);const c=(s-f)/1e3,h=Math.max(i.totalMinutes,1),y=c*D%h;O(),N(y),$(),g(y),F(y),requestAnimationFrame(T)}return requestAnimationFrame(T),{update:w,updateSpeed:M}}function ce(t,l,n){if(l.atvSpeedKmh<=0){t.textContent="Increase ATV speed above zero to animate the transport cycle.";return}if(n.trailersPerDay<=0||n.requiredAtvs<=0){t.textContent="Adjust inputs to produce a non-zero workload for ATVs.";return}t.textContent=""}function ue(){const t={...K},l={...Z},{canvas:n,derivedList:e,status:o,timeLabel:r,detailsLabel:a,derivedSection:i,derivedToggle:d,atvOverrideToggle:f,atvOverrideInput:D,atvOverrideHint:I}=ne(),E=de(n,r,a);let L=!1;function w(){const M=oe(t),F=l.atvOverrideEnabled?l.atvOverrideCount:null,O=ae(t,M,{overrideAtvCount:F}),N={totalMinutes:O.totalMinutes,integerAtvs:O.numAtvs,overrideAtvs:O.overrideAtvCount!=null,computedIntegerAtvs:M.integerAtvs};if(le(e,M,N),ce(o,t,M),E.update(O,t),I){const H=S(M.integerAtvs,{maximumFractionDigits:0});if(O.overrideAtvCount!=null){const $=S(O.overrideAtvCount,{maximumFractionDigits:0});I.textContent=`Manual override active (${$} ATVs, computed ${H}).`}else I.textContent=`Using computed requirement (${H} ATVs).`}if(f&&(f.dataset.computedAtvs=String(M.integerAtvs)),D){const H=S(M.integerAtvs,{maximumFractionDigits:0});(!l.atvOverrideEnabled||l.atvOverrideCount==null)&&(D.placeholder=`Computed ${H}`)}}re(t,(M,F)=>{t[M]=F,w()}),ie(l,M=>{E.updateSpeed(M)}),se(l,w,{toggle:f,input:D}),d.addEventListener("click",()=>{L=!L,i.classList.toggle("collapsed",L),d.textContent=L?"Show metrics":"Hide metrics"}),w()}ue();
